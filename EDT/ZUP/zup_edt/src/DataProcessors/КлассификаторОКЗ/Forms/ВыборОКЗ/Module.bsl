#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("ОКЗКод", ОКЗКод);
	ЗаполнитьКлассификатор();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(ОКЗКод) Тогда
		НайтиИПозиционировать(ОКЗКод, "Code");
	КонецЕсли;
	ТекущаяСтрокаКлассификатора = Элементы.КлассификаторОКЗ.ТекущаяСтрока;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКлассификаторОКЗ

&НаКлиенте
Процедура КлассификаторОКЗВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВыбратьИЗакрыть();
КонецПроцедуры

&НаКлиенте
Процедура КлассификаторОКЗПриАктивизацииСтроки(Элемент)
	ТекущаяСтрокаКлассификатора = Элементы.КлассификаторОКЗ.ТекущаяСтрока;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	ВыбратьИЗакрыть();
КонецПроцедуры

&НаКлиенте
Процедура Искать(Команда)
	НайтиИПозиционировать(ТекстПоискаОКЗ);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьКлассификатор()
	
	КлассификаторXML = Обработки.КлассификаторОКЗ.ПолучитьМакет("КлассификаторОКЗ").ПолучитьТекст();
	Классификатор = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	КлассификаторДерево = Новый ДеревоЗначений;
	КлассификаторДерево.Колонки.Добавить("Code");
	КлассификаторДерево.Колонки.Добавить("Name");
	КлассификаторДерево.Колонки.Добавить("КЧ");
		
	ТекущийУровень = 0;
	ТекущаяСтрока = Неопределено;
	Для Каждого СтрокаКлассификатора Из Классификатор Цикл
		Уровень = Число(СтрокаКлассификатора.level);
		Если Уровень > ТекущийУровень Тогда
			Строка = ТекущаяСтрока.Строки.Добавить();
		Иначе
			Строка = КлассификаторДерево.Строки.Добавить();
			ТекущийУровень = Уровень;
			ТекущаяСтрока  = Строка;
		КонецЕсли;
		Код = СтрокаКлассификатора.Code;
		ДлинаКода = СтрДлина(Код);
		Если ДлинаКода = 1 Тогда
			КЧ = "";
		Иначе
			КЧ = Прав(Код, 1);
			Код = Лев(Код, ДлинаКода-1);
		КонецЕсли;
		
		Строка.Code = Код;
		Строка.Name = СтрокаКлассификатора.Name;
		Строка.КЧ   = КЧ;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(КлассификаторДерево, "КлассификаторОКЗ");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИЗакрыть()
	
	Результат = Новый Структура;
	Результат.Вставить("ОКЗКод", Лев(Элементы.КлассификаторОКЗ.ТекущиеДанные.Code, 4));

	Закрыть(Результат);

КонецПроцедуры

&НаКлиенте
Процедура НайтиИПозиционировать(ТекстПоиска, ПолеПоиска = Неопределено)
	
	Если ПолеПоиска = Неопределено Тогда
		ПолеПоиска= ?(СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ТекстПоиска), "Code", "Name");
	КонецЕсли;
	
// если не найдено от текущей строки, то поиск происходит с начала дерева
	ИдентификаторСтрокиПоиска = ТекущаяСтрокаКлассификатора;
	Если Не ОбщегоНазначенияБЗККлиентСервер.СледующийИдентификаторСтрокиДереваПоЗначениюПоля(
			ИдентификаторСтрокиПоиска,
			КлассификаторОКЗ,
			ПолеПоиска, 
			ТекстПоиска) Тогда
		ИдентификаторСтрокиПоиска = ОбщегоНазначенияБЗККлиентСервер.ИдентификаторСтрокиДереваПоЗначениюПоля(
				КлассификаторОКЗ,
				ПолеПоиска, 
				ТекстПоиска);
	КонецЕсли;
	
	ТекущаяСтрокаКлассификатора = ?(ИдентификаторСтрокиПоиска=Неопределено, ТекущаяСтрокаКлассификатора, ИдентификаторСтрокиПоиска);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, "КлассификаторОКЗ", 
		"ТекущаяСтрока", ТекущаяСтрокаКлассификатора);
	
КонецПроцедуры

#КонецОбласти