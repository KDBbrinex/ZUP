
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТипОсмотра = Перечисления.ТипыМедицинскогоОсмотра.Периодический;
	
	ЗаполнитьНаправления(Параметры.ДанныеНаправлений);
	Организация = Параметры.Организация;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(ТипОсмотра) Тогда
		ТекстСообщения = НСтр("ru = 'Тип осмотра не заполнен'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , "ТипОсмотра", Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыборПериода(Команда)
	НачатьВыборПериодаЗаполнения();
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыНаправлений = ОписаниеНаправлений();
	ЗаполнитьПараметрыНаправлений(ПараметрыНаправлений);
	
	Закрыть(ПараметрыНаправлений);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьИНапечатать(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыНаправлений = ОписаниеНаправлений();
	ЗаполнитьПараметрыНаправлений(ПараметрыНаправлений);
	ПараметрыНаправлений.Печатать = Истина;
	
	Закрыть(ПараметрыНаправлений);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПоДням(Команда)
	
	НачатьРаспределениеПоДням();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеНаправлений()
	
	Описание = Новый Структура(
		"Организация,
		|ТипОсмотра,
		|МедицинскаяОрганизация,
		|ОписанияНаправлений,
		|Печатать");
	
	Описание.ОписанияНаправлений = Новый Массив;
	Описание.Печатать = Ложь;
	
	Возврат Описание;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеНаправления()
	
	Описание = Новый Структура(
		"ФизическоеЛицо,
		|Позиция,
		|ДатаОсмотра,
		|Направление, 
		|ИдентификаторСтроки");
	
	Возврат Описание;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПараметрыНаправлений(ПараметрыНаправлений)
	
	ПараметрыНаправлений.Организация = Организация;
	ПараметрыНаправлений.ТипОсмотра = ТипОсмотра;
	ПараметрыНаправлений.МедицинскаяОрганизация = МедицинскаяОрганизация;
	
	ЗаполнитьОписанияНаправлений(ПараметрыНаправлений.ОписанияНаправлений);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОписанияНаправлений(ОписанияНаправлений)
	
	Для Каждого СтрокаТаблицы Из Направления Цикл
		Описание = ОписаниеНаправления();
		ЗаполнитьЗначенияСвойств(Описание, СтрокаТаблицы);
		Описание.ИдентификаторСтроки = СтрокаТаблицы.ПолучитьИдентификатор();
		ОписанияНаправлений.Добавить(Описание);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаправления(ДанныеНаправлений)
	
	МедицинскиеОсмотры.ЗаполнитьВыданныеРанееНаправления(ДанныеНаправлений);
	
	НаправленияМассив = ОбщегоНазначения.ВыгрузитьКолонку(ДанныеНаправлений, "Направление");
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(НаправленияМассив, Неопределено);
	ДатыОсмотра = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(НаправленияМассив, "ДатаОсмотра");
	
	Для Каждого Описание Из Параметры.ДанныеНаправлений Цикл
		НоваяСтрока = Направления.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Описание);
		Если ЗначениеЗаполнено(Описание.Направление) Тогда
			НоваяСтрока.ДатаОсмотра = ДатыОсмотра[Описание.Направление];
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьВыборПериодаЗаполнения()
	
	Оповещение = Новый ОписаниеОповещения("ЗаполнениеПослеВыбораПериода", ЭтотОбъект);
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода;
	Диалог.Период.Вариант = ВариантСтандартногоПериода.СледующаяНеделя;
	Диалог.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнениеПослеВыбораПериода(ВыбранныйПериод, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйПериод = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПериодОсмотра = ВыбранныйПериод;
	
	ПоказатьВопросОРаспределенииПоДням();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросОРаспределенииПоДням()
	
	ТекстВопроса = НСтр("ru = 'Заполнить даты осмотра, равномерно распределив сотрудников по датам в выбранном интервале?'");
	ОбработчикОповещения = Новый ОписаниеОповещения("РаспределенииПоДнямПослеВыбораПериода", ЭтотОбъект);
	ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределенииПоДнямПослеВыбораПериода(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	НачатьРаспределениеПоДням();
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьРаспределениеПоДням()
	
	Отказ = Ложь;
	ПроверитьЗаполнениеПериодаОсмотра(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = РаспределитьПоДнямНаСервере();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Подбор оптимальных дней с учетом графика работы сотрудника'");
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ВыводитьСообщения = Истина;

	ОповещениеОЗавершении = Новый ОписаниеОповещения("РаспределитьПоДнямЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция РаспределитьПоДнямНаСервере()
	
	ПараметрыПроцедуры = Новый Структура("ВыбранныйПериод, ОписанияНаправлений");
	ПараметрыПроцедуры.ВыбранныйПериод = ПериодОсмотра;
	ПараметрыПроцедуры.ОписанияНаправлений = Новый Массив;
	ЗаполнитьОписанияНаправлений(ПараметрыПроцедуры.ОписанияНаправлений);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Подбор дат осмотра в выбранном интервале'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне("МедицинскиеОсмотры.РаспределитьОсмотрыПоДнямДлительнаяОперация", ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура РаспределитьПоДнямЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.ПодробноеПредставлениеОшибки;
	КонецЕсли;
	
	ЗаполнитьДатыОсмотраНаСервере(Результат.АдресРезультата);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДатыОсмотраНаСервере(АдресРезультата)
	
	ОписанияНаправлений = ПолучитьИзВременногоХранилища(АдресРезультата);
	Для Каждого Описание Из ОписанияНаправлений Цикл
		СтрокаТаблицы = Направления.НайтиПоИдентификатору(Описание.ИдентификаторСтроки);
		СтрокаТаблицы.ДатаОсмотра = Описание.ДатаОсмотра;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеПериодаОсмотра(Отказ)
	
	Если Не ЗначениеЗаполнено(ПериодОсмотра.ДатаНачала) Тогда
		ТекстСообщения = НСтр("ru = 'Дата начала не заполнена'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "ПериодОсмотра.ДатаНачала", , Отказ);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ПериодОсмотра.ДатаОкончания) Тогда
		ТекстСообщения = НСтр("ru = 'Дата окончания не заполнена'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "ПериодОсмотра.ДатаОкончания", , Отказ);
	КонецЕсли;
	Если ПериодОсмотра.ДатаНачала > ПериодОсмотра.ДатаОкончания Тогда
		ТекстСообщения = НСтр("ru = 'Дата окончания раньше, чем дата начала'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "ПериодОсмотра.ДатаОкончания", , Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
