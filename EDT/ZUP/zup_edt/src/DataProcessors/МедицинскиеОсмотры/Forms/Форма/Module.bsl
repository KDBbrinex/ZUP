#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры["Организация"];
	КонецЕсли;
	
	ЗаполнитьНачальныеЗначения();
	
	УстановитьОтборПоОрганизации(ЭтаФорма);
	УстановитьОтборПоПодразделению(ЭтаФорма);
	
	УстановитьОтборТолькоБлижайшиеОсмотры(ЭтаФорма, ТекущаяДатаСеанса(), ПоказыватьТолькоБлижайшиеОсмотры);
	ДоработатьПользовательскиеНастройкиСпискаПозиций();
	
	УстановитьУсловноеОформление();
	
	ВсеПозицииБезВредности = ВсеПозицииБезВредности(Организация);
	УстановитьНадписьПояснениеПустогоСпискаПериодическихОсмотров(ЭтаФорма, ВсеПозицииБезВредности);
	
	ЕстьНеактуальныеЗаписи = ЕстьНеактуальныеЗаписиПериодическихОсмотров(Организация);
	УстановитьНадписьОбновитьПериодическиеОсмотры(ЭтаФорма, ЕстьНеактуальныеЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ПроверитьНаличиеНеактуальныхЗаписейПериодическихОсмотров", 60);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ПозицияШтатногоРасписания" И Источник = ЭтаФорма Тогда
		ПроверитьНаличиеНеактуальныхЗаписейПериодическихОсмотров();
		Элементы.ПериодическиеОсмотры.Обновить();
	ИначеЕсли ИмяСобытия = "Запись_НаправлениеНаМедицинскийОсмотр" Тогда
		ПроверитьНаличиеНеактуальныхЗаписейПериодическихОсмотров();
		Элементы.ПериодическиеОсмотры.Обновить();
	ИначеЕсли ИмяСобытия = "Запись_ЗаключениеМедицинскогоОсмотра" Тогда
		ПроверитьНаличиеНеактуальныхЗаписейПериодическихОсмотров();
		Элементы.ПериодическиеОсмотры.Обновить();
	ИначеЕсли ИмяСобытия = "ИзменениеДанныхМестаРаботы" Тогда
		ПроверитьНаличиеНеактуальныхЗаписейПериодическихОсмотров();
		Элементы.ПериодическиеОсмотры.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УстановитьОтборПоОрганизации(ЭтаФорма);
	УстановитьОтборПоПодразделению(ЭтаФорма);
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	УстановитьОтборПоПодразделению(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьТолькоБлижайшиеОсмотрыПриИзменении(Элемент)
	УстановитьОтборТолькоБлижайшиеОсмотры(ЭтаФорма, ОбщегоНазначенияКлиент.ДатаСеанса(), ПоказыватьТолькоБлижайшиеОсмотры);
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеДанныхНадписьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НачатьОбновлениеПериодическихОсмотров();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПериодическиеОсмотры

&НаКлиенте
Процедура ПериодическиеОсмотрыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ПериодическиеОсмотры.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьСотрудника(ТекущиеДанные, Поле);
	ОткрытьПозицию(ТекущиеДанные, Поле);
	ОткрытьНаправление(ТекущиеДанные, Поле);
	ОткрытьЗаключение(ТекущиеДанные, Поле);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПериодическиеОсмотрыПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	ОформитьСтрокиПериодическихОсмотров(ИмяЭлемента, Настройки, Строки);	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыШтатноеРасписание

&НаКлиенте
Процедура ШтатноеРасписаниеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура(
		"Ключ, 
		|ТекущаяСтраницаОхранаТруда");
	ПараметрыФормы.Ключ = ВыбраннаяСтрока;
	ПараметрыФормы.ТекущаяСтраницаОхранаТруда = Истина;
	
	ОткрытьФорму("Справочник.ШтатноеРасписание.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьНаправления(Команда)
	НачатьФормированиеНаправлений();
КонецПроцедуры

&НаКлиенте
Процедура ВвестиЗаключения(Команда)
	НачатьФормированиеЗаключений();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ВводНаправлений

&НаСервере
Процедура ЗаполнитьДанныеОсмотров(ДанныеОсмотров)
	
	Для Каждого ДанныеСтроки Из Элементы.ПериодическиеОсмотры.ВыделенныеСтроки Цикл
		Описание = ОписаниеСтрокиПериодическиеОсмотры();
		ЗаполнитьЗначенияСвойств(Описание, ДанныеСтроки);
		ДанныеОсмотров.Добавить(Описание);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеСтрокиПериодическиеОсмотры()
	
	Описание = Новый Структура(
		"ФизическоеЛицо, 
		|Позиция,
		|Направление,
		|Заключение");
	
	Возврат Описание;
	
КонецФункции

&НаКлиенте
Процедура НачатьФормированиеНаправлений()
	
	Если Элементы.ПериодическиеОсмотры.ВыделенныеСтроки.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Не выбрано ни одного сотрудника'");
	КонецЕсли;
	
	Если Элементы.ПериодическиеОсмотры.ВыделенныеСтроки.Количество() = 1 Тогда
		НачатьВводНаправления();
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура(
		"Организация,
		|ДанныеНаправлений");
	ПараметрыФормы.Организация = Организация;
	ПараметрыФормы.ДанныеНаправлений = Новый Массив;
	ЗаполнитьДанныеОсмотров(ПараметрыФормы.ДанныеНаправлений);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СформироватьНаправленияПослеНастройкиЗаполнения", ЭтотОбъект);
	ОткрытьФорму("Обработка.МедицинскиеОсмотры.Форма.ЗаполнениеНаправлений", ПараметрыФормы, ЭтаФорма, ЭтаФорма, , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьНаправленияПослеНастройкиЗаполнения(ДанныеНаправлений, ДополнительныеПараметры) Экспорт
	
	Если ДанныеНаправлений = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = СформироватьНаправленияНаСервере(ДанныеНаправлений);
	
	ПараметрыОповещения = Новый Структура("Печатать");
	ПараметрыОповещения.Печатать = ДанныеНаправлений.Печатать;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Подготовка направлений на медицинский осмотр'");
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("СформироватьНаправленияЗавершение", ЭтотОбъект, ПараметрыОповещения);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция СформироватьНаправленияНаСервере(ДанныеНаправлений)
	
	ПараметрыПроцедуры = Новый Структура("ДанныеНаправлений");
	ПараметрыПроцедуры.ДанныеНаправлений = ДанныеНаправлений;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Формирование направлений на медицинские осмотры'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне("МедицинскиеОсмотры.СформироватьНаправленияДлительнаяОперация", ПараметрыПроцедуры, ПараметрыВыполнения);   	
	
КонецФункции

&НаКлиенте
Процедура СформироватьНаправленияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Элементы.ПериодическиеОсмотры.Обновить();
	
	Если ДополнительныеПараметры.Печатать = Истина Тогда
		Направления = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		НапечататьНаправления(Направления);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура НапечататьНаправления(Направления)
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Документ.НаправлениеНаМедицинскийОсмотр", "НаправлениеНаМедицинскийОсмотр", Направления, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьВводНаправления()
	
	ТекущиеДанные = Элементы.ПериодическиеОсмотры.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Направление) И Не ТекущиеДанные.ОсмотрЗавершен Тогда
		ПоказатьВопросНаправлениеСуществует(ТекущиеДанные);
		Возврат;
	КонецЕсли;
	
	ВвестиНовоеНаправление(ТекущиеДанные);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПоказатьВопросНаправлениеСуществует(ТекущиеДанные)
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Для сотрудника уже введен документ %1, заключение по которому пока не проведено.'"),
		ТекущиеДанные.Направление);
		
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить(КодВозвратаДиалога.Прервать, НСтр("ru = 'Открыть существующий'"));
	Кнопки.Добавить(КодВозвратаДиалога.Пропустить, НСтр("ru = 'Создать новый'"));
	Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
	ОбработчикОповещения = Новый ОписаниеОповещения("ВвестиНовоеНаправлениеПослеВопросаНаправлениеСуществует", ЭтотОбъект, ТекущиеДанные);
	ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, Кнопки);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиНовоеНаправлениеПослеВопросаНаправлениеСуществует(Результат, ТекущиеДанные) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат = КодВозвратаДиалога.Прервать Тогда
		ПоказатьЗначение(, ТекущиеДанные["Направление"]);
		Возврат;
	КонецЕсли;
	
	ВвестиНовоеНаправление(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиНовоеНаправление(ТекущиеДанные)
	
	ЗначенияЗаполнения = Новый Структура(
		"Организация,
		|ТипОсмотра,
		|ФизическоеЛицо,
		|Позиция");
	ЗначенияЗаполнения.Организация = Организация;
	ЗначенияЗаполнения.ТипОсмотра = ПредопределенноеЗначение("Перечисление.ТипыМедицинскогоОсмотра.Периодический");
	ЗначенияЗаполнения.ФизическоеЛицо = ТекущиеДанные.ФизическоеЛицо;
	ЗначенияЗаполнения.Позиция = ТекущиеДанные.Позиция;
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения");
	ПараметрыФормы.ЗначенияЗаполнения = ЗначенияЗаполнения;
	
	ОткрытьФорму("Документ.НаправлениеНаМедицинскийОсмотр.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ВводЗаключений

&НаКлиенте
Процедура НачатьФормированиеЗаключений()
	
	Если Элементы.ПериодическиеОсмотры.ВыделенныеСтроки.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Не выбрано ни одного сотрудника'");
	КонецЕсли;
	
	Если Элементы.ПериодическиеОсмотры.ВыделенныеСтроки.Количество() = 1 Тогда
		НачатьВводЗаключения();
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура(
		"Организация,
		|ДанныеЗаключений");
	ПараметрыФормы.Организация = Организация;
	ПараметрыФормы.ДанныеЗаключений = Новый Массив;
	ЗаполнитьДанныеОсмотров(ПараметрыФормы.ДанныеЗаключений);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СформироватьЗаключенияПослеНастройкиЗаполнения", ЭтотОбъект);
	ОткрытьФорму("Обработка.МедицинскиеОсмотры.Форма.ЗаполнениеЗаключений", ПараметрыФормы, ЭтаФорма, ЭтаФорма, , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьВводЗаключения()
	
	ТекущиеДанные = Элементы.ПериодическиеОсмотры.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Направление) Тогда
		ВызватьИсключение НСтр("ru = 'Для выбранной строки отсутствует направление на медицинский осмотр.
                                |Заключение можно ввести только при наличии направления.'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Заключение) Тогда
		Если Не ТекущиеДанные.ОсмотрЗавершен Тогда
			ПоказатьВопросЗаключениеСуществует(ТекущиеДанные);
			Возврат;
		КонецЕсли;
		ВызватьИсключение НСтр("ru = 'Для выбранной строки медицинский осмотр уже завершен.
                                |Заключение можно ввести только при наличии направления, по которому нет заключения.'");
	КонецЕсли;
	
	ВвестиНовоеЗаключение(ТекущиеДанные);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПоказатьВопросЗаключениеСуществует(ТекущиеДанные)
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Для сотрудника уже введен документ %1, который пока не проведен.'"),
		ТекущиеДанные.Заключение);
		
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить(КодВозвратаДиалога.Прервать, НСтр("ru = 'Открыть существующий'"));
	Кнопки.Добавить(КодВозвратаДиалога.Пропустить, НСтр("ru = 'Создать новый'"));
	Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
	ОбработчикОповещения = Новый ОписаниеОповещения("ВвестиНовоеНаправлениеПослеВопросаЗаключениеСуществует", ЭтотОбъект, ТекущиеДанные);
	ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, Кнопки);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиНовоеНаправлениеПослеВопросаЗаключениеСуществует(Результат, ТекущиеДанные) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат = КодВозвратаДиалога.Прервать Тогда
		ПоказатьЗначение(, ТекущиеДанные["Заключение"]);
		Возврат;
	КонецЕсли;
	
	ВвестиНовоеЗаключение(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиНовоеЗаключение(ТекущиеДанные)
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения");
	ПараметрыФормы.ЗначенияЗаполнения = Новый Структура("Направление");
	ПараметрыФормы.ЗначенияЗаполнения.Направление = ТекущиеДанные.Направление;
	
	ОткрытьФорму("Документ.ЗаключениеМедицинскогоОсмотра.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗаключенияПослеНастройкиЗаполнения(ДанныеЗаключений, ДополнительныеПараметры) Экспорт
	
	Если ДанныеЗаключений = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = СформироватьЗаключенияНаСервере(ДанныеЗаключений);
	
	ПараметрыОповещения = Новый Структура("Печатать");
	ПараметрыОповещения.Печатать = ДанныеЗаключений.Печатать;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Подготовка заключений медицинских осмотров'");
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("СформироватьЗаключенияЗавершение", ЭтотОбъект, ПараметрыОповещения);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция СформироватьЗаключенияНаСервере(ДанныеЗаключений)
	
	ПараметрыПроцедуры = Новый Структура("ДанныеЗаключений");
	ПараметрыПроцедуры.ДанныеЗаключений = ДанныеЗаключений;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Формирование заключений по результатам медицинского осмотра'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне("МедицинскиеОсмотры.СформироватьЗаключенияДлительнаяОперация", ПараметрыПроцедуры, ПараметрыВыполнения);   	
	
КонецФункции

&НаКлиенте
Процедура СформироватьЗаключенияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ЗапуститьОбновлениеПериодическихОсмотров(Организация);
	Элементы.ПериодическиеОсмотры.Обновить();
	
КонецПроцедуры 

&НаСервереБезКонтекста
Процедура ЗапуститьОбновлениеПериодическихОсмотров(Организация)
	МедицинскиеОсмотры.ЗапуститьОбновлениеПериодическихОсмотров(Организация);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПроверитьНаличиеНеактуальныхЗаписейПериодическихОсмотров()
	
	БылиНеАктуальныеЗаписи = Элементы.ОбновлениеДанныхГруппа.Видимость;
	
	ЕстьНеактуальныеЗаписи = ЕстьНеактуальныеЗаписиПериодическихОсмотров(Организация);
	УстановитьНадписьОбновитьПериодическиеОсмотры(ЭтаФорма, ЕстьНеактуальныеЗаписи);
	
	ВсеПозицииБезВредности = ВсеПозицииБезВредности(Организация);
	УстановитьНадписьПояснениеПустогоСпискаПериодическихОсмотров(ЭтаФорма, ВсеПозицииБезВредности);
	
	Если БылиНеАктуальныеЗаписи И Не ЕстьНеактуальныеЗаписи Тогда
		Элементы.ПериодическиеОсмотры.Обновить();
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОткрытьСотрудника(ТекущиеДанные, Поле)
	
	Если Поле.Имя <> "ФизическоеЛицо" Тогда
		Возврат;
	КонецЕсли;
	
	Сотрудник = СотрудникПоФизическомуЛицу(ТекущиеДанные["ФизическоеЛицо"], ТекущиеДанные["Позиция"], Организация);
	
	ПоказатьЗначение(, Сотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПозицию(ТекущиеДанные, Поле)
	
	Если Поле.Имя <> "Позиция" Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура(
		"Ключ, 
		|ТекущаяСтраницаОхранаТруда");
	ПараметрыФормы.Ключ = ТекущиеДанные["Позиция"];
	ПараметрыФормы.ТекущаяСтраницаОхранаТруда = Истина;
	
	ОткрытьФорму("Справочник.ШтатноеРасписание.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНаправление(ТекущиеДанные, Поле)
	
	Если Поле.Имя <> "Направление" Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ТекущиеДанные["Направление"]);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗаключение(ТекущиеДанные, Поле)
	
	Если Поле.Имя <> "Заключение" Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ТекущиеДанные["Заключение"]);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СотрудникПоФизическомуЛицу(ФизическоеЛицо, Позиция, Организация)
	
	Возврат МедицинскиеОсмотры.СотрудникПоФизическомуЛицу(ФизическоеЛицо, Позиция, Организация);
	
КонецФункции

&НаКлиенте
Процедура НачатьОбновлениеПериодическихОсмотров()
	
	ДлительнаяОперация = ОбновитьПериодическиеОсмотрыНаСервере();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Обновление сведений о периодических медицинских осмотрах'");
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновлениеПериодическихОсмотровЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеПериодическихОсмотровЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПроверитьНаличиеНеактуальныхЗаписейПериодическихОсмотров();
	
КонецПроцедуры 

&НаСервере
Функция ОбновитьПериодическиеОсмотрыНаСервере()
	
	ПараметрыПроцедуры = Новый Структура("Организация");
	ПараметрыПроцедуры.Организация = Организация;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Обновление сведений о периодических медицинских осмотрах'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне("МедицинскиеОсмотры.ОбновитьПериодическиеОсмотрыОрганизацииДлительнаяОперация", ПараметрыПроцедуры, ПараметрыВыполнения);   	
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНачальныеЗначения()
	
	ЗначенияДляЗаполнения = Новый Структура;
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ЗначенияДляЗаполнения.Вставить("Организация", "Организация");
	КонецЕсли;
	ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоОрганизации(Форма)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.ШтатноеРасписание, "Владелец", Форма.Организация);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.ПериодическиеОсмотры, "Организация", Форма.Организация);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоПодразделению(Форма)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.ШтатноеРасписание, "Подразделение", Форма.Подразделение, , , ЗначениеЗаполнено(Форма.Подразделение));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.ПериодическиеОсмотры, "Подразделение", Форма.Подразделение, , , ЗначениеЗаполнено(Форма.Подразделение));
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Сегодня = НачалоДня(ТекущаяДатаСеанса());
	
	// Просрочен осмотр.
	ЭлементОформления = ПериодическиеОсмотры.УсловноеОформление.Элементы.Добавить();
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "ДатаСледующегоОсмотра", Сегодня, ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.СостояниеМедосмотраКритичноеЦветТекста);
	
	// Имеет противопоказания.
	ЭлементОформления = ПериодическиеОсмотры.УсловноеОформление.Элементы.Добавить();
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "РезультатОсмотра", Перечисления.РезультатыМедицинскогоОсмотра.ИмеетПротивопоказания);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.СостояниеМедосмотраКритичноеЦветТекста);
	
	ЖирныйШрифт = Новый Шрифт(Элементы.ПериодическиеОсмотры.Шрифт, , , Истина);
	
	// Нет результата.
	ЭлементОформления = ПериодическиеОсмотры.УсловноеОформление.Элементы.Добавить();
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "РезультатОсмотра", , ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", ЖирныйШрифт);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОформитьСтрокиПериодическихОсмотров(ИмяЭлемента, Настройки, Строки)
	
	Сегодня = НачалоДня(ТекущаяДатаСеанса());
	
	Для Каждого СтрокаСписка Из Строки Цикл
		ДанныеСтроки = СтрокаСписка.Значение.Данные;
		ОформлениеСтроки = СтрокаСписка.Значение.Оформление;
		ОтображатьКартинкуПредупреждение = Ложь;
		ВыделятьКраснымЦветом = Ложь;
		ТекстСостояния = Неопределено;
		// До медосмотра меньше месяца.
		Если ДанныеСтроки.ДатаСледующегоОсмотра > Сегодня И ДанныеСтроки.ДатаСледующегоОсмотра < ДобавитьМесяц(Сегодня, 1) Тогда
			ТекстСостояния = НСтр("ru = 'До осмотра меньше месяца'");
		КонецЕсли;
		// Медосмотра просрочен или не проходился.
		Если ДанныеСтроки.ДатаСледующегоОсмотра <= Сегодня Тогда
			ТекстСостояния = НСтр("ru = 'Пройти осмотр немедленно'");
			ОтображатьКартинкуПредупреждение = Истина;
			ВыделятьКраснымЦветом = Истина;
		КонецЕсли;
		// Есть противопоказания.
		Если ДанныеСтроки.РезультатОсмотра = Перечисления.РезультатыМедицинскогоОсмотра.ИмеетПротивопоказания Тогда
			ТекстСостояния = НСтр("ru = 'Имеются противопоказания, требуется отстранение от работы'");
			ОтображатьКартинкуПредупреждение = Истина;
			ВыделятьКраснымЦветом = Истина;
		КонецЕсли;
		// В процессе осмотра.
		Если ЗначениеЗаполнено(ДанныеСтроки.Направление) И Не ЗначениеЗаполнено(ДанныеСтроки.РезультатОсмотра) Тогда
			ОтображатьКартинкуПредупреждение = Ложь;
			ВыделятьКраснымЦветом = Ложь;
			Если Не ЗначениеЗаполнено(ДанныеСтроки.Заключение) Тогда
				ТекстСостояния = НСтр("ru = 'Направлен на осмотр, заключения пока нет'");
			КонецЕсли;
			Если ЗначениеЗаполнено(ДанныеСтроки.Заключение) Тогда
				ТекстСостояния = НСтр("ru = 'Заключение получено, но документ не проведен'");
			КонецЕсли;
		КонецЕсли;
		Если Не ОтображатьКартинкуПредупреждение Тогда
			УстановитьЗначениеПараметраОформленияПоля(ОформлениеСтроки, "ПредупреждениеКартинка", "Отображать", Ложь);
		КонецЕсли;
		УстановитьЗначениеПараметраОформленияПоля(ОформлениеСтроки, "СостояниеОсмотра", "Текст", ТекстСостояния);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьЗначениеПараметраОформленияПоля(ОформлениеСтроки, ИмяПоля, Параметр, Значение)
	
	ОформлениеЯчейки = ОформлениеСтроки.Получить(ИмяПоля);
	
	Если ОформлениеЯчейки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОформлениеЯчейки.УстановитьЗначениеПараметра(Параметр, Значение);
	
КонецПроцедуры

&НаСервере
Процедура ДоработатьПользовательскиеНастройкиСпискаПозиций()
	
	Элементы.ШтатноеРасписание.СоздатьЭлементыФормыПользовательскихНастроек(Элементы.ПользовательскиеНастройкиШтатногоРасписанияГруппа);
	Для Каждого ЭлементНастроек Из Элементы.ПользовательскиеНастройкиШтатногоРасписанияГруппа.ПодчиненныеЭлементы Цикл
		Если ЭлементНастроек.Вид = ВидПоляФормы.ПолеФлажка Тогда
			ЭлементНастроек.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборТолькоБлижайшиеОсмотры(Форма, ТекущаяДата, Использование)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.ПериодическиеОсмотры, 
		"ДатаСледующегоОсмотра", 
		ДобавитьМесяц(НачалоДня(ТекущаяДата), 1), 
		ВидСравненияКомпоновкиДанных.МеньшеИлиРавно, , 
		Использование);
		
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ВсеПозицииБезВредности = ВсеПозицииБезВредности(Организация);
	УстановитьНадписьПояснениеПустогоСпискаПериодическихОсмотров(ЭтаФорма, ВсеПозицииБезВредности);
	
	ЕстьНеактуальныеЗаписи = ЕстьНеактуальныеЗаписиПериодическихОсмотров(Организация);
	УстановитьНадписьОбновитьПериодическиеОсмотры(ЭтаФорма, ЕстьНеактуальныеЗаписи);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьНадписьПояснениеПустогоСпискаПериодическихОсмотров(Форма, ВсеПозицииБезВредности)
	
	Форма.Элементы.ПояснениеИспользованияГруппа.Видимость = ВсеПозицииБезВредности;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьНадписьОбновитьПериодическиеОсмотры(Форма, ЕстьНеактуальныеЗаписи)
	
	Форма.Элементы.ОбновлениеДанныхГруппа.Видимость = ЕстьНеактуальныеЗаписи;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьНеактуальныеЗаписиПериодическихОсмотров(Организация)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадры.ГоловнаяОрганизация(Организация));
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК Поле1
		|ИЗ
		|	РегистрСведений.ОбновлениеПериодическихМедицинскихОсмотров КАК ОбновлениеОсмотров
		|ГДЕ
		|	ОбновлениеОсмотров.ГоловнаяОрганизация = &ГоловнаяОрганизация";
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

&НаСервереБезКонтекста
Функция ВсеПозицииБезВредности(Организация)
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК Поле1
		|ИЗ
		|	РегистрСведений.ПериодичностьМедицинскихОсмотровПозицииШтатногоРасписания КАК ПериодичностьПозиций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ШтатноеРасписание
		|		ПО (ШтатноеРасписание.Ссылка = ПериодичностьПозиций.Позиция)
		|			И (ШтатноеРасписание.Владелец = &Организация)";
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти
