#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("Вакансии") 
		И Параметры.Свойство("Сайт") Тогда
		
		Сайт = Параметры.Сайт;
		Вакансии = Новый ФиксированныйМассив(Параметры.Вакансии);
		
		ОбновитьДерево(Сайт);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоВакансий

&НаКлиенте
Процедура ДеревоВакансийПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоВакансий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДочерниеЭлементы = ТекущиеДанные.ПолучитьЭлементы();
	
	Для Каждого ДочернийЭлемент Из ДочерниеЭлементы Цикл
		ДочернийЭлемент.Пометка = ТекущиеДанные.Пометка;
	КонецЦикла;
	
	Если ТекущиеДанные.Пометка = Истина Тогда
		Родитель = ТекущиеДанные.ПолучитьРодителя();
		Если Не Родитель = Неопределено Тогда
			Родитель.Пометка = ТекущиеДанные.Пометка;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВакансийВакансияВПрограммеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоВакансий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДочерниеЭлементы = ТекущиеДанные.ПолучитьЭлементы();
	
	Если ДочерниеЭлементы.Количество() > 0 Тогда
		
		Вакансия = ТекущиеДанные.ВакансияВПрограмме;
		
		Если ЗначениеЗаполнено(Вакансия) Тогда
			
			СтруктураВакансии = РеквизитыВакансииНаСервере(Вакансия);
			
			Для Каждого ДочернийЭлемент Из ДочерниеЭлементы Цикл
				ДочернийЭлемент.ВакансияВПрограмме = СтруктураВакансии[ДочернийЭлемент.Путь];
			КонецЦикла;
			
		Иначе
			
			ОписаниеВакансии = Неопределено;
			Для Каждого ЭлементМассиваВакансии Из Вакансии Цикл
				Если Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.HeadHunter() Тогда
					Если ЭлементМассиваВакансии.Получить("id") = ТекущиеДанные.Путь Тогда
						ОписаниеВакансии = ЭлементМассиваВакансии;
						Прервать;
					КонецЕсли;
				ИначеЕсли Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.Rabota() Тогда
					Если Формат(ЭлементМассиваВакансии.id, "ЧГ=") = ТекущиеДанные.Путь Тогда
						ОписаниеВакансии = ЭлементМассиваВакансии;
						Прервать;
					КонецЕсли;
				ИначеЕсли Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.SuperJob() Тогда
					Если ЭлементМассиваВакансии.id = ТекущиеДанные.Путь Тогда
						ОписаниеВакансии = ЭлементМассиваВакансии;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Если Не ЗначениеЗаполнено(ОписаниеВакансии) Тогда
				Возврат;
			КонецЕсли;
			
			Для Каждого ДочернийЭлемент Из ДочерниеЭлементы Цикл
				ДочернийЭлемент.ВакансияВПрограмме = ЗначениеРеквизитаПубликацииПоУмолчанию(Сайт, ОписаниеВакансии, ДочернийЭлемент.Путь);
				ДочернийЭлемент.Пометка = Истина;
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
		
		ПозицияПриИзменении(ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗагрузить(Команда)
	
	Если ЗагрузитьВакансииНаСервере() Тогда
		
		Оповестить("ЗагруженыВакансии");
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьСнятьФлажки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьСнятьФлажки(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ОпубликованныеВакансииСИдентификаторами(Сайт)
	
	Возврат ИнтеграцияРекрутинговыхСайтов.ОпубликованныеВакансииСИдентификаторами(Сайт);
	
КонецФункции

&НаСервере
Процедура ОбновитьДерево(Сайт)
	
	СтруктураДанныхВакансии = Справочники.Вакансии.ОписаниеВакансииДляПубликации();
	СоответствиеИмениИСинонимаРеквизитовВакансий = Справочники.Вакансии.СоответствиеИмениИСинонимаРеквизитовВакансий();
	ЗагружаемыеРеквизиты = ИнтеграцияРекрутинговыхСайтов.ЗагружаемыеРеквизитыВакансии(Сайт);
	
	ОпубликованныеВакансииСИдентификаторами = ОпубликованныеВакансииСИдентификаторами(Сайт);
	
	Дерево = РеквизитФормыВЗначение("ДеревоВакансий");
	
	Для Каждого Вакансия Из Вакансии Цикл
		
		Если Вакансия = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаДерева = Дерево.Строки.Добавить();
		Если Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.HeadHunter() Тогда
			НоваяСтрокаДерева.ВакансияСайт = Вакансия.Получить("name");
			НоваяСтрокаДерева.Адрес = Вакансия.Получить("alternate_url");
			НоваяСтрокаДерева.Путь = Формат(Вакансия.Получить("id"), "ЧГ=0");
		ИначеЕсли Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.Rabota() Тогда
			НоваяСтрокаДерева.ВакансияСайт = Вакансия.name;
			НоваяСтрокаДерева.Адрес = Вакансия.link;
			НоваяСтрокаДерева.Путь = Формат(Вакансия.id, "ЧГ=0");
		ИначеЕсли Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.SuperJob() Тогда
			НоваяСтрокаДерева.ВакансияСайт = Вакансия.profession;
			НоваяСтрокаДерева.Адрес = Вакансия.link;
			НоваяСтрокаДерева.Путь = Формат(Вакансия.id, "ЧГ=0");
		ИначеЕсли Сайт = ИнтеграцияРекрутинговыхСайтовКлиентСервер.Zarplata() Тогда
			НоваяСтрокаДерева.ВакансияСайт = Вакансия.header;
			НоваяСтрокаДерева.Адрес = Вакансия.canonical_url;
			НоваяСтрокаДерева.Путь = Формат(Вакансия.id, "ЧГ=0");
		КонецЕсли;
		
		СтрокаОпубликованнойВакансии = ОпубликованныеВакансииСИдентификаторами.Найти(Формат(НоваяСтрокаДерева.Путь, "ЧГ=0"), "ИдентификаторВакансии");
		Если СтрокаОпубликованнойВакансии <> Неопределено Тогда
			НоваяСтрокаДерева.ВакансияВПрограмме = СтрокаОпубликованнойВакансии.Вакансия;
		Иначе
			НоваяСтрокаДерева.ВакансияВПрограмме = Справочники.Вакансии.ПустаяСсылка();
			НоваяСтрокаДерева.Пометка = Истина;
		КонецЕсли;
		
		Для Каждого РеквизитВакансии Из СтруктураДанныхВакансии Цикл
			
			СтрокаПоляВакансии = НоваяСтрокаДерева.Строки.Добавить();
			СтрокаПоляВакансии.ВакансияСайт = СоответствиеИмениИСинонимаРеквизитовВакансий.Получить(РеквизитВакансии.Ключ);
			СтрокаПоляВакансии.Путь = РеквизитВакансии.Ключ;
			СтрокаПоляВакансии.Загружаемый = ЗагружаемыеРеквизиты.Найти(РеквизитВакансии.Ключ) <> Неопределено;
			СтрокаПоляВакансии.ВакансияВПрограмме = ЗначениеРеквизитаПубликацииПоУмолчанию(Сайт, Вакансия, РеквизитВакансии.Ключ);
			
			Если Не ЗначениеЗаполнено(СтрокаПоляВакансии.ВакансияВПрограмме) И СтрокаОпубликованнойВакансии <> Неопределено Тогда
				СтрокаПоляВакансии.ВакансияВПрограмме = СтрокаОпубликованнойВакансии[РеквизитВакансии.Ключ];
			КонецЕсли;
			
			СтрокаПоляВакансии.Пометка = (СтрокаОпубликованнойВакансии = Неопределено) И НужноПометитьСтроку(СтрокаПоляВакансии.Путь);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Дерево.Строки.Сортировать("ВакансияСайт");
	ЗначениеВРеквизитФормы(Дерево, "ДеревоВакансий");
	
КонецПроцедуры

&НаСервере
Функция НужноПометитьСтроку(Путь)
	
	Результат = Истина;
	Если Путь = "Позиция"
		Или Путь = "Должность"
		Или Путь = "ПрофильДолжности"
		Или Путь = "Подразделение" Тогда
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ЗначениеРеквизитаПубликацииПоУмолчанию(Сайт, Вакансия, Реквизит)
	
	Возврат ИнтеграцияРекрутинговыхСайтов.ЗначениеРеквизитаПубликацииПоУмолчанию(Сайт, Вакансия, Реквизит);
	
КонецФункции

&НаСервере
Функция РеквизитыВакансииНаСервере(Вакансия)
	
	ОписаниеВакансии = Справочники.Вакансии.ОписаниеВакансииДляПубликации();
	ИменаРеквизитов = ОбщегоНазначения.ВыгрузитьКолонку(ОписаниеВакансии, "Ключ");
	РеквизитыВакансии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Вакансия, ИменаРеквизитов);
	
	Возврат РеквизитыВакансии;
	
КонецФункции

&НаСервере
Функция ЗагрузитьВакансииНаСервере()
	
	Дерево = РеквизитФормыВЗначение("ДеревоВакансий");
	Если Не ПроверитьЗаполнениеПолей(Дерево) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
	
		ЗагрузкаПрошлаУспешно = Истина;
		
		СтруктураДанныхВакансии = Справочники.Вакансии.ОписаниеВакансииДляПубликации();
		
		Для Каждого СтрокаВакансия Из Дерево.Строки Цикл
			
			Если Не СтрокаВакансия.Пометка Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаВакансия.ВакансияВПрограмме) Тогда
				НоваяВакансия = СтрокаВакансия.ВакансияВПрограмме.ПолучитьОбъект();
				ЗаполнитьЗначенияСвойств(СтруктураДанныхВакансии, НоваяВакансия);
			Иначе
				НоваяВакансия = Справочники.Вакансии.СоздатьЭлемент();
			КонецЕсли;
			
			Для Каждого ПодчиненнаяСтрока Из СтрокаВакансия.Строки Цикл
				Если ПодчиненнаяСтрока.Пометка Тогда
					СтруктураДанныхВакансии[ПодчиненнаяСтрока.Путь] = ПодчиненнаяСтрока.ВакансияВПрограмме;
				КонецЕсли;
			КонецЦикла;
			
			НоваяВакансия.Заполнить(СтруктураДанныхВакансии);
			Если Не ЗначениеЗаполнено(НоваяВакансия.Код) Тогда
				НоваяВакансия.УстановитьНовыйКод();
			КонецЕсли;
			
			Если НоваяВакансия.ПроверитьЗаполнение() Тогда
				НоваяВакансия.Записать();
				
				Запись = РегистрыСведений.СостоянияВакансий.СоздатьМенеджерЗаписи();
				Запись.Период = ТекущаяДатаСеанса();
				Запись.Вакансия = НоваяВакансия.Ссылка;
				Запись.Состояние = Перечисления.СостоянияВакансии.Открыта;
				Запись.Записать();
				
				ИнтеграцияРекрутинговыхСайтов.ЗаписьВРегистрИнформацииОПубликации(НоваяВакансия.Ссылка, Сайт, СтрокаВакансия.Путь, СтрокаВакансия.Адрес);
				ИнтеграцияРекрутинговыхСайтов.ЗаписьВРегистрДанныеПубликацииВакансий(Вакансии, НоваяВакансия.Ссылка, Сайт, СтрокаВакансия.Путь);
			Иначе
				ЗагрузкаПрошлаУспешно = Ложь;
			КонецЕсли;
		
		КонецЦикла;
		
		Если ЗагрузкаПрошлаУспешно Тогда
			ЗафиксироватьТранзакцию();
		Иначе
			ОтменитьТранзакцию();
		КонецЕсли;
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка при записи вакансии'", ОбщегоНазначения.КодОсновногоЯзыка()) + " " + НоваяВакансия,
			УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ВызватьИсключение НСтр("ru = 'Ошибка при записи вакансии'") + " " + НоваяВакансия;
		
	КонецПопытки;
	
	Возврат ЗагрузкаПрошлаУспешно;
	
КонецФункции

&НаКлиенте
Процедура УстановитьСнятьФлажки(Пометка)
	
	Для Каждого СтрокаВакансии Из ДеревоВакансий.ПолучитьЭлементы() Цикл
		
		СтрокаВакансии.Пометка = Пометка;
		Для Каждого ПодчиненнаяСтрока Из СтрокаВакансии.ПолучитьЭлементы() Цикл
			ПодчиненнаяСтрока.Пометка = Пометка;
		КонецЦикла;
		
	КонецЦикла
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста, , , Истина, Ложь, Ложь, Ложь));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Элемент.Отбор, "ДеревоВакансий.Загружаемый", Истина);
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоВакансийВакансияСайт.Имя);
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоВакансийВакансияВПрограмме.Имя);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЗаполнениеПолей(Дерево)
	
	Отказ = Ложь;
	
	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		
		Если Не СтрокаДерева.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаДереваПодчиненная Из СтрокаДерева.Строки Цикл
			
			Если СтрокаДереваПодчиненная.Пометка
				И Не ЗначениеЗаполнено(СтрокаДереваПодчиненная.ВакансияВПрограмме) Тогда
				
				ТекстСообщения = НСтр("ru = 'Заполните поле ""%1"" для вакансии ""%2"".'");
				ТекстСообщения = СтрШаблон(ТекстСообщения, СтрокаДереваПодчиненная.ВакансияСайт, СтрокаДерева.ВакансияСайт);
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Не Отказ;
	
КонецФункции

&НаКлиенте
Процедура ПозицияПриИзменении(ТекущиеДанные)
	
	ТекущееЗначение = ТекущиеДанные.ВакансияВПрограмме;
	
	Если ТекущиеДанные.Путь = "Позиция" И ЗначениеЗаполнено(ТекущееЗначение) Тогда
		
		ДанныеПозиции = ДанныеПозицииШтатногоРасписания(ТекущееЗначение);
		СтрокаРодителя = ТекущиеДанные.ПолучитьРодителя();
		
		Для Каждого СтрокаДерева Из СтрокаРодителя.ПолучитьЭлементы() Цикл
			
			Если СтрокаДерева.Путь = "Должность" Тогда
				СтрокаДерева.ВакансияВПрограмме = ДанныеПозиции.Должность; 
			ИначеЕсли СтрокаДерева.Путь = "Подразделение" Тогда
				СтрокаДерева.ВакансияВПрограмме = ДанныеПозиции.МестоВСтруктуреПредприятия; 
			КонецЕсли;

		КонецЦикла;
		
	КонецЕсли;
				
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеПозицииШтатногоРасписания(Позиция)
	Возврат Справочники.ШтатноеРасписание.ДанныеПозицииШтатногоРасписания(Позиция);
КонецФункции

#КонецОбласти