#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения = Неопределено Тогда
		ЗаполнитьНовыйОбъект();
	КонецЕсли;
	
	ЗаполнитьПоФизическомуЛицу(ДанныеЗаполнения);
	ЗаполнитьПоВакансии(ДанныеЗаполнения);
	ЗаполнитьПоДаннымЗаполнения(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(Вакансия) Тогда
		ДанныеВакансии = Справочники.Вакансии.ДанныеВакансии(Вакансия);
		Если ДанныеВакансии.НазначениеНабора = Перечисления.НазначениеНабораПерсоналаНаВакансию.ДолжностьПодразделение Тогда
			// Допустимо пустое подразделение в этом случае.
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Подразделение");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Наименование = Неопределено;
	ФизическоеЛицо = Неопределено;
	Рейтинг = 0;
	Состояние = Неопределено;
	ДатаРешения = Неопределено;
	КомментарийРешения = Неопределено;
	УдалитьЭтапРаботы = Неопределено;
	ПричинаОтклонения = Неопределено;
	УточнениеНаименования = Неопределено;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПрежнююВакансию();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	ПодборПерсонала.ПриСкрытииПерсональныхДанныхКандидата(ЭтотОбъект, Отказ);
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьСогласованиеВакансии(Отказ);
	
	// Роли физических лиц
	ОрганизацияКандидата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Позиция, "Владелец");
	Если ЗначениеЗаполнено(ОрганизацияКандидата) Тогда
		РегистрыСведений.РолиФизическихЛиц.УстановитьРольФизическогоЛица(
			ФизическоеЛицо, ОрганизацияКандидата, Перечисления.РолиФизическихЛиц.Кандидат);
	КонецЕсли;

	Если Не ДополнительныеСвойства.Свойство("ЗаписьИзФормы") Или ДополнительныеСвойства["ЗаписьИзФормы"] = Ложь Тогда
		ПодборПерсонала.ОбновитьТекущийЭтапРаботыКандидатов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Ссылка));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьУтверждение(Отказ) Экспорт
	
	// Проверяет доступность кандидата для одобрения.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Вакансия", Вакансия);
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК Поле1
		|ИЗ
		|	РегистрСведений.СостоянияВакансий.СрезПоследних(, Вакансия = &Вакансия) КАК ТекущееСостояниеВакансий
		|ГДЕ
		|	НЕ ТекущееСостояниеВакансий.Состояние В (ЗНАЧЕНИЕ(Перечисление.СостоянияВакансии.Закрыта), ЗНАЧЕНИЕ(Перечисление.СостоянияВакансии.Отменена))";
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если РезультатЗапроса.Пустой() Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Кандидат %1 не может быть одобрен, вакансия не указана, закрыта или отменена.'"), Наименование);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПрежнююВакансию()
	
	Если ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	ПрежняяВакансия = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Вакансия");
	ДополнительныеСвойства.Вставить("ПрежняяВакансия", ПрежняяВакансия);
	
КонецПроцедуры

Процедура ПроверитьСогласованиеВакансии(Отказ)
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСогласованиеВакансий") Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ПроверятьСогласованиеВакансии") Тогда
		Если ДополнительныеСвойства.ПроверятьСогласованиеВакансии = Ложь Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Вакансия) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ПрежняяВакансия") И ДополнительныеСвойства.ПрежняяВакансия = Вакансия Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСогласования = Справочники.Вакансии.ДанныеСогласования(Вакансия);
	Если ДанныеСогласования.СостояниеСогласования = Перечисления.СостоянияСогласования.Отклонено Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Вакансию %1 отклонил %2 %3. Кандидат не может быть зарегистрирован.'"), 
			Вакансия,
			ДанныеСогласования.Рассмотрел,
			ДанныеСогласования.ДатаРассмотрения);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНовыйОбъект() Экспорт

	Если Не Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		ЗначенияДляЗаполнения = Новый Структура;
		ЗначенияДляЗаполнения.Вставить("Ответственный", "Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтотОбъект, ЗначенияДляЗаполнения);
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ДатаРегистрации) Тогда
		ДатаРегистрации = ТекущаяДатаСеанса();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоФизическомуЛицу(ДанныеЗаполнения)

	Если ТипЗнч(ДанныеЗаполнения) <> Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНовыйОбъект();
	
	ФизическоеЛицо = ДанныеЗаполнения;
	
	КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ФизическоеЛицо, "ФИО, УточнениеНаименования");
	Если КадровыеДанные.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Наименование = Справочники.Кандидаты.НаименованиеКандидата(
		ФизическиеЛицаКлиентСервер.ЧастиИмени(КадровыеДанные[0].ФИО), 
		КадровыеДанные[0].УточнениеНаименования, 
		УточнениеНаименования);
	
КонецПроцедуры

Процедура ЗаполнитьПоВакансии(ДанныеЗаполнения)

	Если ТипЗнч(ДанныеЗаполнения) <> Тип("СправочникСсылка.Вакансии") Тогда
		Возврат;
	КонецЕсли;

	ЗаполнитьНовыйОбъект();

	Вакансия = ДанныеЗаполнения;
	
	ДанныеВакансии = Справочники.Вакансии.ДанныеВакансии(Вакансия);
	
	Позиция = ДанныеВакансии.Позиция;
	Подразделение = ДанныеВакансии.Подразделение;
	
КонецПроцедуры

Процедура ЗаполнитьПоДаннымЗаполнения(ДанныеЗаполнения)

	Если ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;

	ЗаполнитьНовыйОбъект();
	
	Если ДанныеЗаполнения.Свойство("ФизическоеЛицо") Тогда
		ЗаполнитьПоФизическомуЛицу(ДанныеЗаполнения["ФизическоеЛицо"]);
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("Вакансия") Тогда
		ЗаполнитьПоВакансии(ДанныеЗаполнения["Вакансия"]);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли