#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ПодключаемыеКомандыГруппа;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Не Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора = Ложь;
	КонецЕсли;
	
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Список");
	
	Если Параметры.Свойство("ИсключаяКандидатовПоВакансии") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "Вакансия", Параметры["ИсключаяКандидатовПоВакансии"], ВидСравненияКомпоновкиДанных.НеРавно);	
	КонецЕсли;
	
	ИспользоватьЭлектронноеИнтервью = ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронноеИнтервью");
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Пользователь", Пользователи.АвторизованныйПользователь());
	
	Справочники.Кандидаты.УстановитьУсловноеОформлениеСпискаКандидатов(Список);
	
	// СтандартныеПодсистемы.ЗащитаПерсональныхДанных
	ЗащитаПерсональныхДанных.ПриСозданииНаСервереФормыСписка(ЭтотОбъект, Элементы.Список);
	// Конец СтандартныеПодсистемы.ЗащитаПерсональныхДанных
	
	// СтандартныеПодсистемы.КонтрольВеденияУчета
	КонтрольВеденияУчетаБЗК.ПриСозданииНаСервереФормыСписка(ЭтотОбъект, "Список");
	// Конец СтандартныеПодсистемы.КонтрольВеденияУчета
	
	Если Параметры.Свойство("ЗадержавшиесяКандидаты") Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Ссылка", Параметры.ЗадержавшиесяКандидаты, ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.ЗащитаПерсональныхДанных
	ЗащитаПерсональныхДанныхКлиент.ОбработкаОповещенияФормыСписка(Элементы.Список, ИмяСобытия);
	// Конец СтандартныеПодсистемы.ЗащитаПерсональныхДанных
	
	Если ИмяСобытия = "Проведение_Анкета" Тогда
		Элементы.Список.Обновить();
		СписокПриАктивизацииСтроки(Элементы.Список);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, Настройки);
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, , СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если ИспользоватьЭлектронноеИнтервью Тогда
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Элементы.ФормаПровестиИнтервью.Видимость = Ложь;
		Иначе
			ЭтапРаботы = ТекущиеДанные.ЭтапРаботы;
			Если ЗначениеЗаполнено(ЭтапРаботы) Тогда
				Элементы.ФормаПровестиИнтервью.Видимость = ЭлектронноеИнтервьюВызовСервера.ЕстьШаблон(ТекущиеДанные.Ссылка, ЭтапРаботы, ТекущиеДанные.Вакансия);
			Иначе
				Элементы.ФормаПровестиИнтервью.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Элементы.ФормаПровестиИнтервью.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	ПодборПерсоналаФормы.СписокСубъектовПриПолученииДанныхНаСервере(Настройки, Строки, "ФизическоеЛицо");
	
	// СтандартныеПодсистемы.КонтрольВеденияУчета
	КонтрольВеденияУчетаБЗК.ПриПолученииДанныхНаСервере(Настройки, Строки);
	// Конец СтандартныеПодсистемы.КонтрольВеденияУчета
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПровестиИнтервью(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтапРаботы = ТекущиеДанные.ЭтапРаботы;
	Если Не ЗначениеЗаполнено(ЭтапРаботы) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеАнкеты = ЭлектронноеИнтервьюВызовСервера.ШаблонАнкеты(ТекущиеДанные.Ссылка, ЭтапРаботы, ТекущиеДанные.Вакансия);
	Если Не ЗначениеЗаполнено(ДанныеАнкеты.ШаблонАнкеты) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеАнкеты.Анкета) Или ДанныеАнкеты.ТолькоПросмотр Тогда
		ЭлектронноеИнтервьюКлиент.НачатьИнтервью(ТекущиеДанные.Ссылка, ФизическоеЛицоКандидата(ТекущиеДанные.Ссылка), ЭтапРаботы, ДанныеАнкеты.ШаблонАнкеты);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТолькоФормаЗаполнения", Истина);
	ПараметрыФормы.Вставить("ТолькоПросмотр", Ложь);
	ПараметрыФормы.Вставить("Ключ", ДанныеАнкеты.Анкета);
	ПараметрыФормы.Вставить("ВозможностьПредварительногоСохранения", Истина);
	ОткрытьФорму("Документ.Анкета.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.ЗащитаПерсональныхДанных

&НаКлиенте
Процедура Подключаемый_ПоказыватьСоСкрытымиПДн(Команда) 
	ЗащитаПерсональныхДанныхКлиент.ПоказыватьСоСкрытымиПДн(ЭтотОбъект, Список);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗащитаПерсональныхДанных

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.КонтрольВеденияУчета

&НаКлиенте
Процедура Подключаемый_Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Экспорт
	
	КонтрольВеденияУчетаКлиент.ОткрытьОтчетПоПроблемамИзСписка(ЭтотОбъект, "Список", Поле, СтандартнаяОбработка);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.КонтрольВеденияУчета

&НаСервереБезКонтекста
Функция ФизическоеЛицоКандидата(Кандидат)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Кандидат, "ФизическоеЛицо");
КонецФункции

#КонецОбласти