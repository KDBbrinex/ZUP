#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает экземпляр типа предмета переданного вида уведомления
// в виде пустой ссылки типа.
//
// Параметры:
//  ВидУведомления - СправочникСсылка.ВидыУведомлений - Ссылка на Вид уведомления, экземпляр предмета которого,
//                                                      необходимо получить.
//
// Возвращаемое значение:
//  ЭкземплярТипаПредмета - Любая ссылка - пустая ссылка типа предмета вида уведомления.
//
Функция ЭкземплярТипаПредмета(ВидУведомления) Экспорт
	
	Если ЗначениеЗаполнено(ВидУведомления) Тогда 
		ОписаниеДанныхВидаУведомления = УведомленияСервер.ОписаниеДанныхУведомления(ВидУведомления);
		Если ОписаниеДанныхВидаУведомления.ТипПредмета <> Неопределено Тогда
			ЭкземплярТипаПредмета = ОписаниеДанныхВидаУведомления.ТипПредмета.ПривестиЗначение();
		КонецЕсли;
	Иначе
		ЭкземплярТипаПредмета = Неопределено;
	КонецЕсли;
	Возврат ЭкземплярТипаПредмета;
	
КонецФункции

// Устанавливает свойства поля ввода вида контактной информации:
// - Корректирует состав кнопок поля
// - Заполняет список выбора доступной для данного вида транспорта
// Параметры:
//  Элемент			- ПолеФормы - Настраиваемый элемент управления 
//  ВидТранспорта	- ПеречислениеСсылка.ВидыТранспортаУведомлений - 	Используемый вид транспорта, 
//																	 	влияет на тип выбираемой контактной информации
//  ОписаниеТипов	- ОписаниеТипов - тип владельца контактной информации
//
Процедура ОформитьЭлементУправленияВидаКонтактнойИнформации(Элемент, ВидТранспорта, ОписаниеТипов) Экспорт
	
	Элемент.СписокВыбора.Очистить();
	
	Элемент.КнопкаВыпадающегоСписка = Ложь;
	Элемент.КнопкаВыбора = Истина;
	Элемент.КнопкаОчистки = Ложь;
	Элемент.КнопкаРегулирования = Ложь;
	Элемент.КнопкаОткрытия = Ложь;
	Элемент.КнопкаСоздания = Ложь;	
	Элемент.РежимВыбораИзСписка = Истина;
	Элемент.ОтображениеКнопкиВыбора = ОтображениеКнопкиВыбора.ОтображатьВПолеВвода;
	
	// Установим список выбора доступных видов КИ по типу объекта и типа
	Если ВидТранспорта = ПредопределенноеЗначение("Перечисление.ВидыТранспортаУведомлений.Email") Тогда
		ТипКонтактнойИнформации = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты");
	ИначеЕсли ВидТранспорта = ПредопределенноеЗначение("Перечисление.ВидыТранспортаУведомлений.SMS") Тогда
		ТипКонтактнойИнформации = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон");
	Иначе
		ТипКонтактнойИнформации = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.ПустаяСсылка");
	КонецЕсли;
	
	ТаблицаДоступнойКонтактнойИнформации = ТаблицаВидовКонтактнойИнформацииДляТипаПредмета(ОписаниеТипов);
	
	Для Каждого Строка Из ТаблицаДоступнойКонтактнойИнформации Цикл
		Если Строка.Тип = ТипКонтактнойИнформации Тогда
			Элемент.СписокВыбора.Добавить(Строка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТаблицаВидовКонтактнойИнформацииДляТипаПредмета(ОписаниеТипов)
	
	СсылкаОбъекта = ОписаниеТипов.ПривестиЗначение();
	// Абстракция до сотрудников
	Если ТипЗнч(СсылкаОбъекта) = Тип("СправочникСсылка.Сотрудники") ИЛИ ТипЗнч(СсылкаОбъекта) = Тип("СправочникСсылка.Кандидаты") Тогда
		СсылкаОбъекта = Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецЕсли;
	
	ТаблицаКонтактнойИнформацииДляВидов = ВидыКонтактнойИнформацииОбъекта(СсылкаОбъекта);
	УведомленияПереопределяемый.ПриПолученииСпискаКонтактнойИнформацииДляВидов(ТаблицаКонтактнойИнформацииДляВидов, ОписаниеТипов);
	
	Возврат ТаблицаКонтактнойИнформацииДляВидов;
	
КонецФункции

// Виды контактной информации объекта.
//
// Параметры:
//  ВладелецКонтактнойИнформации - ЛюбаяСсылка, Объект, ДанныеФормыСтруктура
//
// Возвращаемое значение:
//  ТаблицаЗначений - виды контактной информации.
//
Функция ВидыКонтактнойИнформацииОбъекта(ВладелецКонтактнойИнформации, ТипКонтактнойИнформации = Неопределено) Экспорт
	
	Если ТипЗнч(ВладелецКонтактнойИнформации) = Тип("ДанныеФормыСтруктура") Тогда
		ТипСсылки = ТипЗнч(ВладелецКонтактнойИнформации.Ссылка)
		
	ИначеЕсли ОбщегоНазначения.ЭтоСсылка(ТипЗнч(ВладелецКонтактнойИнформации)) Тогда
		ТипСсылки = ТипЗнч(ВладелецКонтактнойИнформации);
	Иначе
		ТипСсылки = ТипЗнч(ВладелецКонтактнойИнформации.Ссылка)
	КонецЕсли;
	
	МетаданныеСправочника = Метаданные.НайтиПоТипу(ТипСсылки);
	ПолноеИмяОбъектаМетаданных = МетаданныеСправочника.ПолноеИмя();
	ИмяГруппыВидовКИ = СтрЗаменить(ПолноеИмяОбъектаМетаданных, ".", "");
	ГруппаВидовКИ = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыКонтактнойИнформации.Ссылка КАК Ссылка,
	|ВЫБОР
	|	КОГДА ВидыКонтактнойИнформации.ИмяПредопределенногоВида <> """"
	|	ТОГДА ВидыКонтактнойИнформации.ИмяПредопределенногоВида
	|	ИНАЧЕ ВидыКонтактнойИнформации.ИмяПредопределенныхДанных
	|КОНЕЦ КАК ИмяПредопределенногоВида
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	|ГДЕ
	|	ВидыКонтактнойИнформации.ЭтоГруппа = ИСТИНА
	|	И ВидыКонтактнойИнформации.ПометкаУдаления = ЛОЖЬ
	|	И ВидыКонтактнойИнформации.Используется = ИСТИНА";
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Пока РезультатЗапроса.Следующий() Цикл 
		Если СтрСравнить(РезультатЗапроса.ИмяПредопределенногоВида, ИмяГруппыВидовКИ) = 0 Тогда
			ГруппаВидовКИ = РезультатЗапроса.Ссылка;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(ГруппаВидовКИ) Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыКонтактнойИнформации.Ссылка,
	|	ВидыКонтактнойИнформации.Представление,
	|	ВидыКонтактнойИнформации.Наименование,
	|	ВидыКонтактнойИнформации.РазрешитьВводНесколькихЗначений,
	|	ВидыКонтактнойИнформации.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
	|	ВидыКонтактнойИнформации.Тип
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	|ГДЕ
	|	ВидыКонтактнойИнформации.Родитель = &ГруппаВидовКИ
	|	И ВидыКонтактнойИнформации.ПометкаУдаления = ЛОЖЬ
	|	И ВидыКонтактнойИнформации.Используется = ИСТИНА
	|	И &ОтборТипаКонтактнойИнформации
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеквизитДопУпорядочивания";
	
	Если ТипКонтактнойИнформации <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборТипаКонтактнойИнформации", 
			"ВидыКонтактнойИнформации.Тип = &ТипКонтактнойИнформации");
		Запрос.УстановитьПараметр("ТипКонтактнойИнформации", ТипКонтактнойИнформации);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборТипаКонтактнойИнформации", "Истина");
	КонецЕсли;
	Запрос.УстановитьПараметр("ГруппаВидовКИ", ГруппаВидовКИ);
		
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли


