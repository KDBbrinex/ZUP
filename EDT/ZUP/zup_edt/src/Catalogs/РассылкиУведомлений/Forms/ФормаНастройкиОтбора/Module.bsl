
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВходящаяТаблицаОтборов = Неопределено;
	Если Параметры.Свойство("НастройкиОтборов", ВходящаяТаблицаОтборов) Тогда
		НастройкиОтборов.Загрузить(Параметры.НастройкиОтборов.Выгрузить());
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиОтборов

&НаКлиенте
Процедура НастройкиОтборовПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.НастройкиОтборов.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокВыбора = Элементы.НастройкиОтборовВидСравнения.СписокВыбора;
	СписокВыбора.Очистить();

	Если ТекДанные.Свойство("ДоступныеВидыСравнения") И ЗначениеЗаполнено(ТекДанные.ДоступныеВидыСравнения) Тогда
		Для Каждого ЭлементСписка Из ТекДанные.ДоступныеВидыСравнения Цикл
			СписокВыбора.Добавить(ЭлементСписка.Значение);
		КонецЦикла;
	Иначе
		СписокВыбора.Добавить(ВидСравнения.Равно);
		СписокВыбора.Добавить(ВидСравнения.НеРавно);
		СписокВыбора.Добавить(ВидСравнения.ВСписке);
		СписокВыбора.Добавить(ВидСравнения.НеВСписке);
		Если ТекДанные.ОписаниеТипов.СодержитТип(Тип("Число")) Тогда
			СписокВыбора.Добавить(ВидСравнения.Больше);
			СписокВыбора.Добавить(ВидСравнения.Меньше);
			СписокВыбора.Добавить(ВидСравнения.БольшеИлиРавно);
			СписокВыбора.Добавить(ВидСравнения.МеньшеИлиРавно);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтборовВидСравненияПриИзменении(Элемент)
	
	ТекДанные = Элементы.НастройкиОтборов.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекДанные.ВидСравнения = ВидСравнения.ВСписке
		Или ТекДанные.ВидСравнения = ВидСравнения.НеВСписке Тогда
		ТекДанные.ПравоеЗначение = Новый СписокЗначений;
		ТекДанные.ПравоеЗначение.ТипЗначения = ТекДанные.ОписаниеТипов;
	Иначе
		Элемент.ОграничениеТипа = ТекДанные.ОписаниеТипов;
		Значение = ТекДанные.ПравоеЗначение;
		ТекДанные.ПравоеЗначение = Элемент.ОграничениеТипа.ПривестиЗначение(Значение);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура НастройкиОтборовПравоеЗначениеПриИзменении(Элемент)
	Элементы.НастройкиОтборов.ТекущиеДанные.Использование = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	Закрыть(ТаблицаНастроекОтборовССервера());
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ТаблицаНастроекОтборовССервера()
	Возврат ПоместитьВоВременноеХранилище(НастройкиОтборов.Выгрузить(), ЭтаФорма);
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементУсловногоОформления.Отбор, "НастройкиОтборов.Представление", , ВидСравненияКомпоновкиДанных.Заполнено);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("НастройкиОтборов.Представление"));
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("НастройкиОтборовЛевоеЗначение");
	ОформляемоеПоле.Использование = Истина;
	
КонецПроцедуры

#КонецОбласти