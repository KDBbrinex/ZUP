
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АдресТаблицыПолучателей", АдресТаблицыПолучателей) Тогда
		ТаблицаПолучателей = ПолучитьИзВременногоХранилища(АдресТаблицыПолучателей);
		Для Каждого Строка Из ТаблицаПолучателей Цикл
			НоваяСтрока = ПолучателиУведомлений.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			НоваяСтрока.ТипПолучателя = ОбщегоНазначения.ИмяТаблицыПоСсылке(НоваяСтрока.Получатель);
		КонецЦикла;
	КонецЕсли;
	Параметры.Свойство("ВидТранспорта", ВидТранспорта);
	Параметры.Свойство("ЭкземплярПредмета", ЭкземплярПредмета);
	Параметры.Свойство("ВидУведомления", ВидУведомления);
	
	ПолноеИмяТипаОснования = ЭкземплярПредмета.Метаданные().ПолноеИмя();
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПолучателиУведомлений

&НаКлиенте
Процедура ПолучателиУведомленийВидКонтактнойИнформацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОформитьЭлементУправленияНаСервере(Элементы.ПолучателиУведомлений.ТекущиеДанные.Получатель);
	Оповещение = Новый ОписаниеОповещения("ОкончаниеВыбораЗначениеКИ", ЭтотОбъект);
	ПоказатьВыборИзСписка(Оповещение, Элемент.СписокВыбора, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиУведомленийПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьИзСпискаЭлементПоТипу(Элементы.ПолучателиУведомлений.ТекущиеДанные.ТипПолучателя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиУведомленийШаблонСообщенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ОкончаниеВыбораШаблона", ЭтотОбъект, Новый Структура("Реквизит", Элемент.Имя));
	ВидСообщения = ?(ВидТранспорта = ПредопределенноеЗначение("Перечисление.ВидыТранспортаУведомлений.SMS"), "СообщениеSMS", "Сообщение Email");
	ШаблоныСообщенийКлиент.ВыбратьШаблон(Оповещение, ВидСообщения, ЭкземплярПредмета, ВидУведомления);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиУведомленийШаблонСообщенияСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВидСообщения = ?(ВидТранспорта = ПредопределенноеЗначение("Перечисление.ВидыТранспортаУведомлений.SMS"), "СообщениеSMS", "Сообщение Email");
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ВидСообщения",				ВидСообщения);
	ПараметрыФормы.Вставить("ПолноеИмяТипаОснования", 	ПолноеИмяТипаОснования);
	ПараметрыФормы.Вставить("ТолькоДляАвтора",			Истина);
	ПараметрыФормы.Вставить("ВладелецШаблона",			ВидУведомления);
	ПараметрыФормы.Вставить("Новый",					Истина);
	
	ОткрытьФорму("Справочник.ШаблоныСообщений.Форма.ФормаЭлемента", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если НЕ ПроверкаЗаполнения() Тогда
		Закрыть(ПолучателиССервера());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучателиССервера()
	Возврат ПоместитьВоВременноеХранилище(ПолучателиУведомлений.Выгрузить(), ЭтаФорма);;
КонецФункции

&НаКлиенте
Процедура ВыбратьИзСпискаЭлементПоТипу(ИмяТипа)
	
	СтруктураПараметров = Новый Структура("РежимВыбора", Истина);
	Если ИмяТипа = "Справочник.Пользователи" Тогда
		ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", СтруктураПараметров, Элементы.ПолучателиУведомлений.ПодчиненныеЭлементы.ПолучателиУведомленийПолучатель);
	ИначеЕсли ИмяТипа = "Справочник.Сотрудники" Тогда
		ОткрытьФорму("Справочник.Сотрудники.ФормаВыбора", СтруктураПараметров, Элементы.ПолучателиУведомлений.ПодчиненныеЭлементы.ПолучателиУведомленийПолучатель);
	ИначеЕсли ИмяТипа = "Справочник.ФизическиеЛица" Тогда
		ОткрытьФорму("Справочник.ФизическиеЛица.ФормаВыбора", СтруктураПараметров, Элементы.ПолучателиУведомлений.ПодчиненныеЭлементы.ПолучателиУведомленийПолучатель);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОформитьЭлементУправленияНаСервере(Получатель)
	
	Если ЗначениеЗаполнено(Получатель) Тогда
		Элемент = Элементы.ПолучателиУведомлений.ТекущийЭлемент;
		МассивТипов = Новый Массив();
		МассивТипов.Добавить(ТипЗнч(Получатель));
		ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
		Справочники.РассылкиУведомлений.ОформитьЭлементУправленияВидаКонтактнойИнформации(Элемент, ВидТранспорта, ОписаниеТипов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверкаЗаполнения()
	
	Отказ = Ложь;
	Для Каждого Строка Из ПолучателиУведомлений Цикл
		Если Не ЗначениеЗаполнено(Строка.Получатель) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст			= НСтр("ru='Необходимо указать получателя'");
			Сообщение.Поле 			= "ПолучателиУведомлений["+ПолучателиУведомлений.Индекс(Строка)+"].Получатель";
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Строка.ВидКонтактнойИнформации) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст			= НСтр("ru='Необходимо указать вид контактной информации'");
			Сообщение.Поле 			= "ПолучателиУведомлений["+ПолучателиУведомлений.Индекс(Строка)+"].ВидКонтактнойИнформации";
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Строка.ШаблонСообщения) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст			= НСтр("ru='Необходимо указать вид шаблон сообщения'");
			Сообщение.Поле 			= "ПолучателиУведомлений["+ПолучателиУведомлений.Индекс(Строка)+"].ШаблонСообщения";
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Отказ;
	
КонецФункции

&НаКлиенте
Процедура ОкончаниеВыбораШаблона(Шаблон, ДополнительныеПараметры) Экспорт
	
	Если Шаблон <> Неопределено Тогда
		Элементы.ПолучателиУведомлений.ТекущиеДанные.ШаблонСообщения = Шаблон;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеВыбораЗначениеКИ(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Элементы.ПолучателиУведомлений.ТекущиеДанные.ВидКонтактнойИнформации = Результат.Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементУсловногоОформления.Отбор, "ПолучателиУведомлений.ТипПолучателя", "Справочник.Пользователи", ВидСравненияКомпоновкиДанных.Равно);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", "Пользователь");
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПолучателиУведомленийТипПолучателя");
	ОформляемоеПоле.Использование = Истина;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементУсловногоОформления.Отбор, "ПолучателиУведомлений.ТипПолучателя", "Справочник.ФизическиеЛица", ВидСравненияКомпоновкиДанных.Равно);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='Физическое лицо'"));
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПолучателиУведомленийТипПолучателя");
	ОформляемоеПоле.Использование = Истина;
	
КонецПроцедуры

#КонецОбласти
