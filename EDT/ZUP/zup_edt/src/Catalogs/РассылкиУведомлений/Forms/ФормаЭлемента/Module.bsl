
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьСлужебныеРеквизитыШаблона();
	УстановитьПодсказкуОписаниеВидаУведомления();
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	МассивРеквизитовПолучателей = Новый Массив;
	АдресМассиваРеквизитов = ПоместитьВоВременноеХранилище(МассивРеквизитовПолучателей, УникальныйИдентификатор);
	
	МассивЭлементовПолучателей = Новый Массив;
	АдресМассиваЭлементов = ПоместитьВоВременноеХранилище(МассивЭлементовПолучателей , УникальныйИдентификатор);
	
	ОбновитьРекомендованныхПолучателей();
	
	ВосстановленныйОтборУведомлений = ТекущийОбъект.Отбор.Получить();
	Если ВосстановленныйОтборУведомлений <> Неопределено Тогда
		НастройкиОтборов.Загрузить(ВосстановленныйОтборУведомлений);
	Иначе
		ЗаполнитьТаблицуНастройкиОтборов();
	КонецЕсли;
	УстановитьВариантПериода();
	
	Элементы.ДекорацияОтборы.Заголовок = ПредставленияСсылкиНастройкиОтбора(НастройкиОтборов);
	СписокПолучателей = ПредставлениеСсылкиПолучателей(Объект.ПолучателиУведомленийФиксированные);
	НастроитьСпискиВыбораПолейПериода(Объект.ВидУведомления);
	
	Если Объект.Ссылка.Пустая() Тогда
		ВариантПериода = Элементы.ВариантПериода.СписокВыбора[0].Значение;
		УстановитьОтветственного();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВидимостьПоляУчетнойЗаписи();
	ВидимостьПанелиНастройкиПериода();
	УправлениеВидимостьРеквизитовРасписания();
	ВидимостьСсылкиОтборы();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.Отбор = Новый ХранилищеЗначения(НастройкиОтборов.Выгрузить());
	
	ТекущийОбъект.ПолучателиУведомленийДинамические.Очистить();
	
	Для Каждого Получатель Из РекомендованныеПолучатели Цикл
		Если ЭтаФорма[ПрефиксИмениПоляФлаг() + Получатель.Имя] Тогда
			НоваяСтрока = ТекущийОбъект.ПолучателиУведомленийДинамические.Добавить();
			НоваяСтрока.Получатель = Получатель.Имя;
			НоваяСтрока.ВидКонтактнойИнформации = ЭтаФорма[ПрефиксИмениПоляПолеКонтактнойИнформации() + Получатель.Имя];
			НоваяСтрока.ШаблонСообщения = ЭтаФорма[ПрефиксИмениПоляШаблон() + Получатель.Имя];
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ЗадатьВопросПередЗаписью И Объект.Подготовлена И (Не ПрошлоеСостояниеПодготовлено(Объект.Ссылка) ИЛИ Модифицированность) Тогда
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗаписьюЗавершение", ЭтаФорма, Отказ);
		Отказ = Истина;
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru='Подготовить сейчас'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Нет, НСтр("ru='Подготовить по расписанию'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Отмена'"));
		
		ПоказатьВопрос(Оповещение, НСтр("ru='Подготовить уведомления сейчас?'"), СписокКнопок, , , НСтр("ru='Рассылка подготовлена'"));
		ЗадатьВопросПередЗаписью = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если СоздатьУведомленияПослеЗаписи Тогда
		ПараметрыЗапуска = Новый Структура("Рассылка, Форма");
		ПараметрыЗапуска.Рассылка = Объект.Ссылка;
		ПараметрыЗапуска.Форма = ЭтаФорма;
		
		ПараметрыМетода = Новый Структура;
		ПараметрыМетода.Вставить("Рассылка", Объект.Ссылка);
		
		УведомленияСервер.ЗапуститьФоновоеЗаданиеСозданияУведомлений(ПараметрыМетода, УникальныйИдентификатор);
	КонецЕсли;
	СоздатьУведомленияПослеЗаписи = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ЗакрытьФормуПослеЗаписи Тогда
		Закрыть();
		Оповестить("ЗаписанаРассылкаУведомлений");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПодготовленаПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.Ответственный) Тогда
		УстановитьОтветственного();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидУведомленияПриИзменении(Элемент)
	
	ПриИзмененииВидаУведомленияНаСервере();
	Элементы.ДекорацияОтборы.Заголовок = ПредставленияСсылкиНастройкиОтбора(НастройкиОтборов);
	ВидимостьСсылкиОтборы();
	ОбработатьСтандартныйПериод();
	ВидимостьПанелиНастройкиПериода();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВидаУведомленияНаСервере()
	
	НастроитьСпискиВыбораПолейПериода(Объект.ВидУведомления);
	Объект.ЭкземплярТипаПредмета = Справочники.РассылкиУведомлений.ЭкземплярТипаПредмета(Объект.ВидУведомления);
	УстановитьПодсказкуОписаниеВидаУведомления();
	ОбновитьРекомендованныхПолучателей();
	ЗаполнитьТаблицуНастройкиОтборов();
	ОбновитьСлужебныеРеквизитыШаблона();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПериодаПриИзменении(Элемент)
	
	УправлениеВидимостьРеквизитовРасписания();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСсылкаПараметрыПредметаНажатие(Элемент)
	
	Обработчик = Новый ОписаниеОповещения("НастройкиОтборовОкончаниеРедактирования", ЭтотОбъект);
	
	ПараметрыОткрытияФормы = Новый Структура("НастройкиОтборов", НастройкиОтборов);
	ОткрытьФорму("Справочник.РассылкиУведомлений.Форма.ФормаНастройкиОтбора", ПараметрыОткрытияФормы, , , , , Обработчик);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПолучателейНажатие(Элемент, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.ВидУведомления) Тогда
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Сначала нужно выбрать вид уведомления.'"),,, "Объект.ВидУведомления");
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Обработчик = Новый ОписаниеОповещения("ПолучателиРассылкиОкончаниеРедактирования", ЭтотОбъект);
	
	ПараметрыОткрытияФормы = Новый Структура("АдресТаблицыПолучателей,ВидТранспорта, ЭкземплярПредмета, ВидУведомления");
	ПараметрыОткрытияФормы.АдресТаблицыПолучателей 	= СписокФиксированныхПолучателей();
	ПараметрыОткрытияФормы.ВидТранспорта 			= Объект.ВидТранспорта;
	ПараметрыОткрытияФормы.ЭкземплярПредмета 		= ЭкземплярПредмета;
	ПараметрыОткрытияФормы.ВидУведомления 			= Объект.ВидУведомления;
	
	ОткрытьФорму("Справочник.РассылкиУведомлений.Форма.ФормаСпискаДополнительныхПолучателей", ПараметрыОткрытияФормы, , , , , Обработчик);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ШаблонУведомленияСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВидСообщения = ВидСообщенияПоВидуТранспорта();
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ВидСообщения"			, ВидСообщения);
	ПараметрыФормы.Вставить("ПолноеИмяТипаОснования", ПолноеИмяТипаОснования);
	ПараметрыФормы.Вставить("ТолькоДляАвтора"		, Истина);
	ПараметрыФормы.Вставить("ВладелецШаблона"		, Объект.ВидУведомления);
	ПараметрыФормы.Вставить("Новый"					, Истина);
	
	ОткрытьФорму("Справочник.ШаблоныСообщений.Форма.ФормаЭлемента", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ШаблонУведомленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ПослеВыбораШаблона", ЭтотОбъект, Новый Структура("Реквизит", Элемент.Имя));
	ВидСообщения = ВидСообщенияПоВидуТранспорта();
	ШаблоныСообщенийКлиент.ВыбратьШаблон(Оповещение, ВидСообщения, ПолноеИмяТипаОснования, Объект.ВидУведомления);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииФлагаПолучателя(Элемент)
	
	Элементы[СтрЗаменить(Элемент.Имя, ПрефиксИмениПоляФлаг(), ПрефиксИмениПоляПолеКонтактнойИнформации())].Видимость = ЭтаФорма[Элемент.Имя];
	Элементы[СтрЗаменить(Элемент.Имя, ПрефиксИмениПоляФлаг(), ПрефиксИмениПоляШаблон())].Видимость = ЭтаФорма[Элемент.Имя];
	
КонецПроцедуры

&НаКлиенте
Процедура СпособОпределенияМоментаУведомленияПриИзменении(Элемент)
	
	УправлениеВидимостьРеквизитовРасписания();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидТранспортаПриИзменении(Элемент)
	
	ВидимостьПоляУчетнойЗаписи();
	ВидТранспортаПриИзмененииНаСервере();
	
	Если Объект.ПолучателиУведомленийФиксированные.Количество() > 0 Тогда
		Текст			= НСтр("ru= 'Вид контактной информации и шаблон сообщения были очищены. Необходимо обновить значения.'");
		Поле			= "СписокПолучателей";
		ОбщегоНазначенияКлиент.СообщитьПользователю(Текст, , Поле);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантПериодаПриИзменении(Элемент)
	
	ОбработатьСтандартныйПериод();
	ВидимостьПанелиНастройкиПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантПериодаОчистка(Элемент, СтандартнаяОбработка)
	
	ВидимостьПанелиНастройкиПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяОтправкиРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Объект.ВремяОтправки = Объект.ВремяОтправки + Направление * 3600;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	ЗакрытьФормуПослеЗаписи = Истина;
	Записать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НастройкиОтборовОкончаниеРедактирования(Результат, Параметр) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЗагрузкаОтборовНаСервере(Результат);
		Элементы.ДекорацияОтборы.Заголовок = ПредставленияСсылкиНастройкиОтбора(НастройкиОтборов);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиРассылкиОкончаниеРедактирования(Результат, Параметр) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЗагрузитьДополнительныхПолучателейНаСервере(Результат);
		СписокПолучателей = ПредставлениеСсылкиПолучателей(Объект.ПолучателиУведомленийФиксированные);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДополнительныхПолучателейНаСервере(Результат)
	
	ТаблицаРезультата = ПолучитьИзВременногоХранилища(Результат);
	Если ТипЗнч(ТаблицаРезультата) = Тип("ТаблицаЗначений") Тогда
		Объект.ПолучателиУведомленийФиксированные.Загрузить(ТаблицаРезультата);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСлужебныеРеквизитыШаблона()
	
	Если Не ЗначениеЗаполнено(Объект.ЭкземплярТипаПредмета) Тогда
		Объект.ЭкземплярТипаПредмета = Справочники.РассылкиУведомлений.ЭкземплярТипаПредмета(Объект.ВидУведомления);
	КонецЕсли;
	
	Если Объект.ЭкземплярТипаПредмета <> Неопределено Тогда
		МенеджерПредмета = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.ЭкземплярТипаПредмета);
		ЭкземплярПредмета = ?(МенеджерПредмета = Неопределено,
									Объект.ЭкземплярТипаПредмета,
									МенеджерПредмета.ПолучитьСсылку());
	КонецЕсли;
	
	ПолноеИмяТипаОснования = УведомленияСервер.ИмяТипаШаблонаСообщений(Объект.ВидУведомления);
	
КонецПроцедуры

&НаСервере
Функция СписокФиксированныхПолучателей()
	
	АдресВХранилище = ПоместитьВоВременноеХранилище(Объект.ПолучателиУведомленийФиксированные.Выгрузить(), УникальныйИдентификатор);
	Возврат АдресВХранилище;
	
КонецФункции

&НаСервере
Процедура ОбновитьРекомендованныхПолучателей()
	
	МассивРеквизитовПолучателей = ПолучитьИзВременногоХранилища(АдресМассиваРеквизитов);
	МассивИменЭлементовПолучателей = ПолучитьИзВременногоХранилища(АдресМассиваЭлементов);
	
	Для Каждого ИмяЭлементаФормы Из МассивИменЭлементовПолучателей Цикл
		Элементы.Удалить(Элементы[ИмяЭлементаФормы]);
	КонецЦикла;
	МассивИменЭлементовПолучателей.Очистить();
	Если МассивРеквизитовПолучателей.Количество() > 0 Тогда
		МассивЭлементовКУдалению = Новый Массив;
		Для Каждого ЭлементМассива Из МассивРеквизитовПолучателей Цикл
			
			МассивЭлементовКУдалению.Добавить(ЭлементМассива.Имя);
		КонецЦикла;
		ИзменитьРеквизиты(, МассивЭлементовКУдалению);		
		МассивРеквизитовПолучателей.Очистить();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидУведомления) Тогда
		Возврат;
	КонецЕсли;
		
	ЗаполнитьРекомендованныхПолучателей();
	
	Для Каждого Получатель Из РекомендованныеПолучатели Цикл
		Реквизит = Новый РеквизитФормы(ПрефиксИмениПоляФлаг() + Получатель.Имя, Новый ОписаниеТипов("Булево"),,,Истина);
		МассивРеквизитовПолучателей.Добавить(Реквизит);
		Реквизит = Новый РеквизитФормы(ПрефиксИмениПоляПолеКонтактнойИнформации() + Получатель.Имя, Новый ОписаниеТипов("СправочникСсылка.ВидыКонтактнойИнформации"),,,Истина);
		МассивРеквизитовПолучателей.Добавить(Реквизит);
		Реквизит = Новый РеквизитФормы(ПрефиксИмениПоляШаблон() + Получатель.Имя, Новый ОписаниеТипов("СправочникСсылка.ШаблоныСообщений"),,,Истина);
		МассивРеквизитовПолучателей.Добавить(Реквизит);
	КонецЦикла;	
	ИзменитьРеквизиты(МассивРеквизитовПолучателей);
	
	Для Каждого Получатель Из РекомендованныеПолучатели Цикл
		
		ГруппаЭлементов = Элементы.Добавить(ПрефиксИмениГруппы() +Получатель.Имя, Тип("ГруппаФормы"), Элементы.ПанельРекомендованныхПолучателей); 
		ГруппаЭлементов.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаЭлементов.ОтображатьЗаголовок = Ложь;
		ГруппаЭлементов.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		
		ДекораторФлажка = Элементы.Добавить(ПрефиксИмениПоляГруппаДекоратор() +Получатель.Имя, Тип("ГруппаФормы"), ГруппаЭлементов); 
		ДекораторФлажка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ДекораторФлажка.ОтображатьЗаголовок = Ложь;
		ДекораторФлажка.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		ДекораторФлажка.Ширина = 28;
		ДекораторФлажка.РастягиватьПоГоризонтали = Ложь;
		
		ЭлементУправления = Элементы.Добавить(ПрефиксИмениПоляФлаг() +Получатель.Имя, Тип("ПолеФормы"), ДекораторФлажка); 
		ЭлементУправления.Вид = ВидПоляФормы.ПолеФлажка;
		ЭлементУправления.Заголовок = Получатель.Представление;
		ЭлементУправления.ПутьКДанным = ПрефиксИмениПоляФлаг() + Получатель.Имя;
		ЭлементУправления.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		ЭлементУправления.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзмененииФлагаПолучателя");
		
		МассивИменЭлементовПолучателей.Добавить(ЭлементУправления.Имя);
		МассивИменЭлементовПолучателей.Добавить(ДекораторФлажка.Имя);
		
		ЭлементУправления = Элементы.Добавить(ПрефиксИмениПоляПолеКонтактнойИнформации() +Получатель.Имя, Тип("ПолеФормы"), ГруппаЭлементов); 
		ЭлементУправления.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементУправления.Заголовок = "  ";
		ЭлементУправления.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЭлементУправления.ПодсказкаВвода = НСтр("ru='Вид контактной информации'");
		ЭлементУправления.ПутьКДанным = ПрефиксИмениПоляПолеКонтактнойИнформации() + Получатель.Имя;
		ЭлементУправления.АвтоОтметкаНезаполненного = Истина;
		ЭлементУправления.Ширина = 20;
		ЭлементУправления.РастягиватьПоГоризонтали = Ложь;
		ЭлементУправления.Видимость = Ложь;
		
		МассивСвязей = Новый Массив;
		НоваяСвязь = Новый СвязьПараметраВыбора("ВидТранспорта", "Объект.ВидТранспорта");
		МассивСвязей.Добавить(НоваяСвязь);		
		ЭлементУправления.СвязиПараметровВыбора = Новый ФиксированныйМассив(МассивСвязей);
		
		Справочники.РассылкиУведомлений.ОформитьЭлементУправленияВидаКонтактнойИнформации(ЭлементУправления, Объект.ВидТранспорта, Получатель.ОписаниеТипов);
		
		Если Не ЗначениеЗаполнено(ЭтаФорма[ПрефиксИмениПоляПолеКонтактнойИнформации() + Получатель.Имя]) 
				И ЭлементУправления.СписокВыбора.Количество() > 0 Тогда
			ЭтаФорма[ПрефиксИмениПоляПолеКонтактнойИнформации() + Получатель.Имя] = ЭлементУправления.СписокВыбора[0];
		КонецЕсли;
		
		МассивИменЭлементовПолучателей.Добавить(ЭлементУправления.Имя);
		
		ЭлементУправления = Элементы.Добавить(ПрефиксИмениПоляШаблон() +Получатель.Имя, Тип("ПолеФормы"), ГруппаЭлементов); 
		ЭлементУправления.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементУправления.Заголовок = " ";
		ЭлементУправления.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЭлементУправления.ПодсказкаВвода = НСтр("ru='Шаблон сообщения'");
		ЭлементУправления.ПутьКДанным = ПрефиксИмениПоляШаблон() + Получатель.Имя;
		ЭлементУправления.АвтоОтметкаНезаполненного = Истина;
		ЭлементУправления.Видимость = Ложь;
		ЭлементУправления.УстановитьДействие("НачалоВыбора", "Подключаемый_ШаблонУведомленияНачалоВыбора");
		ЭлементУправления.УстановитьДействие("Создание", "Подключаемый_ШаблонУведомленияСоздание");
		
		МассивСвязей = Новый Массив;
		НоваяСвязь = Новый СвязьПараметраВыбора("ВидТранспорта", "Объект.ВидТранспорта");
		МассивСвязей.Добавить(НоваяСвязь);
		ЭлементУправления.СвязиПараметровВыбора = Новый ФиксированныйМассив(МассивСвязей);
		
		МассивИменЭлементовПолучателей.Добавить(ЭлементУправления.Имя);
		МассивИменЭлементовПолучателей.Добавить(ГруппаЭлементов.Имя);
		
		МассивСтрок = Объект.ПолучателиУведомленийДинамические.НайтиСтроки(Новый Структура("Получатель", Получатель.Имя));
		Если МассивСтрок.Количество() > 0 Тогда
			ЭтаФорма[ПрефиксИмениПоляФлаг() + Получатель.Имя] = Истина;
			ЭтаФорма[ПрефиксИмениПоляПолеКонтактнойИнформации() + Получатель.Имя] = МассивСтрок[0].ВидКонтактнойИнформации;
			Элементы[ПрефиксИмениПоляПолеКонтактнойИнформации() + Получатель.Имя].Видимость = ЭтаФорма[ПрефиксИмениПоляФлаг() + Получатель.Имя];
			ЭтаФорма[ПрефиксИмениПоляШаблон() + Получатель.Имя] = МассивСтрок[0].ШаблонСообщения;
			Элементы[ПрефиксИмениПоляШаблон() + Получатель.Имя].Видимость = ЭтаФорма[ПрефиксИмениПоляФлаг() + Получатель.Имя];
		КонецЕсли;
		
	КонецЦикла;	

	АдресМассиваРеквизитов = ПоместитьВоВременноеХранилище(МассивРеквизитовПолучателей, УникальныйИдентификатор);
	АдресМассиваЭлементов = ПоместитьВоВременноеХранилище(МассивИменЭлементовПолучателей, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРекомендованныхПолучателей()
	
	РекомендованныеПолучатели.Очистить();
	
	ОписаниеДанных = УведомленияСервер.ОписаниеДанныхУведомления(Объект.ВидУведомления);
	Если ЗначениеЗаполнено(ОписаниеДанных) И ОписаниеДанных.Свойство("Получатели") И ТипЗнч(ОписаниеДанных.Получатели) = Тип("ТаблицаЗначений") Тогда
		Для Каждого СтрокаПолучателя Из ОписаниеДанных.Получатели Цикл
			ЗаполнитьЗначенияСвойств(РекомендованныеПолучатели.Добавить(), СтрокаПолучателя);
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНастройкиОтборов()
	
	НастройкиОтборов.Очистить();
	ОписаниеДанных = УведомленияСервер.ОписаниеДанныхУведомления(Объект.ВидУведомления);
	
	Отборы = Неопределено;
	Если ЗначениеЗаполнено(ОписаниеДанных) И ОписаниеДанных.Свойство("Отборы", Отборы) И ТипЗнч(Отборы) = Тип("ТаблицаЗначений") Тогда
		Для Каждого Строка Из Отборы Цикл
			СтрокаОтборов = НастройкиОтборов.Добавить();
			СтрокаОтборов.ЛевоеЗначение 	= Строка.Имя;
			СтрокаОтборов.Представление 	= Строка.Представление;
			СтрокаОтборов.ОписаниеТипов 	= Строка.ОписаниеТипов;
			СтрокаОтборов.ВидСравнения 		= ВидСравнения.Равно;
			СтрокаОтборов.ПравоеЗначение 	= Строка.ОписаниеТипов.ПривестиЗначение();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаОтборовНаСервере(АдресВоВременномХранилище)
	
	ТаблицаДляЗагрузки = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	Если ТипЗнч(ТаблицаДляЗагрузки) = Тип("ТаблицаЗначений") Тогда
		НастройкиОтборов.Загрузить(ТаблицаДляЗагрузки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПодсказкуОписаниеВидаУведомления()
	
	Элементы.ВидУведомления.Подсказка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидУведомления, "Описание");
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостьРеквизитовРасписания()
	
	Элементы.ВремяОтправки.Видимость = (Объект.ЕдиницаИзмеренияИнтервалаУведомления = ПредопределенноеЗначение("Перечисление.ЕдиницыИзмеренияИнтервалаУведомлений.День"));	
	
	Элементы.ИнтервалУведомления.Видимость = (Объект.СпособОпределенияМоментаУведомления <> ПредопределенноеЗначение("Перечисление.СпособыОпределенияМоментаУведомления.ОдновременноССобытием"));
	Элементы.ЕдиницаИзмеренияИнтервалаУведомления.Видимость = (Объект.СпособОпределенияМоментаУведомления <> ПредопределенноеЗначение("Перечисление.СпособыОпределенияМоментаУведомления.ОдновременноССобытием"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораШаблона(Шаблон, ДополнительныеПараметры) Экспорт
	Если Шаблон <> Неопределено Тогда
		ЭтаФорма[ДополнительныеПараметры.Реквизит] = Шаблон;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьПоляУчетнойЗаписи()
	
	Элементы.УчетнаяЗаписьЭлектроннойПочты.Видимость = (Объект.ВидТранспорта = ПредопределенноеЗначение("Перечисление.ВидыТранспортаУведомлений.Email"));
	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьПанелиНастройкиПериода()
	
	Элементы.ГруппаНастройкаПериода.Видимость = (ВариантПериода = 0)
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВариантПериода()
	
	ВариантПериода = 0;
	Если Объект.СпособОпределенияМоментаУведомления = Перечисления.СпособыОпределенияМоментаУведомления.ДоСобытия Тогда
		Если Объект.ЕдиницаИзмеренияИнтервалаУведомления = Перечисления.ЕдиницыИзмеренияИнтервалаУведомлений.День И Объект.ВремяОтправки = Дата('00010101000000') Тогда
			Если Объект.ИнтервалУведомления = 14 Тогда
				ВариантПериода = -14;
			ИначеЕсли Объект.ИнтервалУведомления = 7 Тогда
				ВариантПериода = -7;
			ИначеЕсли Объект.ИнтервалУведомления = 1 Тогда
				ВариантПериода = -1
			КонецЕсли;
		ИначеЕсли Объект.ЕдиницаИзмеренияИнтервалаУведомления = Перечисления.ЕдиницыИзмеренияИнтервалаУведомлений.Час Тогда
			Если Объект.ИнтервалУведомления = 3 Тогда
				ВариантПериода = -0.3;
			ИначеЕсли Объект.ИнтервалУведомления = 1 Тогда
				ВариантПериода = -0.1;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Объект.СпособОпределенияМоментаУведомления = Перечисления.СпособыОпределенияМоментаУведомления.ПослеСобытия Тогда
		Если Объект.ИнтервалУведомления = 1 И Объект.ВремяОтправки = Дата('00010101000000') И Объект.ЕдиницаИзмеренияИнтервалаУведомления = Перечисления.ЕдиницыИзмеренияИнтервалаУведомлений.День Тогда
				ВариантПериода = 1;
		КонецЕсли;
		Если Объект.ИнтервалУведомления = 0 И Объект.ЕдиницаИзмеренияИнтервалаУведомления = Перечисления.ЕдиницыИзмеренияИнтервалаУведомлений.Час Тогда
			ВариантПериода = 0.1;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьСтандартныйПериод()
	
	Если ВариантПериода <> 0 Тогда
		Если ВариантПериода = 0.1 Тогда
			Объект.СпособОпределенияМоментаУведомления = Перечисления.СпособыОпределенияМоментаУведомления.ПослеСобытия;
			Объект.ЕдиницаИзмеренияИнтервалаУведомления = Перечисления.ЕдиницыИзмеренияИнтервалаУведомлений.Час;
			Объект.ИнтервалУведомления = 0;
		ИначеЕсли ВариантПериода < 0 Тогда
			Объект.СпособОпределенияМоментаУведомления = Перечисления.СпособыОпределенияМоментаУведомления.ДоСобытия;
			Объект.ЕдиницаИзмеренияИнтервалаУведомления = ?(-ВариантПериода < 1, Перечисления.ЕдиницыИзмеренияИнтервалаУведомлений.Час, Перечисления.ЕдиницыИзмеренияИнтервалаУведомлений.День);
			Объект.ИнтервалУведомления = ?(-ВариантПериода < 1, -ВариантПериода*10, -ВариантПериода);
		ИначеЕсли ВариантПериода > 0 Тогда
			Объект.СпособОпределенияМоментаУведомления = Перечисления.СпособыОпределенияМоментаУведомления.ПослеСобытия;
			Объект.ЕдиницаИзмеренияИнтервалаУведомления = ?(ВариантПериода < 1, Перечисления.ЕдиницыИзмеренияИнтервалаУведомлений.Час, Перечисления.ЕдиницыИзмеренияИнтервалаУведомлений.День);
			Объект.ИнтервалУведомления = ?(ВариантПериода < 1, ВариантПериода*10, ВариантПериода);
		КонецЕсли;
		Объект.ВремяОтправки = Дата('00010101000000');
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьСсылкиОтборы()
	
	Элементы.ДекорацияОтборы.Видимость = (НастройкиОтборов.Количество() > 0);
	
КонецПроцедуры

&НаКлиенте
Функция ВидСообщенияПоВидуТранспорта()
	Возврат ?(Объект.ВидТранспорта = ПредопределенноеЗначение("Перечисление.ВидыТранспортаУведомлений.SMS"), "СообщениеSMS", "Сообщение Email");
КонецФункции

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	НаличиеОшибокЗаполнения = Ложь;
	
	Если Объект.ПолучателиУведомленийФиксированные.Количество() = 0 Тогда
		НаличиеОшибокЗаполнения = Истина;
		ИмяЭлемента = "";
		Для Каждого Получатель Из РекомендованныеПолучатели Цикл
			Если ЭтаФорма[ПрефиксИмениПоляФлаг() + Получатель.Имя] Тогда
				НаличиеОшибокЗаполнения = Ложь;
			КонецЕсли;
			ИмяЭлемента = ПрефиксИмениПоляФлаг() + Получатель.Имя;
		КонецЦикла;
		Если НаличиеОшибокЗаполнения Тогда
			Текст	= НСтр("ru='Необходимо указать хотя бы одного получателя уведомлений.'");
			Поле	= ?(ПустаяСтрока(ИмяЭлемента), "СписокПолучателей", ИмяЭлемента);
			ОбщегоНазначения.СообщитьПользователю(Текст, , Поле);
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Получатель Из РекомендованныеПолучатели Цикл
		Если ЭтаФорма[ПрефиксИмениПоляФлаг() + Получатель.Имя] И Не ЗначениеЗаполнено(ЭтаФорма[ПрефиксИмениПоляПолеКонтактнойИнформации() + Получатель.Имя]) Тогда
			Текст	= НСтр("ru='Необходимо указать вид контактной информации получателя.'");
			Поле	= ПрефиксИмениПоляПолеКонтактнойИнформации() + Получатель.Имя;
			ОбщегоНазначения.СообщитьПользователю(Текст, , Поле);
			
			НаличиеОшибокЗаполнения = Истина;
		КонецЕсли;
		Если ЭтаФорма[ПрефиксИмениПоляФлаг() + Получатель.Имя] И Не ЗначениеЗаполнено(ЭтаФорма[ПрефиксИмениПоляШаблон() + Получатель.Имя]) Тогда
			Текст	= НСтр("ru='Необходимо указать шаблон сообщения.'");
			Поле	= ПрефиксИмениПоляШаблон() + Получатель.Имя;
			ОбщегоНазначения.СообщитьПользователю(Текст, , Поле);
			
			НаличиеОшибокЗаполнения = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаПолучателя Из Объект.ПолучателиУведомленийФиксированные Цикл
		НомерСтроки = Объект.ПолучателиУведомленийФиксированные.Индекс(СтрокаПолучателя) + 1;
		Если Не ЗначениеЗаполнено(СтрокаПолучателя.Получатель) Тогда
			Текст	= НСтр("ru='Не указан получатель (Таблица Дополнительные получатели) в строке №.'") + " " + НомерСтроки;
			Поле	= "СписокПолучателей";
			ОбщегоНазначения.СообщитьПользователю(Текст, , Поле);
			
			НаличиеОшибокЗаполнения = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаПолучателя.ВидКонтактнойИнформации) Тогда
			Текст	= НСтр("ru='Не указан вид контактной информации (Таблица Дополнительные получатели) в строке №.'") + " " + НомерСтроки;
			Поле	= "СписокПолучателей";
			ОбщегоНазначения.СообщитьПользователю(Текст, , Поле);
			
			НаличиеОшибокЗаполнения = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаПолучателя.ШаблонСообщения) Тогда
			Текст	= НСтр("ru='Не указан шаблон сообщения (Таблица Дополнительные получатели) в строке №.'") + " " + НомерСтроки;
			Поле	= "СписокПолучателей";
			ОбщегоНазначения.СообщитьПользователю(Текст, , Поле);
			
			НаличиеОшибокЗаполнения = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если Объект.ВидТранспорта = ПредопределенноеЗначение("Перечисление.ВидыТранспортаУведомлений.Email") И НЕ ЗначениеЗаполнено(Объект.УчетнаяЗаписьЭлектроннойПочты) Тогда
		Текст		= НСтр("ru='Необходимо указать учетную запись для отправки почты.'");
		Поле		= "УчетнаяЗаписьЭлектроннойПочты";
		ПутьКДанным	= "Объект";
		ОбщегоНазначения.СообщитьПользователю(Текст, , Поле, ПутьКДанным);
		
		НаличиеОшибокЗаполнения = Истина;
	КонецЕсли;
	
	Если НаличиеОшибокЗаполнения Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВидТранспортаПриИзмененииНаСервере()
	
	Для Каждого СтрокаТаблицы Из Объект.ПолучателиУведомленийФиксированные Цикл
		СтрокаТаблицы.ВидКонтактнойИнформации 	= Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
		СтрокаТаблицы.ШаблонСообщения 			= Справочники.ШаблоныСообщений.ПустаяСсылка();
	КонецЦикла;
	
	МассивИменЭлементовПолучателей = ПолучитьИзВременногоХранилища(АдресМассиваЭлементов);
	
	Для Каждого ИмяЭлемента Из МассивИменЭлементовПолучателей Цикл
		Если СтрНайти(ИмяЭлемента, ПрефиксИмениПоляПолеКонтактнойИнформации()) <> 0 Тогда
			ИмяПолучателя = СтрЗаменить(ИмяЭлемента, ПрефиксИмениПоляПолеКонтактнойИнформации(), "");
			МассивСтрокРекомендованногоПолучателя = РекомендованныеПолучатели.НайтиСтроки(Новый Структура("Имя", ИмяПолучателя));
			Если МассивСтрокРекомендованногоПолучателя.Количество() > 0 Тогда
				ОписаниеТипов = МассивСтрокРекомендованногоПолучателя[0].ОписаниеТипов;
			Иначе
				Возврат;
			КонецЕсли;
			Справочники.РассылкиУведомлений.ОформитьЭлементУправленияВидаКонтактнойИнформации(Элементы[ИмяЭлемента], Объект.ВидТранспорта, ОписаниеТипов);
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗаписьюЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
		ЗадатьВопросПередЗаписью = Ложь;
	Иначе
		СоздатьУведомленияПослеЗаписи = (Результат = КодВозвратаДиалога.Да);
		Записать();
		ЗадатьВопросПередЗаписью = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеСсылкиПолучателей(ПолучателиУведомленийФиксированные)
	
	ПредставлениеСсылки = "";
	КоличествоПолучателей = 0;
	Для Каждого СтрокаТЧ Из ПолучателиУведомленийФиксированные Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.Получатель) Тогда
			ПредставлениеСсылки = ПредставлениеСсылки + ?(ПустаяСтрока(ПредставлениеСсылки), "", ", ") + Строка(СтрокаТЧ.Получатель);
			КоличествоПолучателей = КоличествоПолучателей + 1;
		КонецЕсли;
	КонецЦикла;
	Если ПустаяСтрока(ПредставлениеСсылки) Тогда
		ПредставлениеСсылки = НСтр("ru='Добавить получателей'");
	Иначе	
		ПредставлениеСсылки = НСтр("ru='Дополнительные получатели'") + " (" +КоличествоПолучателей+"): " + ПредставлениеСсылки + ".";
	КонецЕсли;
	
	Возврат ПредставлениеСсылки;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПредставленияСсылкиНастройкиОтбора(НастройкиОтборов)
	
	ПредставлениеСсылки = "";
	Для Каждого СтрокаТЧ Из НастройкиОтборов Цикл
		Если СтрокаТЧ.Использование Тогда
			ПредставлениеСсылки = ПредставлениеСсылки + ?(ПустаяСтрока(ПредставлениеСсылки), "", ", ") + СтрокаТЧ.Представление + " " + Строка(СтрокаТЧ.ВидСравнения) + " " + Строка(СтрокаТЧ.ПравоеЗначение);
		КонецЕсли;
	КонецЦикла;
	Если ПустаяСтрока(ПредставлениеСсылки) Тогда
		ПредставлениеСсылки = НСтр("ru='Отбор не установлен'");
	Иначе	
		ПредставлениеСсылки = НСтр("ru='Соответствующие отбору:'") + ПредставлениеСсылки + ".";
	КонецЕсли;
	
	Возврат ПредставлениеСсылки;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПрефиксИмениПоляФлаг()
	Возврат "СлужебныйФлаг_";
КонецФункции

&НаСервереБезКонтекста
Функция ПрефиксИмениПоляПолеКонтактнойИнформации()
	Возврат "СлужебноеПолеКонтактнойИнформации_";
КонецФункции

&НаСервереБезКонтекста
Функция ПрефиксИмениПоляШаблон()
	Возврат "СлужебноеПолеШаблон_";
КонецФункции

&НаСервереБезКонтекста
Функция ПрефиксИмениГруппы()
	Возврат "СлужебнаяГруппа_";
КонецФункции

&НаСервереБезКонтекста
Функция ПрефиксИмениПоляГруппаДекоратор()
	Возврат "СлужебнаяГруппаДекоратор_";
КонецФункции

&НаСервереБезКонтекста
Функция ПрошлоеСостояниеПодготовлено(Ссылка)
	
	Результат = НЕ Ссылка.Пустая();
	Если Результат Тогда
		Результат = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Подготовлена");
	КонецЕсли;
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура НастроитьСпискиВыбораПолейПериода(ВидУведомления)
	
	КатегорияСобытия = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидУведомления, "КатегорияСобытия");
	Элементы.ВариантПериода.СписокВыбора.Очистить();
	Элементы.СпособОпределенияМоментаУведомления.СписокВыбора.Очистить();
	
	Если КатегорияСобытия = ПредопределенноеЗначение("Перечисление.КатегорииВидовУведомлений.ВыборкаДанных") Тогда
		Элементы.ВариантПериода.СписокВыбора.Добавить(-14, НСтр("ru='За 2 недели до события'"));
		Элементы.ВариантПериода.СписокВыбора.Добавить(-7, НСтр("ru='За 1 неделю до события'"));
		Элементы.ВариантПериода.СписокВыбора.Добавить(-1, НСтр("ru='За 1 день до события'"));
		Элементы.ВариантПериода.СписокВыбора.Добавить(-0.3, НСтр("ru='За 3 часа до события'"));
		Элементы.ВариантПериода.СписокВыбора.Добавить(-0.1, НСтр("ru='За 1 час до события'"));
		
		Элементы.СпособОпределенияМоментаУведомления.СписокВыбора.Добавить(
			ПредопределенноеЗначение("Перечисление.СпособыОпределенияМоментаУведомления.ДоСобытия"), НСтр("ru='До наступления события'"));
	КонецЕсли;

	Элементы.ВариантПериода.СписокВыбора.Добавить(0.1, НСтр("ru='Сразу после события'"));
	Элементы.ВариантПериода.СписокВыбора.Добавить(1, НСтр("ru='На следующий день после события'"));
	Элементы.СпособОпределенияМоментаУведомления.СписокВыбора.Добавить(
		ПредопределенноеЗначение("Перечисление.СпособыОпределенияМоментаУведомления.ПослеСобытия"), НСтр("ru='После события'"));
	Элементы.ВариантПериода.СписокВыбора.Добавить(0, НСтр("ru='Своя настройка...'"));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтветственного()
	Объект.Ответственный = Пользователи.ТекущийПользователь();
КонецПроцедуры

#КонецОбласти
