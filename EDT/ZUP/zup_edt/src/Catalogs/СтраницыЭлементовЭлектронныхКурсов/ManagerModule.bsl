#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

Функция ДобавитьЭлементВПодборку(ПодборкаЭлементов, Элемент, ГруппаЭлементовПодборки, ВесВопроса = 1) Экспорт
	
	ЭлементПодборкиОбъект = Справочники.СтраницыЭлементовЭлектронныхКурсов.СоздатьЭлемент();
		
	ЭлементПодборкиОбъект.Наименование      = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Элемент, "Наименование");
	ЭлементПодборкиОбъект.Владелец          = ПодборкаЭлементов;
	ЭлементПодборкиОбъект.СсылкаНаЭлементКурса = Элемент; 
	
	Если ТипЗнч(Элемент) = Тип("СправочникСсылка.ТестовыеВопросы") Тогда
		ЭлементПодборкиОбъект.ВесВопроса = ВесВопроса;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ГруппаЭлементовПодборки) Тогда
		
		ДанныеГруппыЭлементаПодборки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ГруппаЭлементовПодборки, "ЭтоГруппа, Родитель");
		
		Если ДанныеГруппыЭлементаПодборки.ЭтоГруппа Тогда
			ЭлементПодборкиОбъект.Родитель = ГруппаЭлементовПодборки;
		Иначе
			ЭлементПодборкиОбъект.Родитель = ДанныеГруппыЭлементаПодборки.Родитель;
		КонецЕсли;
		
	КонецЕсли;
	
	РазработкаЭлектронныхКурсовСлужебный.УстановитьПредпочитаемогоПоставщика(ЭлементПодборкиОбъект);
	
	ЭлементПодборкиОбъект.Записать();
	
	Возврат ЭлементПодборкиОбъект.Ссылка;	
	
КонецФункции

Функция ЭлементЕдинственнойСтраницы(ПодборкаЭлементов, ВключатьЗависимые = Ложь) Экспорт
	
	ЕдинственныйЭлемент = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтраницыЭлементов.СсылкаНаЭлементКурса КАК СсылкаНаЭлементКурса
		|ИЗ
		|	Справочник.СтраницыЭлементовЭлектронныхКурсов КАК СтраницыЭлементов
		|ГДЕ
		|	СтраницыЭлементов.ПометкаУдаления = ЛОЖЬ
		|	И СтраницыЭлементов.Владелец = &ПодборкаЭлементов
		|	И СтраницыЭлементов.ЭтоГруппа = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("ПодборкаЭлементов", ПодборкаЭлементов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда			
			ВыборкаДетальныеЗаписи.Следующий();	
			ЕдинственныйЭлемент = ВыборкаДетальныеЗаписи.СсылкаНаЭлементКурса;
		КонецЕсли;

	КонецЕсли;
	
	Если НЕ ВключатьЗависимые Тогда
		Возврат ЕдинственныйЭлемент;
	КонецЕсли;	
	
	ИмяТаблицы = ОбщегоНазначения.ИмяТаблицыПоСсылке(ПодборкаЭлементов);	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СкрытыеРесурсы.Ресурс КАК СсылкаНаЭлементКурса
		|ИЗ
		|	&СкрытыеРесурсы КАК СкрытыеРесурсы
		|ГДЕ
		|	СкрытыеРесурсы.Ссылка = &ПодборкаЭлементов";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СкрытыеРесурсы", ИмяТаблицы + ".СкрытыеРесурсы");
	
	Запрос.УстановитьПараметр("ПодборкаЭлементов", ПодборкаЭлементов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Количество() = 1 И ЕдинственныйЭлемент = Неопределено Тогда			
			ВыборкаДетальныеЗаписи.Следующий();	
			ЕдинственныйЭлемент = ВыборкаДетальныеЗаписи.СсылкаНаЭлементКурса;
		КонецЕсли;

	КонецЕсли;
	
	Возврат ЕдинственныйЭлемент;
		
КонецФункции

Процедура Перезаписать(ЭлементПодборки, ВесВопроса = Неопределено) Экспорт

    БлокировкаДанных = Новый БлокировкаДанных;
    ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("Справочник.СтраницыЭлементовЭлектронныхКурсов");
    ЭлементБлокировкиДанных.УстановитьЗначение("Ссылка", ЭлементПодборки);
    ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;
    БлокировкаДанных.Заблокировать();
	
	ОбъектЭлементПодборки =  ЭлементПодборки.ПолучитьОбъект();
	
	Если ВесВопроса <> Неопределено Тогда
		ОбъектЭлементПодборки.ВесВопроса = ВесВопроса;
	КонецЕсли;
	
	// Наименование будет обновлено в обработчике ПередЗаписью модуля объекта
	ОбъектЭлементПодборки.Записать();
			
КонецПроцедуры

// Возвращает группу, в которой хранятся элементы подборки.
// В случае ее отсутствия, создает новую.
//
Функция ГруппаПодчиненныхЭлементов(Знач Подборка, Знач ТипПодчиненногоЭлемента, Знач ЭлектронныйРесурс = Неопределено) Экспорт
	Возврат Неопределено
КонецФункции

// Позволяет получить таблицу групп элементов верхнего уровня подборки.
// Группа элементов - это ссылка на элемент справочника ЭлементыПодборкиСУЗ, не имеющая родителя.
//
// Параметры
//  Нет.
//
// Возвращаемое значение:
//   Таблица - содержит данные о группах подборки.
//
Функция СтраницыВладельца(Подборка, УчитыватьПредыдущиеПопытки = Ложь, МаксимальноеКоличествоЭлементов = 0, КонтекстВыполнения = Неопределено) Экспорт
	
	ЗапросГруппыПодборки = Новый Запрос("ВЫБРАТЬ
	                                    |	СтраницыЭлементовЭлектронныхКурсов.Ссылка,
	                                    |	СтраницыЭлементовЭлектронныхКурсов.ЭтоГруппа,
	                                    |	СтраницыЭлементовЭлектронныхКурсов.СсылкаНаЭлементКурса,
	                                    |	СтраницыЭлементовЭлектронныхКурсов.Наименование
	                                    |ИЗ
	                                    |	Справочник.СтраницыЭлементовЭлектронныхКурсов КАК СтраницыЭлементовЭлектронныхКурсов
	                                    |ГДЕ
	                                    |	СтраницыЭлементовЭлектронныхКурсов.Владелец = &Владелец
	                                    |	И СтраницыЭлементовЭлектронныхКурсов.Родитель = &Родитель
	                                    |	И СтраницыЭлементовЭлектронныхКурсов.ПометкаУдаления = &ПометкаУдаления
	                                    |
	                                    |УПОРЯДОЧИТЬ ПО
	                                    |	СтраницыЭлементовЭлектронныхКурсов.Код");
		
	
	ЗапросГруппыПодборки.УстановитьПараметр("Владелец", Подборка); 
	ЗапросГруппыПодборки.УстановитьПараметр("Родитель", Справочники.СтраницыЭлементовЭлектронныхКурсов.ПустаяСсылка()); 
	ЗапросГруппыПодборки.УстановитьПараметр("ПометкаУдаления", Ложь); 
	
	ГруппыПодборки = ЗапросГруппыПодборки.Выполнить().Выгрузить();
	
	Если УчитыватьПредыдущиеПопытки
		И МаксимальноеКоличествоЭлементов <> 0
		И МаксимальноеКоличествоЭлементов < ГруппыПодборки.Количество() Тогда
		
		Возврат СтраницыСУчетомРезультатов(Подборка, КонтекстВыполнения.Учащийся, ГруппыПодборки, МаксимальноеКоличествоЭлементов);
		
	Иначе
	
		Возврат ГруппыПодборки;	
		
	КонецЕсли;
	
	
КонецФункции

// Позволяет получить все элементы группы и все элементы вложенных подгрупп.
// Ссылки на сами группы не выводит, только элементы.
//
// Параметры
//  Группа - Ссылка на элемент справочника ЭлементыПодборкиСУЗ.
//
// Возвращаемое значение:
//   Таблица - содержит ссылки на найденные элементы заданной группы.
//
Функция ВсеЭлементы(Подборка, Группа = Неопределено, ТипЭлемента = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтраницыЭлементовЭлектронныхКурсов.Ссылка,
	               |	СтраницыЭлементовЭлектронныхКурсов.СсылкаНаЭлементКурса,
	               |	СтраницыЭлементовЭлектронныхКурсов.ВесВопроса,
	               |	СтраницыЭлементовЭлектронныхКурсов.Родитель
	               |ИЗ
	               |	Справочник.СтраницыЭлементовЭлектронныхКурсов КАК СтраницыЭлементовЭлектронныхКурсов
	               |ГДЕ
	               |	СтраницыЭлементовЭлектронныхКурсов.Владелец = &Подборка
	               |	И СтраницыЭлементовЭлектронныхКурсов.ПометкаУдаления = ЛОЖЬ
	               |	И СтраницыЭлементовЭлектронныхКурсов.ЭтоГруппа = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Подборка", Подборка);
	
	Если ЗначениеЗаполнено(Группа) Тогда
		
		Запрос.Текст = Запрос.Текст + "
		| И	СтраницыЭлементовЭлектронныхКурсов.Родитель В ИЕРАРХИИ(&Группа)";
		
		Запрос.УстановитьПараметр("Группа", Группа);
		
	КонецЕсли;

	Если ЗначениеЗаполнено(ТипЭлемента) Тогда
		
		Запрос.Текст = Запрос.Текст + "
		| И	ТИПЗНАЧЕНИЯ(СтраницыЭлементовЭлектронныхКурсов.СсылкаНаЭлементКурса) = &ТипЭлемента";
		
		Запрос.УстановитьПараметр("ТипЭлемента", ТипЭлемента);
		
	КонецЕсли;
		
	Результат = Запрос.Выполнить();

	Возврат Результат.Выгрузить();
	
КонецФункции

Функция СтраницыСУчетомРезультатов(Подборка, Пользователь, ГруппыПодборки, МаксимальноеКоличествоЭлементов)

	// Для каждой группы подборки находим соответствующие ей вопросы
	
	ГруппыПодборки.Колонки.Добавить("ВопросыГруппы");
	
	ЕстьКолонкаЭтоГруппа = ?(ГруппыПодборки.Колонки.Найти("ЭтоГруппа") = Неопределено, Ложь, Истина); 
		
	Для каждого СтрокаТП Из ГруппыПодборки Цикл
	
		Если ЕстьКолонкаЭтоГруппа И СтрокаТП.ЭтоГруппа Тогда
			
			ТаблицаВопросовГруппы = ВсеЭлементы(Подборка, СтрокаТП.Ссылка, Тип("СправочникСсылка.ТестовыеВопросы"));
			
			СтрокаТП.ВопросыГруппы = ТаблицаВопросовГруппы.ВыгрузитьКолонку("СсылкаНаЭлементКурса");
			
		Иначе
			
			ВопросыГруппы = Новый Массив();
			
			Если ТипЗнч(СтрокаТП.СсылкаНаЭлементКурса) = Тип("СправочникСсылка.ТестовыеВопросы") Тогда
				ВопросыГруппы.Добавить(СтрокаТП.СсылкаНаЭлементКурса);
			КонецЕсли;
			
			СтрокаТП.ВопросыГруппы = ВопросыГруппы;
			
		КонецЕсли;
		
	
	КонецЦикла;
	
	// Получаем массив всех вопросов из всех групп подборок
	
	МассивВопросов = Новый Массив();
	
	Для каждого СтрокаТП Из ГруппыПодборки Цикл
		
		  Для каждого Вопрос Из СтрокаТП.ВопросыГруппы Цикл
		  
			  Если МассивВопросов.Найти(Вопрос) = Неопределено Тогда
				  МассивВопросов.Добавить(Вопрос);
			  КонецЕсли;
		  
		  КонецЦикла;
		
	КонецЦикла;
	
	// Получаем результаты ответов на все вопросы и формируем массив
	// Вопросов, которые можно включить в тест с учетом прошлых результатов, т.е.
	// На которые пользователь еще не отвечал, или отвечал неверно.
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Ответы.Вопрос,
		|	Ответы.Результат
		|ИЗ
		|	РегистрСведений.ОтветыНаТестовыеВопросы КАК Ответы
		|ГДЕ
		|	Ответы.Вопрос В(&МассивВопросов)
		|	И Ответы.Пользователь = &Пользователь";
		
	
	Запрос.УстановитьПараметр("МассивВопросов", МассивВопросов);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	МассивПодходящихВопросов = Новый Массив();
	
	Для каждого Вопрос Из МассивВопросов Цикл
	
		ВыборкаДетальныеЗаписи.Сбросить();
		
		Если НЕ ВыборкаДетальныеЗаписи.НайтиСледующий(Новый Структура("Результат, Вопрос", 100, Вопрос)) Тогда
			МассивПодходящихВопросов.Добавить(Вопрос); // Подходит, так как либо его нет в выборке, либо результат <> 100.
		КонецЕсли;
		
	КонецЦикла;
	
	// Формируем специальную таблицу групп подборок, в которые помещаем только подходящие группы
	// т.е. те, в которых есть хоть один подходящий вопрос.
	
	ГруппыПодборкиСУчетомРезультатов = Новый ТаблицаЗначений();
	
	Для каждого Колонка Из ГруппыПодборки.Колонки Цикл
		ГруппыПодборкиСУчетомРезультатов.Колонки.Добавить(Колонка.Имя);
	КонецЦикла;
	
	Для каждого СтрокаТП Из ГруппыПодборки Цикл
		
		ГруппуМожноВключитьВТест = Ложь;	
		
		Для каждого Вопрос Из СтрокаТП.ВопросыГруппы Цикл
			
			Если МассивПодходящихВопросов.Найти(Вопрос) <> Неопределено Тогда 
				// Можно включить в тест, так как в группе есть подходящий вопрос.
				ГруппуМожноВключитьВТест = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ГруппуМожноВключитьВТест Тогда
			
			НоваяСтрокаСУР = ГруппыПодборкиСУчетомРезультатов.Добавить(); 
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСУР, СтрокаТП); 				  
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Если не хватает еще групп подборки
	
	Если ГруппыПодборкиСУчетомРезультатов.Количество() < МаксимальноеКоличествоЭлементов Тогда 
		
		МассивОставшихсяСтрок = Новый Массив(); // Массив, где хранятся ссылки на строки таблицы ГруппыПодборки,
												// Которые еще не попали в выборку.
												
		Для каждого Строка Из ГруппыПодборки Цикл
			
			Если ЕстьКолонкаЭтоГруппа Тогда // Простой тест
				
				Если ГруппыПодборкиСУчетомРезультатов.Найти(Строка.Ссылка, "Ссылка") = Неопределено Тогда
					МассивОставшихсяСтрок.Добавить(Строка);
				КонецЕсли;
				
			Иначе // Выбор из рубрикатора
				
				Если ГруппыПодборкиСУчетомРезультатов.Найти(Строка.СсылкаНаЭлементКурса, "СсылкаНаЭлементКурса") = Неопределено Тогда
					МассивОставшихсяСтрок.Добавить(Строка);
				КонецЕсли;
				
			КонецЕсли;
		
		КонецЦикла;
		
		МассивОставшихсяСтрок = ЭлектронноеОбучениеСлужебный.ПеремешатьМассив(МассивОставшихсяСтрок);
		
		Если МассивОставшихсяСтрок.Количество() > 0 Тогда
			
			Счетчик = 0;
			
			Пока ГруппыПодборкиСУчетомРезультатов.Количество() < МаксимальноеКоличествоЭлементов И Счетчик < МассивОставшихсяСтрок.Количество() - 1  Цикл
				
				НоваяСтрока = ГруппыПодборкиСУчетомРезультатов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, МассивОставшихсяСтрок[Счетчик]);
				
				Счетчик = Счетчик + 1;
			  
			КонецЦикла;
						
		КонецЕсли;
			
	КонецЕсли;
	
	Возврат ГруппыПодборкиСУчетомРезультатов;
	
КонецФункции

#КонецОбласти

#КонецЕсли

