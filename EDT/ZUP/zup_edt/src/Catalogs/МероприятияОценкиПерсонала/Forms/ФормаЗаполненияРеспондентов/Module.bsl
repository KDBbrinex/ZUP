
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Участники.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресСотрудниковВХранилище));
	
	ВключатьРольКоллега = Истина;
	ВключатьРольРуководитель = Истина;
	ВключатьРольПодчиненный = Истина;
	ВключатьРольСамооценка = Истина;
	
	УстановитьСвойстваПоляВводаПоИспользованию(ЭтаФорма, "КоличествоРеспондентовСотрудника", ОграничиватьКоличествоРеспондентовСотрудника);
	УстановитьСвойстваПоляВводаПоИспользованию(ЭтаФорма, "КоличествоСотрудниковРеспондента", ОграничиватьКоличествоСотрудниковРеспондента);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОграничиватьКоличествоРеспондентовСотрудникаПриИзменении(Элемент)
	УстановитьСвойстваПоляВводаПоИспользованию(ЭтаФорма, "КоличествоРеспондентовСотрудника", ОграничиватьКоличествоРеспондентовСотрудника);
КонецПроцедуры

&НаКлиенте
Процедура ОграничиватьКоличествоСотрудниковРеспондентаПриИзменении(Элемент)
	УстановитьСвойстваПоляВводаПоИспользованию(ЭтаФорма, "КоличествоСотрудниковРеспондента", ОграничиватьКоличествоСотрудниковРеспондента);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
	
&НаКлиенте
Процедура СформироватьТаблицуРеспондентовЗакрытьФорму(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;	
	
	АдресРеспондентовВХранилище = ТаблицаРеспондентовИндивидуальныйНабор();
	
	Закрыть(АдресРеспондентовВХранилище);
	
КонецПроцедуры

#КонецОбласти  

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ТаблицаРеспондентовИндивидуальныйНабор()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Участники", Участники.Выгрузить());
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Участники.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ Участники
		|ИЗ
		|	&Участники КАК Участники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	Сотрудники.Ссылка КАК Сотрудник
		|ПОМЕСТИТЬ ВТВсеСотрудники
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники";
	
	Запрос.Выполнить();
	
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(
		КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТВсеСотрудники"),
		Ложь,
		"ФизическоеЛицо, Подразделение, ДатаУвольнения, ДолжностьПоШтатномуРасписанию, МестоВСтруктуреПредприятия");
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
		|	КадровыеДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		|	КадровыеДанныеСотрудников.Сотрудник КАК Подразделение,
		|	КадровыеДанныеСотрудников.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
		|	КадровыеДанныеСотрудников.МестоВСтруктуреПредприятия КАК МестоВСтруктуреПредприятия
		|ПОМЕСТИТЬ ВТУчастникиСотрудники
		|ИЗ
		|	ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Участники КАК Участники
		|		ПО КадровыеДанныеСотрудников.ФизическоеЛицо = Участники.ФизическоеЛицо";
	
	Запрос.Выполнить();
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.РуководителиПодразделений") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("РуководителиПодразделений");
		// Руководители
		СтруктураПараметров = Модуль.ПараметрыДляСоздатьВТРуководителиСотрудников();
		СтруктураПараметров.ПолучатьКадровыеДанные = Ложь;
		СтруктураПараметров.НаследованиеРуководителей = Истина;
		Модуль.СоздатьВТРуководителиСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТУчастникиСотрудники", СтруктураПараметров);
		// Подчиненные
		СтруктураПараметров = Модуль.ПараметрыДляСоздатьВТПодчиненныеСотрудники();
		СтруктураПараметров.ПолучатьКадровыеДанные = Ложь;
		СтруктураПараметров.НаследованиеРуководителей = Ложь;
		Модуль.СоздатьВТПодчиненныеСотрудники(Запрос.МенеджерВременныхТаблиц, "ВТУчастникиСотрудники", СтруктураПараметров);
	КонецЕсли;
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЕСТЬNULL(Участники.ФизическоеЛицо, Сотрудники.ФизическоеЛицо) КАК ФизическоеЛицо,
		|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.Подразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК Подразделение,
		|	ВЫБОР
		|		КОГДА УчастникиСотрудники.ФизическоеЛицо ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЯвляетсяОцениваемым
		|ПОМЕСТИТЬ Сотрудники
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|		ПО (ТекущиеКадровыеДанныеСотрудников.Сотрудник = Сотрудники.Ссылка)
		|			И (ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = Сотрудники.ФизическоеЛицо)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчастникиСотрудники КАК УчастникиСотрудники
		|		ПО (ТекущиеКадровыеДанныеСотрудников.Сотрудник = УчастникиСотрудники.Сотрудник)
		|			И (ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = УчастникиСотрудники.ФизическоеЛицо)
		|		ПОЛНОЕ СОЕДИНЕНИЕ Участники КАК Участники
		|		ПО Сотрудники.ФизическоеЛицо = Участники.ФизическоеЛицо
		|ГДЕ
		|	ЕСТЬNULL(ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	1 КАК Приоритет,
		|	ВЫРАЗИТЬ(Руководители.Сотрудник КАК Справочник.Сотрудники).ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВЫРАЗИТЬ(Руководители.Руководитель КАК Справочник.Сотрудники).ФизическоеЛицо КАК Респондент,
		|	&РольРуководитель КАК РольРеспондента
		|ПОМЕСТИТЬ Респонденты
		|ИЗ
		|	ВТРуководителиСотрудников КАК Руководители
		|ГДЕ
		|	Руководители.Руководитель <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	2,
		|	Сотрудники.ФизическоеЛицо,
		|	Самооценка.ФизическоеЛицо,
		|	&РольСамооценка
		|ИЗ
		|	Сотрудники КАК Сотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Сотрудники КАК Самооценка
		|		ПО Сотрудники.ФизическоеЛицо = Самооценка.ФизическоеЛицо
		|			И (Сотрудники.ЯвляетсяОцениваемым)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	3,
		|	ВЫРАЗИТЬ(Подчиненные.Сотрудник КАК Справочник.Сотрудники).ФизическоеЛицо,
		|	ВЫРАЗИТЬ(Подчиненные.Подчиненный КАК Справочник.Сотрудники).ФизическоеЛицо,
		|	&РольПодчиненный
		|ИЗ
		|	ВТПодчиненныеСотрудники КАК Подчиненные
		|ГДЕ
		|	Подчиненные.Подчиненный <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	4,
		|	Сотрудники.ФизическоеЛицо,
		|	Коллега.ФизическоеЛицо,
		|	&РольКоллега
		|ИЗ
		|	Сотрудники КАК Сотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Сотрудники КАК Коллега
		|		ПО (Сотрудники.ЯвляетсяОцениваемым)
		|			И Сотрудники.Подразделение = Коллега.Подразделение
		|			И (Сотрудники.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|			И Сотрудники.ФизическоеЛицо <> Коллега.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Респонденты.Респондент КАК Респондент,
		|	Респонденты.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МИНИМУМ(Респонденты.Приоритет) КАК Приоритет
		|ПОМЕСТИТЬ ВТУказателиРеспондентов
		|ИЗ
		|	Респонденты КАК Респонденты
		|
		|СГРУППИРОВАТЬ ПО
		|	Респонденты.Респондент,
		|	Респонденты.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Респонденты.Респондент КАК Респондент,
		|	Респонденты.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Респонденты.РольРеспондента КАК РольРеспондента,
		|	Респонденты.Приоритет КАК Приоритет
		|ПОМЕСТИТЬ ВТСгруппированныеРеспонденты
		|ИЗ
		|	Респонденты КАК Респонденты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУказателиРеспондентов КАК УказателиРеспондентов
		|		ПО Респонденты.Респондент = УказателиРеспондентов.Респондент
		|			И Респонденты.ФизическоеЛицо = УказателиРеспондентов.ФизическоеЛицо
		|			И Респонденты.Приоритет = УказателиРеспондентов.Приоритет
		|ГДЕ
		|	(&ВключатьРольРуководитель
		|				И Респонденты.РольРеспондента = &РольРуководитель
		|			ИЛИ &ВключатьРольСамооценка
		|				И Респонденты.РольРеспондента = &РольСамооценка
		|			ИЛИ &ВключатьРольПодчиненный
		|				И Респонденты.РольРеспондента = &РольПодчиненный
		|			ИЛИ &ВключатьРольКоллега
		|				И Респонденты.РольРеспондента = &РольКоллега)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Респонденты.Респондент КАК Респондент,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Респонденты.ФизическоеЛицо) КАК КоличествоОцениваемых
		|ПОМЕСТИТЬ СтатистикаРеспондентов
		|ИЗ
		|	ВТСгруппированныеРеспонденты КАК Респонденты
		|
		|СГРУППИРОВАТЬ ПО
		|	Респонденты.Респондент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Респонденты.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Респонденты.Респондент КАК Респондент,
		|	Респонденты.РольРеспондента КАК РольРеспондента,
		|	СтатистикаРеспондентов.КоличествоОцениваемых КАК КоличествоОцениваемых,
		|	Респонденты.Приоритет КАК Приоритет
		|ИЗ
		|	ВТСгруппированныеРеспонденты КАК Респонденты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтатистикаРеспондентов КАК СтатистикаРеспондентов
		|		ПО Респонденты.Респондент = СтатистикаРеспондентов.Респондент
		|
		|УПОРЯДОЧИТЬ ПО
		|	Респонденты.ФизическоеЛицо,
		|	Респонденты.Приоритет,
		|	СтатистикаРеспондентов.КоличествоОцениваемых
		|ИТОГИ ПО
		|	ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("ВключатьРольКоллега", ВключатьРольКоллега);
	Запрос.УстановитьПараметр("ВключатьРольСамооценка",	ВключатьРольСамооценка);
	Запрос.УстановитьПараметр("ВключатьРольРуководитель", ВключатьРольРуководитель);
	Запрос.УстановитьПараметр("ВключатьРольПодчиненный", ВключатьРольПодчиненный);
	
	Запрос.УстановитьПараметр("РольСамооценка",
		ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.РолиРеспондентаОценкиПерсонала.Самооценка"));
	Запрос.УстановитьПараметр("РольКоллега",
		ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.РолиРеспондентаОценкиПерсонала.Коллега"));
	Запрос.УстановитьПараметр("РольРуководитель",
		ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.РолиРеспондентаОценкиПерсонала.Руководитель"));
	Запрос.УстановитьПараметр("РольПодчиненный",
		ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.РолиРеспондентаОценкиПерсонала.Подчиненный"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПоФизлицам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаРеспондентов = Новый ТаблицаЗначений;
	ТаблицаРеспондентов.Колонки.Добавить("ФизическоеЛицо",		Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаРеспондентов.Колонки.Добавить("Респондент", 			Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаРеспондентов.Колонки.Добавить("РольРеспондента", 	Новый ОписаниеТипов("СправочникСсылка.РолиРеспондентаОценкиПерсонала"));
	
	КоличествоСотрудниковРеспондентов = Новый Соответствие;
	
	Пока ВыборкаПоФизлицам.Следующий() Цикл
		КоличествоРеспондентов = 0;
		ВыборкаРеспондентов = ВыборкаПоФизлицам.Выбрать();
		Пока ВыборкаРеспондентов.Следующий() Цикл
			
			КоличествоСотрудников = КоличествоСотрудниковРеспондентов[ВыборкаРеспондентов.Респондент];
			Если КоличествоСотрудников = Неопределено Тогда
				КоличествоСотрудников = 0;
			КонецЕсли;
			
			Если ОграничиватьКоличествоРеспондентовСотрудника И КоличествоРеспондентов = КоличествоРеспондентовСотрудника Тогда
				// переходим к следующему сотруднику
				Прервать;
			КонецЕсли;
			
			Если ОграничиватьКоличествоСотрудниковРеспондента И КоличествоСотрудников = КоличествоСотрудниковРеспондента Тогда
				// переходим к следующему респонденту
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ТаблицаРеспондентов.Добавить(), ВыборкаРеспондентов);
				
			// считаем респондентов сотрудника
			КоличествоРеспондентов = КоличествоРеспондентов + 1;
		
			// считаем сотрудников респондента
			КоличествоСотрудников = КоличествоСотрудников + 1;
			КоличествоСотрудниковРеспондентов.Вставить(ВыборкаРеспондентов.Респондент, КоличествоСотрудников);
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаРеспондентов,Новый УникальныйИдентификатор);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСвойстваПоляВводаПоИспользованию(Форма, ИмяПоля, Использование)
	
	Элементы = Форма.Элементы;
	
	Элементы[ИмяПоля].Доступность = Использование;
	Элементы[ИмяПоля].АвтоОтметкаНезаполненного = Использование;
	Элементы[ИмяПоля].ОтметкаНезаполненного = Использование;
	
КонецПроцедуры

#КонецОбласти  
