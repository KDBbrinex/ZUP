#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Процедура выполняет первоначальное заполнение
//
Процедура НачальноеЗаполнение() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Справочник.ПричиныОтклоненияКандидатов КАК ПричиныОтклоненияКандидатов");
	
	Если Не Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Причины = Новый Массив;
	Причины.Добавить(НСтр("ru = 'Несоответствие знаний и/или навыков требованиям вакансии'"));
	Причины.Добавить(НСтр("ru = 'Недостаточно опыта'"));
	Причины.Добавить(НСтр("ru = 'Низкая оценка по результатам тестирования'"));
	Причины.Добавить(НСтр("ru = 'Уступает другому кандидату'"));
	Причины.Добавить(НСтр("ru = 'Задержка на этапе'"));
	Причины.Добавить(НаименованиеПричиныСамоотвода());
	
	Для Каждого Причина Из Причины Цикл
		ДобавитьПричинуОтклоненияКандидатов(Причина, Ложь);
	КонецЦикла;
	
КонецПроцедуры

// Создает новую причину отклонения кандидатов и возвращает ссылку на нее.
//
// Параметры:
//  Наименование - Строка - наименование причины.
//  ПроверятьНаличие - Булево - если Истина, проверять по наименованию наличие такой причины в справочнике.
// 
// Возвращаемое значение:
//  Наименование - СправочникСсылка.ПричиныОтклоненияКандидатов - новая Наименование отклонения кандидатов.
//
Функция ДобавитьПричинуОтклоненияКандидатов(Наименование, ПроверятьНаличие = Истина) Экспорт
	
	Если ПроверятьНаличие 
		И Справочники.ПричиныОтклоненияКандидатов.НайтиПоНаименованию(Наименование) <> Справочники.ПричиныОтклоненияКандидатов.ПустаяСсылка() Тогда
		Возврат Справочники.ПричиныОтклоненияКандидатов.НайтиПоНаименованию(Наименование);
	КонецЕсли;
	
	ПричинаОтклонения = Справочники.ПричиныОтклоненияКандидатов.СоздатьЭлемент();
	ПричинаОтклонения.Наименование = Наименование;
	НастройкаПорядкаЭлементов.УстановитьЗначениеРеквизитаУпорядочивания(ПричинаОтклонения);
	ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ПричинаОтклонения);
	
	Возврат ПричинаОтклонения;
	
КонецФункции

Функция НаименованиеПричиныСамоотвода() Экспорт
	Возврат НСтр("ru = 'Самоотвод кандидата'");
КонецФункции

Процедура УточнитьНастройкуПорядкаПричинОтклонения(ПараметрыОбновления = Неопределено) Экспорт
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Причины.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПричиныОтклоненияКандидатов КАК Причины
		|ГДЕ
		|	Причины.РеквизитДопУпорядочивания = 0";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПричинаОбъект = Выборка.Ссылка.ПолучитьОбъект();
		НастройкаПорядкаЭлементов.УстановитьЗначениеРеквизитаУпорядочивания(ПричинаОбъект);
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ПричинаОбъект);
	КонецЦикла;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли