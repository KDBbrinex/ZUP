#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора = Истина;
	КонецЕсли;

	Если Параметры.МножественныйВыбор = Истина Тогда
		Элементы.Список.МножественныйВыбор = Истина;
		Элементы.Список.РежимВыделения = РежимВыделенияТаблицы.Множественный;
		ЗакрыватьПриВыборе = Ложь;
	Иначе
		Элементы.Список.РежимВыделения = РежимВыделенияТаблицы.Одиночный;
	КонецЕсли;
	
	Если Параметры.Свойство("АдресПодобранных") Тогда
		Подобранные.ЗагрузитьЗначения(ПолучитьИзВременногоХранилища(Параметры.АдресПодобранных));
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.КоманднаяПанельФормы;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Список");
	
	СкрытьПоказатьНеИспользуемыеЭтапы(Список, ПоказыватьНеиспользуемыеЭтапы);
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Элементы.Список.РежимВыбора Или Не Элементы.Список.МножественныйВыбор Тогда
		Возврат;
	КонецЕсли;
	
	Если ВсеВыбранные.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	НачатьВопросОВыбореПодобранных();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказыватьНеиспользуемыеЭтапыПриИзменении(Элемент)
	СкрытьПоказатьНеИспользуемыеЭтапы(Список, ПоказыватьНеиспользуемыеЭтапы);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Если Не Элементы.Список.РежимВыбора Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Элементы.Список.МножественныйВыбор Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Если Значение.Количество() > 1 Или ВсеВыбранные.Количество() = 0 Тогда
		ОбновитьПодобранные(Значение);
	КонецЕсли;

	ОповеститьОВыборе(ВсеВыбранные.ВыгрузитьЗначения());
	ВсеВыбранные.Очистить();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Не Элементы.Список.РежимВыбора Тогда
		Возврат;
	КонецЕсли;

	Если Не Элементы.Список.МножественныйВыбор Тогда
		Возврат;
	КонецЕсли;

	СтандартнаяОбработка = Ложь;
	ОбновитьПодобранные(ВыбраннаяСтрока);
	
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, Настройки);
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, , СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиентеНаСервереБезКонтекста
Процедура СкрытьПоказатьНеИспользуемыеЭтапы(Список, ПоказыватьНеиспользуемыеЭтапы)
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "ВАрхиве");
	Если Не ПоказыватьНеиспользуемыеЭтапы Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ВАрхиве", Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	НастройкиПодбораПерсонала = РегистрыСведений.НастройкиПодбораПерсонала.ЗначенияНастроек();
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ЭлементОформления.Отбор,
		"Список.СпособПроверкиКандидатовНаЗадержку",
		ПредопределенноеЗначение("Перечисление.СпособыОпределенияЗадержкиКандидатов.КакЗаданоВНастройках"));
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", НастройкиПодбораПерсонала.ДнейДоСообщения);
	ЭлементОформления.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.ДнейДоСообщения.Имя);
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "Список.ПроверятьКандидатовНаЗадержку", Ложь);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", "");
	ЭлементОформления.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.ДнейДоСообщения.Имя);
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ЭлементОформления.Отбор,
		"Список.СпособОтклоненияЗадержавшихсяКандидатов",
		ПредопределенноеЗначение("Перечисление.СпособыОпределенияЗадержкиКандидатов.КакЗаданоВНастройках"));
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", НастройкиПодбораПерсонала.ДнейДоОтклонения);
	ЭлементОформления.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.ДнейДоОтклонения.Имя);
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "Список.ОтклонятьЗадержавшихсяКандидатов", Ложь);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", "");
	ЭлементОформления.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.ДнейДоОтклонения.Имя);
	
	// Выделение подобранных.
	ЭлементОформления = Список.УсловноеОформление.Элементы.Добавить();
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ЭлементОформления.Отбор, "Ссылка", Подобранные.ВыгрузитьЗначения());
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстПодобранногоЗначенияЦвет);
	ЭлементОформления.ИдентификаторПользовательскойНастройки = ИдентификаторПользовательскойНастройкиВыделениеПодобранных();
	ЭлементОформления.Представление = НСтр("ru = 'Выделение подобранных'");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИдентификаторПользовательскойНастройкиВыделениеПодобранных()
	Возврат "ВыделениеПодобранных";
КонецФункции

&НаКлиенте
Процедура ОбновитьПодобранные(Выбранные)
	
	Для Каждого Элемент Из Выбранные Цикл
		Если Не ЕстьВПодобранных(Элемент) Тогда
			Подобранные.Добавить(Элемент);
			ВсеВыбранные.Добавить(Элемент);
		КонецЕсли;
	КонецЦикла;
	
	УточнитьПодобранныеВУсловномОформлении();
	
КонецПроцедуры

&НаСервере
Процедура УточнитьПодобранныеВУсловномОформлении()
	
	Для Каждого ЭлементОформления Из Список.УсловноеОформление.Элементы Цикл
		Если ЭлементОформления.ИдентификаторПользовательскойНастройки = ИдентификаторПользовательскойНастройкиВыделениеПодобранных() Тогда
			ОбщегоНазначенияКлиентСервер.ИзменитьЭлементыОтбора(
				ЭлементОформления.Отбор, "Ссылка", , Подобранные.ВыгрузитьЗначения());
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьВПодобранных(ЭтапСсылка)
	Возврат Подобранные.НайтиПоЗначению(ЭтапСсылка) <> Неопределено;
КонецФункции

&НаКлиенте
Процедура НачатьВопросОВыбореПодобранных()
	
	ПараметрыВопроса = СтандартныеПодсистемыКлиент.ПараметрыВопросаПользователю();
	ПараметрыВопроса.Заголовок = НСтр("ru = 'Подбор этапов работы с кандидатами'");
	ПараметрыВопроса.ПредлагатьБольшеНеЗадаватьЭтотВопрос = Ложь;
	
	СтандартныеПодсистемыКлиент.ПоказатьВопросПользователю(
		Новый ОписаниеОповещения("ЗавершитьВопросОВыбореВыбранных", ЭтотОбъект), 
		НСтр("ru = 'Выбрать подобранные этапы?'"), 
		РежимДиалогаВопрос.ДаНетОтмена,
		ПараметрыВопроса);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВопросОВыбореВыбранных(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = Неопределено Или Ответ.Значение = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если Ответ.Значение = КодВозвратаДиалога.Да Тогда
		ОповеститьОВыборе(ВсеВыбранные.ВыгрузитьЗначения());
	КонецЕсли;
	
	ВсеВыбранные.Очистить();
	Закрыть();
	
КонецПроцедуры

#КонецОбласти
