#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныйПрограммныйИнтерфейс

Функция СтруктураДанныхПланированияЭтапа() Экспорт
	
	СтруктураДанныхЭтапа = Новый Структура("
	| Период, 
	| ПериодОкончание,
	| Помещение,
	| Бронь");
	
	Возврат СтруктураДанныхЭтапа;
	
КонецФункции

Функция ОписаниеПланируемогоЭтапа(Знач Кандидаты, Этап, Вакансия = Неопределено, Помещение = Неопределено, Развернуто = Ложь) Экспорт
	
	Если ТипЗнч(Кандидаты) = Тип("СправочникСсылка.Кандидаты") Тогда
		Кандидаты = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Кандидаты);
	КонецЕсли;
	
	Если Вакансия = Неопределено Тогда
		Вакансия = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Кандидаты[0], "Вакансия");
	КонецЕсли;
	
	КолВоКандидатов = Кандидаты.Количество();
	
	Если КолВоКандидатов > 1 Тогда
		
		Если Развернуто Тогда
			ПредставлениеКандидатов = "с:";
			Для Каждого Кандидат Из Кандидаты Цикл
				ПредставлениеКандидатов = ПредставлениеКандидатов + Символы.ПС + СтрШаблон(НСтр("ru = '%1'"), Кандидат);
			КонецЦикла;
		Иначе
			ПредставлениеКандидатов = СтрШаблон(НСтр("ru = 'с кандидатом %1 и еще %2'"), Кандидаты[0], КолВоКандидатов - 1);
		КонецЕсли;
		
	Иначе
		ПредставлениеКандидатов = СтрШаблон(НСтр("ru = 'с кандидатом %1'"), Кандидаты[0]);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Помещение) Тогда
		ТекстОписания = НСтр("ru = '%1. %2 %3 на вакансию %4'");
		Описание = СтрШаблон(ТекстОписания, Помещение, Этап, ПредставлениеКандидатов, Вакансия);
	Иначе
		ТекстОписания = НСтр("ru = '%1 %2 на вакансию %3'");
		Описание = СтрШаблон(ТекстОписания, Этап, ПредставлениеКандидатов, Вакансия);
	КонецЕсли;
	
	Возврат Описание;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура выполняет первоначальное заполнение
//
Процедура НачальноеЗаполнение() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Справочник.ЭтапыРаботыСКандидатами КАК ЭтапыРаботыСКандидатами");
	
	Если Не Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ЭтапыРаботы = Новый Массив;
	ЭтапыРаботы.Добавить(НСтр("ru = 'Первичный контакт'"));
	ЭтапыРаботы.Добавить(НСтр("ru = 'Собеседование'"));
	ЭтапыРаботы.Добавить(НСтр("ru = 'Тестирование'"));
	ЭтапыРаботы.Добавить(НСтр("ru = 'Рассмотрение руководителем'"));
	ЭтапыРаботы.Добавить(НСтр("ru = 'Собеседование с руководителем'"));
	
	Индекс = 1;
	Для Каждого Этап Из ЭтапыРаботы Цикл
		НовыйЭлемент = Справочники.ЭтапыРаботыСКандидатами.СоздатьЭлемент();
		НовыйЭлемент.Наименование = Этап;
		НовыйЭлемент.РеквизитДопУпорядочивания = Индекс;
		НовыйЭлемент.ОбменДанными.Загрузка = Истина;
		НовыйЭлемент.Записать();
		Индекс = Индекс + 1;
	КонецЦикла;
	
КонецПроцедуры

#Область ОбновлениеИнформационнойБазы

// Процедура выполняет заполнение настроек контроля задержки кандидатов в этапах
//
// Параметры:
//  ПараметрыОбновления  - Структура - описывает текущие параметры обновления
//
Процедура ЗаполнитьНастройкиКонтроляЗадержкиКандидатов(ПараметрыОбновления) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЭтапыРаботыСКандидатами.Ссылка КАК ЭтапРаботы
	|ИЗ
	|	Справочник.ЭтапыРаботыСКандидатами КАК ЭтапыРаботыСКандидатами
	|ГДЕ
	|	ЭтапыРаботыСКандидатами.СпособПроверкиКандидатовНаЗадержку = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияЗадержкиКандидатов.ПустаяСсылка)");
	
	Если Запрос.Выполнить().Пустой() Тогда
		ПараметрыОбновления.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	ПараметрыОбновления.ОбработкаЗавершена = Ложь;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЭтапРаботы = Выборка.ЭтапРаботы.ПолучитьОбъект();
		ЭтапРаботы.ПроверятьКандидатовНаЗадержку = Истина;
		ЭтапРаботы.СпособПроверкиКандидатовНаЗадержку = Перечисления.СпособыОпределенияЗадержкиКандидатов.КакЗаданоВНастройках;
		ЭтапРаботы.ДнейДоСообщения = 30;
		ЭтапРаботы.ОтклонятьЗадержавшихсяКандидатов = Истина;
		ЭтапРаботы.СпособОтклоненияЗадержавшихсяКандидатов = Перечисления.СпособыОпределенияЗадержкиКандидатов.КакЗаданоВНастройках;
		ЭтапРаботы.ДнейДоОтклонения = 60;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ЭтапРаботы);
	КонецЦикла;
	
	ПараметрыОбновления.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли