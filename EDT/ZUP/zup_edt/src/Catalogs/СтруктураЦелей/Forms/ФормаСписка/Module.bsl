
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора = Истина;
	КонецЕсли;
	
	ПрочитатьПараметры();
	ПрочитатьПараметрыОтбора();
	
	УстановитьОтборПоОтветственному();
	
	УстановитьСвойстваЭлементовФормы();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.КоманднаяПанельФормы;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Список");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	УстановитьОтборПоОтветственному();
КонецПроцедуры

&НаКлиенте
Процедура ФильтрПоОтветственномуПриИзменении(Элемент)
	УстановитьОтборПоОтветственному();
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, Настройки);
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, , СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ПрочитатьПараметры()

	ПоПодразделениям = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ПоПодразделениям", Ложь);
	ПоПозициям = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ПоПозициям", Ложь);
	ПоПлану = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ПоПлану", Ложь);
	ПоФакту = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ПоФакту", Ложь);
	
КонецПроцедуры
	
&НаСервере
Процедура ПрочитатьПараметрыОтбора()

	Горизонт = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры.Отбор, "Горизонт");
	
	Ответственный = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры.Отбор, "Ответственный");
	ФильтрПоОтветственному = ЗначениеЗаполнено(Ответственный);
	
	ПериодНазначенияПоказателей = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры.Отбор, "ПериодНазначенияПоказателей");
	Период = ?(ЗначениеЗаполнено(ПериодНазначенияПоказателей), ПериодНазначенияПоказателей, ТекущаяДатаСеанса());
	
	Параметры.Отбор.Удалить("Ответственный");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваЭлементовФормы()

	УстановитьЗаголовокОтветственному();
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ОтветственныйОтборГруппа",
		"Видимость",
		(ПоПлану Или ПоФакту));

КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоОтветственному()

	Если ФильтрПоОтветственному Тогда
		
		КоллекцияОтборов = Неопределено;
		
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
			КоллекцияОтборов, "Горизонт", "=", Горизонт);
		
		Если ПоПлану Тогда
			ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
				КоллекцияОтборов, "ОтветственныйЗаВводПлана", "=", Ответственный);
			ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
				КоллекцияОтборов, "Показатель.ТребуетсяВводПлана", "=", Истина);
		ИначеЕсли ПоФакту Тогда
			ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
				КоллекцияОтборов, "ОтветственныйЗаВводФакта", "=", Ответственный);
		КонецЕсли;
		
		Если ПоПодразделениям Тогда
			МассивПоказателей = КлючевыеПоказателиЭффективности.СписокПоказателейПодразделенийПоОтветственным(Период, КоллекцияОтборов);
		ИначеЕсли ПоПозициям Тогда
			МассивПоказателей = КлючевыеПоказателиЭффективности.СписокПоказателейПозицийПоОтветственным(Период, КоллекцияОтборов);
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"Ссылка",
			МассивПоказателей,
			ВидСравненияКомпоновкиДанных.ВСписке, "",);
	
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "Ссылка");
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокОтветственному()

	Если ПоПлану Тогда
		ТекстЗаголовка = НСтр("ru = 'Ответственный за ввод плана'");
	ИначеЕсли ПоФакту Тогда
		ТекстЗаголовка = НСтр("ru = 'Ответственный за ввод факта'");
	Иначе
		Возврат;
	КонецЕсли;

	Элементы.ФильтрПоОтветственному.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

#КонецОбласти
