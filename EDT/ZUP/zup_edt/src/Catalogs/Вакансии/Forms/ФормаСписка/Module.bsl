#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГлобальныеКомандыФормы;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	НастроитьВидСпискаВакансий();
	УстановитьОтборСпискаПодразделений();
	
	НастроитьСписокВакансий();
	НастроитьСписокКандидатов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыНастройкиДоступаКСайтам" Тогда
		ОбработкаОповещенияИзмененыНастройкиДоступаКСайтам();
	ИначеЕсли ИмяСобытия = "ЗагруженыВакансии" Тогда
		Элементы.Вакансии.Обновить();
	КонецЕсли;
	
	Если ИмяСобытия = "СогласованиеВакансий_Завершено" Тогда
		Элементы.Вакансии.Обновить();
	КонецЕсли;
	
	ОбработатьОповещенияЭтаповРаботыСКандидатами(ИмяСобытия, Параметр, Источник);
	ОбработатьОповещенияИзмененияВакансии(ИмяСобытия, Параметр, Источник);
	ОбработатьОповещенияИзмененияКандидата(ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	ОбработкаНавигационнойСсылкиПозицияМассовогоНабора(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
	ОбработкаНавигационнойСсылкиСостоянияКандидатов(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
	ОбработкаНавигационнойСсылкиСотрудникиПозиции(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если СписокПодобранных.Количество() > 0 Тогда
		ОповеститьОВыборе(СписокПодобранных.ВыгрузитьЗначения());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСтруктураПредприятия

&НаКлиенте
Процедура СтруктураПредприятияПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("УстановитьОтборПоПодразделениюНаКлиенте", 0.1, Истина);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВакансии

&НаКлиенте
Процедура ВакансииПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПодключитьОбработчикОжидания("ПриАктивизацииСтрокиВакансииНаКлиенте", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВакансииВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Если Не Элементы.Вакансии.РежимВыбора Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗакрыватьПриВыборе Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	МассивВыбранных = Элементы.Вакансии.ВыделенныеСтроки;

	КоличествоВыбранных = МассивВыбранных.Количество();
	Если КоличествоВыбранных > 0 Тогда
		ОповеститьОВыборе(МассивВыбранных);
	КонецЕсли;
	
	Если КоличествоВыбранных > 1 Тогда
		Закрыть();
		Возврат;
	КонецЕсли;
	
	Для Каждого ВыбранноеЗначение Из МассивВыбранных Цикл
		Если СписокПодобранных.НайтиПоЗначению(ВыбранноеЗначение) = Неопределено Тогда
			СписокПодобранных.Добавить(ВыбранноеЗначение);
		КонецЕсли; 
	КонецЦикла;
	
	ОбновитьОтображениеПодобранных();
	
КонецПроцедуры

&НаСервере
Процедура ВакансииПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, Настройки);
КонецПроцедуры

&НаСервере
Процедура ВакансииПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, , СтандартнаяОбработка);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВакансииПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Вакансии = Строки.ПолучитьКлючи();
	
	ДанныеВакансий = Справочники.Вакансии.ДанныеВакансий(Вакансии);
	
	ТаблицаИнформационныхСтрок = Справочники.Вакансии.ТаблицаИнформационныхСтрокЗанятостиПоВакансиям();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеВакансий, ТаблицаИнформационныхСтрок);
	
	Справочники.Вакансии.ЗаполнитьИнформационныеСтрокиЗанятостиПоВакансиям(ТаблицаИнформационныхСтрок);
	
	ЗапрашиватьКандидатов = НастройкаСписка(Настройки, НастройкиСписка().ВидимостьКандидатов, Истина);
	Если ЗапрашиватьКандидатов Тогда
		ТолькоКандидатыВРаботе = НастройкаСписка(Настройки, НастройкиСписка().ТолькоКандидатыВРаботе, Истина);
		Справочники.Вакансии.ЗаполнитьСтатистикуСостоянийКандидатов(ТаблицаИнформационныхСтрок, ТолькоКандидатыВРаботе);
		СброситьИзмененныеВакансии(Настройки, НастройкиСписка().ВакансииИзмененныхКандидатов, Вакансии);
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаИнформационныхСтрок Цикл
		СтрокаСписка = Строки.Получить(СтрокаТаблицы.Вакансия);
		СтрокаСписка.Данные.ДополнительныеДанные = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаТаблицы);
		СтрокаСписка.Данные.ДополнительныеДанные.Вставить("ТолькоКандидатыВРаботе", ТолькоКандидатыВРаботе);
	КонецЦикла;
	СброситьИзмененныеВакансии(Настройки, НастройкиСписка().ВакансииИзмененныхКандидатов, Вакансии);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьПоЗаявке(Команда)
	НачатьСозданиеПоЗаявке();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КомандаЗагрузитьССайта(Команда)
	ИнтеграцияРекрутинговыхСайтовКлиент.ЗагрузитьВакансииССайта(Команда.Имя, СоответствиеКомандИСайтов, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ВидСпискаВсеВакансии(Команда)
	
	ВидВсеВакансии = Истина;
	УстановитьВидСпискаВакансий(ЭтаФорма);
	УстановитьОтборПоПодразделению(ЭтаФорма);
	
	ПодключитьОбработчикОжидания("ПриИзмененииСохраняемойНастройки", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидСпискаПоПодразделениям(Команда)
	
	ВидВсеВакансии = Ложь;
	УстановитьВидСпискаВакансий(ЭтаФорма);
	УстановитьОтборПоПодразделению(ЭтаФорма);
	
	ПодключитьОбработчикОжидания("ПриИзмененииСохраняемойНастройки", 0.2, Истина);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Вакансии);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Вакансии, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Вакансии);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ПоказыватьОдобренныхОтклоненныхКандидатов(Команда)
	
	ТолькоКандидатыВРаботе = Элементы.ПоказыватьОдобренныхОтклоненныхКандидатов.Пометка;
	УстановитьСнятьОтборОдобренныхОтклоненныхКандидатов(ЭтаФорма, ТолькоКандидатыВРаботе);
	НачатьЗаполнениеИнформационнойСтрокиКандидатов(ВыбраннаяВакансия);
	
	СохранитьНастройкуСписка(Вакансии.КомпоновщикНастроек.Настройки, "ТолькоКандидатыВРаботе", ТолькоКандидатыВРаботе);
	
	ПодключитьОбработчикОжидания("ПриИзмененииСохраняемойНастройки", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоПрофилюДолжности(Команда)
	СоздатьВакансиюПоПрофилюДолжности(СоответствиеКомандПрофилям[Команда.Имя]);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоВыбранномуПрофилюДолжности(Команда)
	НачатьСозданиеВакансииПоПрофилюДолжности();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьСписокВакансий()
	
	Если Параметры.РежимВыбора Тогда
		Элементы.Вакансии.РежимВыбора = Истина;
		Если Параметры.Свойство("СписокПодобранных") Тогда
			СписокПодобранных.ЗагрузитьЗначения(Параметры.СписокПодобранных);
			ОбновитьОтображениеПодобранных();
		КонецЕсли;
	КонецЕсли;
	
	НастроитьОтборСпискаВакансий();
	
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтаФорма, "Вакансии", , , , "Организация");
	СогласованиеВакансий.СписокСогласованияПриСозданииНаСервере(ЭтаФорма, "Вакансии", "Вакансии");
	
	УстановитьВидимостьОткликовКандидатов();
	
	СоздатьКомандыЗагрузкиССайта();
	
	СоздаватьВакансииТолькоПоЗаявке = ПолучитьФункциональнуюОпцию("ОткрытиеВакансииТребуетСогласования");
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СоздатьПоЗаявке", "Видимость", СоздаватьВакансииТолькоПоЗаявке);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СоздатьПодменю", "Видимость", Не СоздаватьВакансииТолькоПоЗаявке);
	
	УстановитьУсловноеОформлениеСпискаВакансий();
	
	Если Не СоздаватьВакансииТолькоПоЗаявке Тогда
		СформироватьПодменюСозданияПоПрофилямДолжности();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПодменюСозданияПоПрофилямДолжности(ПрофилиДолжности = Неопределено)

	Если ПрофилиДолжности = Неопределено Тогда
		ПрофилиДолжности = ПоследниеИспользованныеПрофилиДолжности(5);
	КонецЕсли;
	
	УдалитьВсеКомандыСозданияПоПрофилямДолжности();
	ДобавитьКомандыСозданияПоПрофилямДолжности(ПрофилиДолжности);
	УстановитьВидимостьПодменюСоздатьПоПрофилямДолжности(ЭтотОбъект, ПрофилиДолжности);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьПодменюСоздатьПоПрофилямДолжности(Форма, ПрофилиДолжности)
	Форма.Элементы.ПрофилиСозданияГруппаКоманд.Видимость = ПрофилиДолжности.Количество() > 0;
КонецПроцедуры

&НаСервере
Процедура УдалитьВсеКомандыСозданияПоПрофилямДолжности()
	
	Если СоответствиеКомандПрофилям = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из СоответствиеКомандПрофилям Цикл
		Элементы.Удалить(Элементы[КлючИЗначение.Ключ]);
		Команды.Удалить(Команды[КлючИЗначение.Ключ]);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКомандыСозданияПоПрофилямДолжности(ПрофилиДолжности)

	СоответствиеКоманд = Новый Соответствие;
	
	Для Каждого Профиль Из ПрофилиДолжности Цикл
		ИмяКоманды = ИмяКомандыПрофиля(Профиль);
		НоваяКоманда = Команды.Добавить(ИмяКоманды);
		НоваяКоманда.Заголовок = Строка(Профиль);
		НоваяКоманда.Действие = "СоздатьПоПрофилюДолжности";
		Кнопка = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Элементы.ПрофилиСозданияГруппаКоманд); 
		Кнопка.ИмяКоманды = НоваяКоманда.Имя;
		Кнопка.Заголовок = Строка(Профиль);
		СоответствиеКоманд.Вставить(ИмяКоманды, Профиль);
	КонецЦикла;

	СоответствиеКомандПрофилям = Новый ФиксированноеСоответствие(СоответствиеКоманд);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИмяКомандыПрофиля(Профиль)
	Возврат "СоздатьПоПрофилюДолжности_" + СтрЗаменить(Строка(Профиль.УникальныйИдентификатор()), "-", "_");
КонецФункции

&НаКлиенте
Процедура НачатьСозданиеВакансииПоПрофилюДолжности()
	
	ОткрытьФорму(
		"Справочник.ПрофилиДолжностей.ФормаВыбора", 
		Новый Структура("РежимВыбора", Истина), 
		ЭтотОбъект, , , , 
		Новый ОписаниеОповещения("ЗавершитьСозданиеВакансииПоПрофилюДолжности", ЭтотОбъект), 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьСозданиеВакансииПоПрофилюДолжности(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьВакансиюПоПрофилюДолжности(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВакансиюПоПрофилюДолжности(Профиль)

	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения");
	ПараметрыФормы.ЗначенияЗаполнения = Новый Структура("ПрофильДолжности", Профиль);
	
	ОткрытьФорму("Справочник.Вакансии.Форма.ФормаЭлемента", ПараметрыФормы, ЭтотОбъект);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоследниеИспользованныеПрофилиДолжности(МаксимумПрофилей)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", Пользователи.АвторизованныйПользователь());
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 0
		|	ПрофильДолжности,
		|	ДатаОткрытия
		|ИЗ
		|	Справочник.Вакансии КАК Вакансии
		|ГДЕ
		|	Ответственный = &Пользователь
		|	И ПрофильДолжности <> ЗНАЧЕНИЕ(Справочник.ПрофилиДолжностей.ПустаяСсылка)
		|УПОРЯДОЧИТЬ ПО
		|	ДатаОткрытия УБЫВ";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 0", "ПЕРВЫЕ " + МаксимумПрофилей);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПрофилиДолжности = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Если ПрофилиДолжности.Найти(Выборка.ПрофильДолжности) = Неопределено Тогда
			ПрофилиДолжности.Добавить(Выборка.ПрофильДолжности);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПрофилиДолжности;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеСпискаВакансий()
	
	ОформлениеСписка = Вакансии.УсловноеОформление;
	
	ЭлементОформления = ОформлениеСписка.Элементы.Добавить();
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "Состояние", Перечисления.СостоянияВакансии.Открыта, ВидСравненияКомпоновкиДанных.НеРавно);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.СостояниеОтклоненоЦветТекста);
	
	ЭлементОформления = ОформлениеСписка.Элементы.Добавить();
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "Состояние", Перечисления.СостоянияВакансии.Открыта);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "ПометкаУдаления", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "ПланируемаяДатаЗакрытия", НачалоДня(ТекущаяДатаСеанса()), ВидСравненияКомпоновкиДанных.Меньше);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПросроченныеДанныеЦвет);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьКомандыЗагрузкиССайта()
	ИнтеграцияРекрутинговыхСайтов.ВакансииСписокПриСозданииНаСервере(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьОткликовКандидатов()

	Если Параметры.РежимВыбора Тогда
		Элементы.ОповещенияГруппа.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	ОтборОткликов = Новый ОтборКомпоновкиДанных();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Вакансии.Отбор.Элементы, ОтборОткликов.Элементы);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ОтборОткликов, "Ответственный", Пользователи.АвторизованныйПользователь());
	
	ОткликиКандидатов = ПодборПерсонала.ОткликиКандидатов(ОтборОткликов.Элементы);
	Если ОткликиКандидатов.Количество() = 0 Тогда
		Элементы.ОповещенияГруппа.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	Элементы.ОповещенияГруппа.Видимость = Истина;
	ВакансииМассив = ОбщегоНазначения.ВыгрузитьКолонку(ОткликиКандидатов, "Вакансия", Истина);
	
	Если ВакансииМассив.Количество() = 1 Тогда
		ТекстПоВакансиям = НСтр("ru = 'по вакансии'");
	Иначе
		ТекстПоВакансиям = НСтр("ru = 'по вакансиям'");
	КонецЕсли;
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Есть не рассмотренные отклики (%1) %2'"), ОткликиКандидатов.Количество(), ТекстПоВакансиям);
	
	ЧастиСообщения = Новый Массив;
	ЧастиСообщения.Добавить(ТекстСообщения);
	ЧастиСообщения.Добавить(" ");
	
	Индекс = 0;
	Пока Индекс < ВакансииМассив.Количество() Цикл
		Если Индекс > 3 Тогда
			// Слишком много — дальше не выводим.
			ЧастьЗавершения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'и по другим (всего %1)'"), ВакансииМассив.Количество());
			ЧастиСообщения.Добавить(" ");
			ЧастиСообщения.Добавить(ЧастьЗавершения);
			Прервать;
		КонецЕсли;
		Если Индекс > 0 Тогда
			ЧастиСообщения.Добавить(", ");
		КонецЕсли;
		Вакансия = ВакансииМассив[Индекс];
		ЧастиСообщения.Добавить(Новый ФорматированнаяСтрока(Строка(Вакансия), , , , ПолучитьНавигационнуюСсылку(Вакансия)));
		Индекс = Индекс + 1;
	КонецЦикла;
	
	Элементы.ОповещениеОбОткликах.Заголовок = Новый ФорматированнаяСтрока(ЧастиСообщения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаОповещенияИзмененыНастройкиДоступаКСайтам()
	
	КоличествоЭлементов = Элементы.КоманднаяПанельФормы.ПодчиненныеЭлементы.ФормаЗагрузить.ПодчиненныеЭлементы.Количество();
	ЭлементыДляУдаления = Новый Массив;
	Для Индекс = 0 По КоличествоЭлементов - 1 Цикл
		ЭлементыДляУдаления.Добавить(Элементы.КоманднаяПанельФормы.ПодчиненныеЭлементы.ФормаЗагрузить.ПодчиненныеЭлементы.Получить(Индекс));			
	КонецЦикла;
	
	Для Каждого ЭлементДляУдаления Из ЭлементыДляУдаления Цикл
		Элементы.Удалить(ЭлементДляУдаления);
	КонецЦикла;
	
	СоответствиеКомандИСайтов = Новый ФиксированноеСоответствие(Новый Соответствие);
	
	СоздатьКомандыЗагрузкиССайта();

КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображениеПодобранных()
	
	Если ИдентификаторОформленияПодобранных	<> Неопределено Тогда
		ЭлементОформления = Вакансии.УсловноеОформление.ПолучитьОбъектПоИдентификатору(ИдентификаторОформленияПодобранных);
	Иначе
		ЭлементОформления = Вакансии.УсловноеОформление.Элементы.Добавить();
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстПодобранногоЗначенияЦвет);
		ИдентификаторОформленияПодобранных = Вакансии.УсловноеОформление.ПолучитьИдентификаторПоОбъекту(ЭлементОформления);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭлементОформления.Отбор, "Ссылка", СписокПодобранных, ВидСравненияКомпоновкиДанных.ВСписке);
	
КонецПроцедуры

#Область ГруппировкаПоПодразделениям

&НаСервере
Процедура НастроитьВидСпискаВакансий()
	
	Если Параметры.РежимВыбора Тогда
		НастроитьВидСпискаВакансийВРежимеВыбора();
		Возврат;
	КонецЕсли;
	
	НастройкаВидВсеВакансии = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ВакансииСписок", "ВидВсеВакансии");
	ВидВсеВакансии = НастройкаВидВсеВакансии;
	Если ВидВсеВакансии = Неопределено Тогда
		ВидВсеВакансии = Истина;
	КонецЕсли;
	
	УстановитьВидСпискаВакансий(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВидСпискаВакансийВРежимеВыбора()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВидСпискаПодменю", "Видимость", Ложь);
	
	ВидВсеВакансии = Истина;
	УстановитьВидСпискаВакансий(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСпискаПодразделений()
	
	Если ПолучитьФункциональнуюОпцию("СтруктураПредприятияНеСоответствуетСтруктуреЮридическихЛиц") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			СтруктураПредприятия.Отбор, "Источник", , ВидСравненияКомпоновкиДанных.НеЗаполнено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидСпискаВакансий(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "СтруктураПредприятия", "Видимость", Не Форма.ВидВсеВакансии);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "Подразделение", "Видимость", Форма.ВидВсеВакансии);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ВидСпискаВсеВакансии", "Пометка", Форма.ВидВсеВакансии);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ВидСпискаПоПодразделениям", "Пометка", Не Форма.ВидВсеВакансии);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоПодразделению(Форма)
	
	Если Форма.Элементы.СтруктураПредприятия.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Форма.ВидВсеВакансии Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Форма.Вакансии, "Подразделение");
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Форма.Вакансии.Отбор, "Подразделение", Форма.Элементы.СтруктураПредприятия.ТекущаяСтрока, ВидСравненияКомпоновкиДанных.ВИерархии);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоПодразделениюНаКлиенте()
	УстановитьОтборПоПодразделению(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСохраняемойНастройки()
	
	Настройки = СохраняемыеНастройки();
	Настройки.ВидВсеВакансии = ВидВсеВакансии;
	Настройки.ПоказыватьОдобренныхОтклоненныхКандидатов = Элементы.ПоказыватьОдобренныхОтклоненныхКандидатов.Пометка;
	СохранитьНастройкиНаСервере(Настройки);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СохраняемыеНастройки()
	
	Настройки = Новый Структура(
		"ВидВсеВакансии,
		|ПоказыватьОдобренныхОтклоненныхКандидатов");
	Возврат Настройки;
	
КонецФункции

&НаСервереБезКонтекста
Процедура СохранитьНастройкиНаСервере(Настройки)
	
	Для Каждого КлючИЗначение Из Настройки Цикл
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ВакансииСписок", КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСнятьОтборОдобренныхОтклоненныхКандидатов(Форма, Использование)
	
	Элементы = Форма.Элементы;
	
	Кнопки = Новый Массив;
	Кнопки.Добавить(Элементы.ПоказыватьОдобренныхОтклоненныхКандидатов);
	Кнопки.Добавить(Элементы.КандидатыКонтекстноеМенюПоказыватьОдобренныхОтклоненныхКандидатов);
	
	ПодборПерсоналаКлиентСервер.УстановитьСнятьОтборОдобренныхОтклоненныхКандидатов(Форма.Кандидаты, Использование, Кнопки);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПриАктивизацииСтрокиВакансииНаКлиенте()
	
	Если Элементы.Вакансии.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Вакансия = Элементы.Вакансии.ТекущаяСтрока;
	Если Вакансия = ВыбраннаяВакансия Тогда
		Возврат;
	КонецЕсли;
	
	ВыбраннаяВакансия = Вакансия;
	
	УстановитьОтборКандидатовПоВакансии(ЭтаФорма, Вакансия);
	ЗаполнитьИнформационныеСтрокиВакансии(Вакансия);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборКандидатовПоВакансии(Форма, Вакансия)
	
	Если Форма.Элементы.КандидатыСписокГруппа.Видимость = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Форма.Кандидаты.Отбор, "Вакансия", Вакансия, ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИнформационныеСтрокиВакансии(Вакансия)
	
	ЗаполнитьИнформационнуюСтрокуЗанятости(Вакансия);
	ЗаполнитьИнформационнуюСтрокуКандидатов(Вакансия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИнформационнуюСтрокуЗанятости(Вакансия)

	ИнформацияЗанятости = Неопределено;
	ДанныеВыбраннойВакансии = Неопределено;
	
	Если ИнформацияЗанятостиТребуетОбновления(Вакансия) Тогда
		НачатьЗаполнениеИнформационнойСтрокиЗанятости(Вакансия);
		Возврат;
	КонецЕсли;
	
	ДополнительныеДанные = ДополнительныеДанныеПоВакансии();
	Если ДополнительныеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИнформацияЗанятости = ДополнительныеДанные.ИнформационнаяСтрокаЗанятости;
	ДанныеВыбраннойВакансии = ДополнительныеДанные;
	
КонецПроцедуры

&НаКлиенте
Функция ИнформацияЗанятостиТребуетОбновления(Вакансия)
	
	ДополнительныеДанные = ДополнительныеДанныеПоВакансии();
	Если ДополнительныеДанные = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	ИзмененныеВакансии = НастройкаСписка(
		Вакансии.КомпоновщикНастроек.Настройки, НастройкиСписка().ИзмененныеВакансии, Новый Массив);
	
	Возврат ИзмененныеВакансии.Найти(Вакансия) <> Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьИнформационнуюСтрокуКандидатов(Вакансия)
	
	ИнформацияКандидатов = Неопределено;

	Если ИнформацияКандидатовТребуетОбновления(Вакансия) Тогда
		НачатьЗаполнениеИнформационнойСтрокиКандидатов(Вакансия);
		Возврат;
	КонецЕсли;
	
	ДополнительныеДанные = ДополнительныеДанныеПоВакансии();
	Если ДополнительныеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИнформацияКандидатов = ДополнительныеДанные.ИнформационнаяСтрокаКандидатов;

КонецПроцедуры

&НаКлиенте
Функция ИнформацияКандидатовТребуетОбновления(Вакансия)
	
	ДополнительныеДанные = ДополнительныеДанныеПоВакансии();
	Если ДополнительныеДанные = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ДополнительныеДанные.ТолькоКандидатыВРаботе <> ТолькоКандидатыВРаботе Тогда
		Возврат Истина;
	КонецЕсли;
	
	ИзмененныеВакансии = НастройкаСписка(
		Вакансии.КомпоновщикНастроек.Настройки, НастройкиСписка().ВакансииИзмененныхКандидатов, Новый Массив);
	
	Возврат ИзмененныеВакансии.Найти(Вакансия) <> Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаНавигационнойСсылкиПозицияМассовогоНабора(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки <> "ПозицииВакансии" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура("Отбор");
	ПараметрыФормы.Вставить("КлючНазначенияИспользования", "ДляОтбораПоМестуВСтруктуреПредприятия");
	ПараметрыФормы.Отбор = Новый Структура("Должность, МестоВСтруктуреПредприятия");
	ПараметрыФормы.Отбор.Должность = ДанныеВыбраннойВакансии.Должность;
	ПараметрыФормы.Отбор.МестоВСтруктуреПредприятия = ДанныеВыбраннойВакансии.Подразделение;
	
	ОткрытьФорму("Справочник.ШтатноеРасписание.ФормаСписка", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылкиСостоянияКандидатов(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если СтрНайти(НавигационнаяСсылкаФорматированнойСтроки, "СостояниеКандидата_") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура("Отбор");
	ПараметрыФормы.Отбор = Новый Структура("Вакансия");
	ПараметрыФормы.Отбор.Вакансия = ВыбраннаяВакансия;
	
	Если СтрНайти(НавигационнаяСсылкаФорматированнойСтроки, "СостояниеКандидата_Этап_") <> 0 Тогда
		ПараметрыФормы.Отбор.Вставить("ЭтапРаботы", СостояниеКандидатаЭтапСсылкаПоНавигационнойСтроке(НавигационнаяСсылкаФорматированнойСтроки));
	КонецЕсли;
	
	Если СтрНайти(НавигационнаяСсылкаФорматированнойСтроки, "СостояниеКандидата_Решение_") <> 0 Тогда
		ПараметрыФормы.Отбор.Вставить("Состояние", СостояниеКандидатаРешениеПоНавигационнойСтроке(НавигационнаяСсылкаФорматированнойСтроки));
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Кандидаты.ФормаСписка", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылкиСотрудникиПозиции(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если СтрНайти(НавигационнаяСсылкаФорматированнойСтроки, "СотрудникиПозиции") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеДанные = ДополнительныеДанныеПоВакансии();
	Если ДополнительныеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура("Отбор");
	ПараметрыФормы.Отбор = Новый Структура("ДолжностьПоШтатномуРасписанию");
	ПараметрыФормы.Отбор.ДолжностьПоШтатномуРасписанию = ДополнительныеДанные.Позиция;
	
	ОткрытьФорму("Справочник.Сотрудники.ФормаСписка", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СостояниеКандидатаЭтапСсылкаПоНавигационнойСтроке(НавигационнаяСсылкаФорматированнойСтроки)
	Возврат ПодборПерсоналаФормы.СостояниеКандидатаЭтапСсылкаПоНавигационнойСтроке(НавигационнаяСсылкаФорматированнойСтроки);
КонецФункции

&НаСервереБезКонтекста
Функция СостояниеКандидатаРешениеПоНавигационнойСтроке(НавигационнаяСсылкаФорматированнойСтроки)
	Возврат Перечисления.СостоянияСогласования[СтрЗаменить(НавигационнаяСсылкаФорматированнойСтроки, "СостояниеКандидата_Решение_", "")];
КонецФункции

&НаКлиенте
Процедура НачатьЗаполнениеИнформационнойСтрокиКандидатов(Вакансия)
	
	ИнформацияКандидатов = Неопределено;
	Элементы.ИнформацияКандидатовЗаполняется.Видимость = Истина;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ЗавершитьЗаполнениеИнформационнойСтрокиКандидатов", ЭтотОбъект, Новый Структура("Вакансия", Вакансия));
	ПодборПерсоналаКлиент.НачатьЗаполнениеСчетчиковКандидатовПоВакансии(
		ВыбраннаяВакансия, ТолькоКандидатыВРаботе, ЭтотОбъект, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьЗаполнениеИнформационнойСтрокиКандидатов(Результат, ДополнительныеПараметры) Экспорт
	
	Элементы.ИнформацияКандидатовЗаполняется.Видимость = Ложь;
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеПараметры.Вакансия <> ВыбраннаяВакансия Тогда
		Возврат;
	КонецЕсли;
	
	ИнформацияКандидатов = ПолучитьИзВременногоХранилища(Результат.АдресРезультата).ИнформационнаяСтрокаКандидатов;
	
	ДополнительныеДанные = ДополнительныеДанныеПоВакансии();
	Если ДополнительныеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеДанные.ИнформационнаяСтрокаКандидатов = ИнформацияКандидатов;
	ДополнительныеДанные.ТолькоКандидатыВРаботе = ТолькоКандидатыВРаботе;

	СброситьИзмененныеВакансии(
		Вакансии.КомпоновщикНастроек.Настройки, 
		НастройкиСписка().ВакансииИзмененныхКандидатов, 
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВыбраннаяВакансия));
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗаполнениеИнформационнойСтрокиЗанятости(Вакансия)
	
	ИнформацияЗанятости = Неопределено;
	Элементы.ИнформацияЗанятостиЗаполняется.Видимость = Истина;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ЗавершитьЗаполнениеИнформационнойСтрокиЗанятости", ЭтотОбъект, Новый Структура("Вакансия", Вакансия));
	ПодборПерсоналаКлиент.НачатьЗаполнениеИнформацииЗанятостиПоВакансии(
		ВыбраннаяВакансия, ЭтотОбъект, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьЗаполнениеИнформационнойСтрокиЗанятости(Результат, ДополнительныеПараметры) Экспорт
	
	Элементы.ИнформацияЗанятостиЗаполняется.Видимость = Ложь;
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеПараметры.Вакансия <> ВыбраннаяВакансия Тогда
		Возврат;
	КонецЕсли;
	
	ИнформацияЗанятости = ПолучитьИзВременногоХранилища(Результат.АдресРезультата).ИнформационнаяСтрокаЗанятости;
	
	ДополнительныеДанные = ДополнительныеДанныеПоВакансии();
	Если ДополнительныеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеДанные.ИнформационнаяСтрокаЗанятости = ИнформацияЗанятости;

	СброситьИзмененныеВакансии(
		Вакансии.КомпоновщикНастроек.Настройки, 
		НастройкиСписка().ИзмененныеВакансии, 
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВыбраннаяВакансия));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОповещенияЭтаповРаботыСКандидатами(ИмяСобытия, Параметр, Источник)
	
	ОбрабатываемыеСобытия = Новый Массив;
	ОбрабатываемыеСобытия.Добавить("ИзмененЭтапРаботыСКандидатом");
	ОбрабатываемыеСобытия.Добавить("РешениеПоКандидату");
	
	Если ОбрабатываемыеСобытия.Найти(ИмяСобытия) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Параметр.Свойство("Кандидаты") Или Не Параметр.Свойство("Вакансии") Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьИзмененныеВакансии(
		Вакансии.КомпоновщикНастроек.Настройки, 
		НастройкиСписка().ВакансииИзмененныхКандидатов, 
		Параметр.Вакансии);
	
	Если Параметр.Вакансии.Найти(ВыбраннаяВакансия) <> Неопределено Тогда
		НачатьЗаполнениеИнформационнойСтрокиКандидатов(ВыбраннаяВакансия);
		Элементы.Кандидаты.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОповещенияИзмененияКандидата(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия <> "Запись_Кандидаты" Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Параметр.Свойство("Кандидаты") Или Не Параметр.Свойство("Вакансии") Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьИзмененныеВакансии(
		Вакансии.КомпоновщикНастроек.Настройки, 
		НастройкиСписка().ВакансииИзмененныхКандидатов, 
		Параметр.Вакансии);
	
	Если Параметр.Вакансии.Найти(ВыбраннаяВакансия) <> Неопределено Тогда
		НачатьЗаполнениеИнформационнойСтрокиКандидатов(ВыбраннаяВакансия);
		Элементы.Кандидаты.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОповещенияИзмененияВакансии(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия <> "Запись_Вакансии" Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьИзмененныеВакансии(
		Вакансии.КомпоновщикНастроек.Настройки, 
		НастройкиСписка().ИзмененныеВакансии, 
		Параметр.Вакансии);
	
	Если Параметр.Вакансии.Найти(ВыбраннаяВакансия) <> Неопределено Тогда
		НачатьЗаполнениеИнформационнойСтрокиЗанятости(ВыбраннаяВакансия);
	КонецЕсли;
	
	ПоследниеПрофили = ПоследниеИспользованныеПрофилиДолжности(5);
	Если ОбщегоНазначенияКлиентСервер.РазностьМассивов(Параметр.ПрофилиДолжностей, ПоследниеПрофили).Количество() 
		< Параметр.ПрофилиДолжностей.Количество() Тогда
		СформироватьПодменюСозданияПоПрофилямДолжности(ПоследниеПрофили);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьСписокКандидатов()
	
	Если Параметры.РежимВыбора Тогда
		Элементы.КандидатыСписокГруппа.Видимость = Ложь;
		СохранитьНастройкуСписка(Вакансии.КомпоновщикНастроек.Настройки, "ВидимостьКандидатов", Ложь);
		Возврат;
	КонецЕсли;
	
	Справочники.Кандидаты.УстановитьУсловноеОформлениеСпискаКандидатов(Кандидаты);
	
	ТолькоКандидатыВРаботе = Не ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ВакансииСписок", "ПоказыватьОдобренныхОтклоненныхКандидатов", Ложь);
	УстановитьСнятьОтборОдобренныхОтклоненныхКандидатов(ЭтаФорма, ТолькоКандидатыВРаботе);
	
	// Сохраняем видимость кандидатов в настройках для получения информационных строк.
	СохранитьНастройкуСписка(Вакансии.КомпоновщикНастроек.Настройки, "ВидимостьКандидатов", Элементы.КандидатыСписокГруппа.Видимость);
	СохранитьНастройкуСписка(Вакансии.КомпоновщикНастроек.Настройки, "ТолькоКандидатыВРаботе", ТолькоКандидатыВРаботе);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьОтборСпискаВакансий()
	
	ТолькоОткрытыеВакансии = Ложь;
	Параметры.Свойство("ТолькоОткрытыеВакансии", ТолькоОткрытыеВакансии);
	
	ЗначениеОтбора = Новый Массив;
	ЗначениеОтбора.Добавить(Перечисления.СостоянияВакансии.Приостановлена);
	ЗначениеОтбора.Добавить(Перечисления.СостоянияВакансии.Закрыта);
	ЗначениеОтбора.Добавить(Перечисления.СостоянияВакансии.Отменена);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Вакансии,
		"Состояние",
		ЗначениеОтбора,
		ВидСравненияКомпоновкиДанных.НеВСписке,
		НСтр("ru = 'Только открытые вакансии'"),
		ТолькоОткрытыеВакансии,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ,
		Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СохранитьНастройкуСписка(Настройки, ИмяНастройки, Значение)
	Настройки.ДополнительныеСвойства.Вставить(ИмяНастройки, Значение);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НастройкаСписка(Настройки, ИмяНастройки, ЗначениеПоУмолчанию = Неопределено)
	
	Значение = Неопределено;
	Если Не Настройки.ДополнительныеСвойства.Свойство(ИмяНастройки, Значение) Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НастройкиСписка()
	
	ОписаниеНастроек = Новый Структура;
	ОписаниеНастроек.Вставить("ТолькоКандидатыВРаботе", "ТолькоКандидатыВРаботе");
	ОписаниеНастроек.Вставить("ВакансииИзмененныхКандидатов", "ВакансииИзмененныхКандидатов");
	ОписаниеНастроек.Вставить("ИзмененныеВакансии", "ИзмененныеВакансии");
	ОписаниеНастроек.Вставить("ВидимостьКандидатов", "ВидимостьКандидатов");
	Возврат ОписаниеНастроек;
	
КонецФункции

&НаКлиенте
Процедура НачатьСозданиеПоЗаявке()
	
	ПараметрыВыбора = Новый Структура(
		"РежимВыбора, 
		|ТолькоДляСозданияВакансий");
	ПараметрыВыбора.РежимВыбора = Истина;
	ПараметрыВыбора.ТолькоДляСозданияВакансий = Истина;

	ОбработчикВыбора = Новый ОписаниеОповещения("ЗавершитьСозданиеПоЗаявке", ЭтотОбъект);
	
	ОткрытьФорму(
		"Документ.ЗаявкаНаПодборПерсонала.ФормаВыбора", 
		ПараметрыВыбора, 
		ЭтаФорма, 
		ЭтаФорма, , , 
		ОбработчикВыбора, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьСозданиеПоЗаявке(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыНовой = Новый Структура("Основание");
	ПараметрыНовой.Основание = ВыбранноеЗначение;
	
	ОткрытьФорму("Справочник.Вакансии.ФормаОбъекта", ПараметрыНовой, ЭтаФорма, ЭтаФорма);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СброситьИзмененныеВакансии(Настройки, ИмяСпискаВакансий, СбрасываемыеВакансии)
	
	ИзмененныеВакансии = НастройкаСписка(Настройки, ИмяСпискаВакансий, Новый Массив);
	Если ИзмененныеВакансии.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.РазностьМассивов(ИзмененныеВакансии, СбрасываемыеВакансии);
	СохранитьНастройкуСписка(Настройки, ИмяСпискаВакансий, ИзмененныеВакансии);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьИзмененныеВакансии(Настройки, ИмяСпискаВакансий, ДобавляемыеВакансии)
	
	Если ДобавляемыеВакансии.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИзмененныеВакансии = НастройкаСписка(Настройки, ИмяСпискаВакансий, Новый Массив);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИзмененныеВакансии, ДобавляемыеВакансии, Истина);
	СохранитьНастройкуСписка(Настройки, ИмяСпискаВакансий, ИзмененныеВакансии);
	
КонецПроцедуры

&НаКлиенте
Функция ДополнительныеДанныеПоВакансии()

	ТекущиеДанные = Элементы.Вакансии.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДополнительныеДанные = ТекущиеДанные.ДополнительныеДанные;
	Если ДополнительныеДанные = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ДополнительныеДанные;
	
КонецФункции

#КонецОбласти