#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// ТехнологияСервиса.ВыгрузкаЗагрузкаДанных

// Возвращает реквизиты справочника, которые образуют естественный ключ для элементов справочника.
//
// Возвращаемое значение:
//  Массив из Строка - имена реквизитов, образующих естественный ключ.
//
Функция ПоляЕстественногоКлюча() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("Код");
	Результат.Добавить("КодПоКлассификатору");
	
	Возврат Результат;
	
КонецФункции

// Конец ТехнологияСервиса.ВыгрузкаЗагрузкаДанных

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("ПолноеНаименование");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Представление = Данные.ПолноеНаименование;
	
КонецПроцедуры

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Текст", ?(Параметры.СпособПоискаСтроки = СпособПоискаСтрокиПриВводеПоСтроке.ЛюбаяЧасть, "%", "") + Параметры.СтрокаПоиска + "%");
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Классификатор.Ссылка,
	|	Классификатор.ПолноеНаименование
	|ИЗ
	|	Справочник.ПричиныПроисшествий КАК Классификатор
	|ГДЕ
	|	НЕ Классификатор.ЭтоГруппа
	|	И Классификатор.ПолноеНаименование ПОДОБНО &Текст";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ДанныеВыбора = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка, Выборка.ПолноеНаименование);
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Классификатор.Ссылка,
	|	Классификатор.КодПоКлассификатору
	|ИЗ
	|	Справочник.ПричиныПроисшествий КАК Классификатор
	|ГДЕ
	|	НЕ Классификатор.ЭтоГруппа
	|	И Классификатор.КодПоКлассификатору ПОДОБНО &Текст";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка, Выборка.КодПоКлассификатору);
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Начальное заполнение причин происшествий.
Процедура НачальноеЗаполнение() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЗначениеИстина
	|ИЗ
	|	Справочник.ПричиныПроисшествий КАК ПричиныПроисшествий";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда 
		Возврат;
	КонецЕсли;
	
	КлассификаторXML = Справочники.ПричиныПроисшествий.ПолучитьМакет("ПричиныПроисшествий").ПолучитьТекст();
	КлассификаторТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	Для Каждого СтрокаКлассификатора Из КлассификаторТаблица Цикл
		СправочникСсылка = Справочники.ПричиныПроисшествий.НайтиПоКоду(СтрокаКлассификатора.Code);
		Если Не ЗначениеЗаполнено(СправочникСсылка) Тогда
			НайденныеСтроки = КлассификаторТаблица.НайтиСтроки(Новый Структура("CodeParent", СтрокаКлассификатора.Code));
			Если НайденныеСтроки.Количество() = 0 Тогда
				СправочникОбъект = Справочники.ПричиныПроисшествий.СоздатьЭлемент();
			Иначе
				СправочникОбъект = Справочники.ПричиныПроисшествий.СоздатьГруппу();
			КонецЕсли;
			СправочникОбъект.Код = СтрокаКлассификатора.Code;
			СправочникОбъект.ПолноеНаименование = СтрокаКлассификатора.Title;
			СправочникОбъект.КодПоКлассификатору = СтрокаКлассификатора.CodeView;
			СправочникОбъект.Родитель = Справочники.ПричиныПроисшествий.НайтиПоКоду(СтрокаКлассификатора.CodeParent);
			
			СправочникОбъект.ДополнительныеСвойства.Вставить("ПодборИзКлассификатора");
			СправочникОбъект.ОбменДанными.Загрузка = Истина;
			СправочникОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли