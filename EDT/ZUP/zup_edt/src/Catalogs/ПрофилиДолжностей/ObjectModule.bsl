#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Вакансии") Тогда
		ЗаполнитьПоВакансии(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Ссылка.Пустая() Тогда
		ЭлектронноеИнтервью.СкопироватьНастройкиЭтапов(ЭтотОбъект, "ПрофилиДолжностей");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	// Обновляем все вакансии, описание которых соответствует профилю.
	Справочники.Вакансии.ОбновитьОписаниеВакансийПоПрофилюДолжности(
		Ссылка, Справочники.ПрофилиДолжностей.ДанныеПрофиляДолжности(Ссылка));
	
	// Обновляем все позиции штатного расписания, описание которых соответствует профилю.
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ХарактеристикиПерсонала") Тогда
		МодульХарактеристикиПерсонала = ОбщегоНазначения.ОбщийМодуль("ХарактеристикиПерсонала");
		МодульХарактеристикиПерсонала.ОбновитьДействияХарактеристикиПозицийШтатногоРасписанияПоПрофилюДолжности(Ссылка, ДействияСотрудников, ХарактеристикиПерсонала);
	КонецЕсли;
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ОбучениеРазвитие") Тогда
		МодульОбучениеРазвитие = ОбщегоНазначения.ОбщийМодуль("ОбучениеРазвитие");
		МодульОбучениеРазвитие.ОбновитьПрограммуОбученияПозицийШтатногоРасписанияПоПрофилюДолжности(Ссылка, ПрограммаОбучения, ПродолжительностьПланаОбучения, РазмерностьПродолжительностиПланаОбучения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоВакансии(Вакансия)
	
	ПараметрыДанных = Справочники.Вакансии.ПараметрыПолученияДанныхВакансии();
	ПараметрыДанных.ЭтапыРаботыСКандидатами = Истина;
	ПараметрыДанных.ДействияСотрудников = Истина;
	ПараметрыДанных.ХарактеристикиПерсонала = Истина;
	
	ДанныеВакансии = Справочники.Вакансии.ДанныеВакансии(Вакансия, ПараметрыДанных);
	
	Требования = ДанныеВакансии.Требования;
	Обязанности = ДанныеВакансии.Обязанности;
	Условия = ДанныеВакансии.Условия;
	
	Подразделение = ДанныеВакансии.Подразделение;
	Должность = ДанныеВакансии.Должность;
	
	ПодборПерсоналаКлиентСервер.ЗаполнитьНаименованиеПрофиляДолжности(ЭтотОбъект);
	Если ПустаяСтрока(Наименование) Тогда
		Наименование = ДанныеВакансии.Наименование;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеВакансии.ЭтапыРаботыСКандидатами, ЭтапыРаботыСКандидатами);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеВакансии.ДействияСотрудников, ДействияСотрудников);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеВакансии.ХарактеристикиПерсонала, ХарактеристикиПерсонала);
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли