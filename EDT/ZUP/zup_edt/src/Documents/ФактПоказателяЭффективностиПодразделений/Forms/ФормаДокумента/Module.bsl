
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ЗначенияДляЗаполнения = Новый Структура("Ответственный, Месяц", "Объект.Ответственный", "Объект.Период");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		ПриПолученииДанныхНаСервере();
	КонецЕсли;
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриПолученииДанныхНаСервере();
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_ФактПоказателяЭффективностиПодразделений");
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриПолученииДанныхНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказательПриИзменении(Элемент)
	УстановитьПараметрыВыбораПодразделений();
КонецПроцедуры

&НаКлиенте
Процедура ПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	КлючевыеПоказателиЭффективностиКлиент.ВыбратьПериод(ЭтаФорма, Новый ОписаниеОповещения("ПериодПриИзмененииНаКлиенте", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ПериодСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	КлючевыеПоказателиЭффективностиКлиент.ПериодСтрокойРегулирование(ЭтаФорма, Направление);
	ПериодПриИзмененииНаКлиенте();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ЗаполнитьПоОтветственному(Команда)
	ЗаполнитьСписокПодразделенийПоОтветственномуНаСервере();
КонецПроцедуры

#Область ЗагрузкаДанныхИзФайла

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ПараметрыЗагрузки = ЗагрузкаДанныхИзФайлаКлиент.ПараметрыЗагрузкиДанных();
	ПараметрыЗагрузки.ПолноеИмяТабличнойЧасти = "ФактПоказателяЭффективностиПодразделений.Подразделения";
	ПараметрыЗагрузки.Заголовок = НСтр("ru = 'Загрузка фактических значений показателя подразделений из файла'");
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьПодразделенияИзФайлаЗавершение", ЭтотОбъект);
	ЗагрузкаДанныхИзФайлаКлиент.ПоказатьФормуЗагрузки(ПараметрыЗагрузки, Оповещение);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#Область ЗагрузкаДанныхИзФайла

&НаКлиенте
Процедура ЗагрузитьПодразделенияИзФайлаЗавершение(АдресЗагруженныхДанных, ДополнительныеПараметры) Экспорт
	
	Если АдресЗагруженныхДанных = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ЗагрузитьПодразделенияИзФайлаНаСервере(АдресЗагруженныхДанных);
			
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПодразделенияИзФайлаНаСервере(АдресЗагруженныхДанных)
	
	ДобавленыСтроки = Ложь;
	
	ЗагруженныеДанные = ПолучитьИзВременногоХранилища(АдресЗагруженныхДанных);
	Для Каждого СтрокаДанных Из ЗагруженныеДанные Цикл 
		
		Если Не ЗначениеЗаполнено(СтрокаДанных.Подразделение) Тогда 
			Продолжить;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Объект.Подразделения.Добавить(), СтрокаДанных);
		
	    ДобавленыСтроки = Истина;
	КонецЦикла;
	
	Модифицированность = Модифицированность ИЛИ ДобавленыСтроки;
		
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ЗаполнитьВторичныеРеквизитыФормы();
	
	УстановитьСвойстваЭлементовФормы();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВторичныеРеквизитыФормы()
	КлючевыеПоказателиЭффективностиКлиентСервер.УстановитьПредставлениеПериодаПоДате(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваЭлементовФормы()
	
	УстановитьПараметрыВыбораПодразделений();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзмененииНаКлиенте(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт 
	ПериодПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзмененииНаСервере()
	УстановитьПараметрыВыбораПодразделений();
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораПодразделений()

	КоллекцияОтборов = КоллекцияОтборов();
	
	ТаблицаПодразделений = КлючевыеПоказателиЭффективности.ТаблицаПодразделенийПоПоказателю(Объект.Период, Объект.Показатель, КоллекцияОтборов);
	МассивПодразделений = ТаблицаПодразделений.ВыгрузитьКолонку("Подразделение");
	
	КлючевыеПоказателиЭффективностиФормы.УстановитьПараметрыВыбораПодразделениям(Элементы.ПодразделенияПодразделение, МассивПодразделений);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокПодразделенийПоОтветственномуНаСервере()

	КоллекцияОтборов = КоллекцияОтборов();
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
		КоллекцияОтборов, "ОтветственныйЗаВводФакта", "=", Объект.Ответственный);
		
	ТаблицаПодразделенийОтветственного = КлючевыеПоказателиЭффективности.ТаблицаПодразделенийПоПоказателю(Объект.Период, Объект.Показатель, КоллекцияОтборов);
	
	Объект.Подразделения.Очистить();
	Для каждого СтрокаПодразделения Из ТаблицаПодразделенийОтветственного Цикл
		ЗаполнитьЗначенияСвойств(Объект.Подразделения.Добавить(), СтрокаПодразделения);
	КонецЦикла; 

КонецПроцедуры

&НаСервере
Функция КоллекцияОтборов()

	КоллекцияОтборов = Новый Массив;
	
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
		КоллекцияОтборов, "Горизонт", "=", Объект.Горизонт);

	Возврат КоллекцияОтборов;
		
КонецФункции

#КонецОбласти
