#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		МетаданныеОбъекта = Метаданные();
		Для Каждого ПараметрЗаполнения Из ДанныеЗаполнения Цикл
			Если МетаданныеОбъекта.Реквизиты.Найти(ПараметрЗаполнения.Ключ)<>Неопределено Тогда
				ЭтотОбъект[ПараметрЗаполнения.Ключ] = ПараметрЗаполнения.Значение;
			Иначе
				Если ОбщегоНазначения.ЭтоСтандартныйРеквизит(МетаданныеОбъекта.СтандартныеРеквизиты, ПараметрЗаполнения.Ключ) Тогда
					ЭтотОбъект[ПараметрЗаполнения.Ключ] = ПараметрЗаполнения.Значение;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПодготовкаСпецоценкиУсловийТруда")
		Или ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РезультатыСпецоценкиУсловийТруда") Тогда
		
		ДокументОснование = ДанныеЗаполнения;
		РабочиеМеста.Очистить();
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
		Запрос.УстановитьПараметр("ДатаДокумента", Дата);
		
		Если ЗначениеЗаполнено(ДокументОснование) Тогда
			РеквизитыДокументаОснование = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, "Организация, Исполнитель", Истина);
			Организация = РеквизитыДокументаОснование.Организация;
			Исполнитель = РеквизитыДокументаОснование.Исполнитель;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Организация) Тогда
			Возврат;
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Истина);
		ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
		ПараметрыПолученияСотрудниковОрганизаций.Организация = Организация;
		
		КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудниковОрганизаций);
		
		ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц, "ВТСотрудникиОрганизации");
		КадровыеДанные = "ДолжностьПоШтатномуРасписанию";
		КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, КадровыеДанные);
		УстановитьПривилегированныйРежим(Ложь);
		
		Если ЗначениеЗаполнено(ДокументОснование) Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ТаблицаДокумента.Ссылка КАК Документ,
			|	ТаблицаДокументаРабочиеМеста.РабочееМесто КАК РабочееМесто
			|ПОМЕСТИТЬ ВТРабочиеМеста
			|ИЗ
			|	#ТаблицаДокументаОсновная КАК ТаблицаДокумента
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ #ТаблицаДокументаРабочиеМеста КАК ТаблицаДокументаРабочиеМеста
			|		ПО ТаблицаДокумента.Ссылка = ТаблицаДокументаРабочиеМеста.Ссылка
			|ГДЕ
			|	ТаблицаДокумента.Ссылка = &ДокументОснование
			|	И ТаблицаДокументаРабочиеМеста.КлассУсловийТрудаПоРезультатамПредыдущейОценки В (ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Оптимальный), ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Допустимый), ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка))
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РабочиеМеста.Документ КАК Документ,
			|	ТаблицаДокументаАналогичныеМеста.АналогичноеМесто КАК РабочееМесто
			|ПОМЕСТИТЬ ВТВсеРабочиеМеста
			|ИЗ
			|	#ТаблицаДокументаАналогичныеМеста КАК ТаблицаДокументаАналогичныеМеста
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРабочиеМеста КАК РабочиеМеста
			|		ПО ТаблицаДокументаАналогичныеМеста.Ссылка = РабочиеМеста.Документ
			|			И ТаблицаДокументаАналогичныеМеста.РабочееМесто = РабочиеМеста.РабочееМесто
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	РабочиеМеста.Документ,
			|	РабочиеМеста.РабочееМесто
			|ИЗ
			|	ВТРабочиеМеста КАК РабочиеМеста
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВсеРабочиеМеста.РабочееМесто КАК РабочееМесто,
			|	КОЛИЧЕСТВО(КадровыеДанныеСотрудников.Сотрудник) КАК Численность
			|ИЗ
			|	ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВсеРабочиеМеста КАК ВсеРабочиеМеста
			|		ПО КадровыеДанныеСотрудников.ДолжностьПоШтатномуРасписанию = ВсеРабочиеМеста.РабочееМесто
			|
			|СГРУППИРОВАТЬ ПО
			|	ВсеРабочиеМеста.РабочееМесто";
			
			МетаданныеДокумента = ДокументОснование.Метаданные();
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ТаблицаДокументаОсновная", МетаданныеДокумента.ПолноеИмя());
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ТаблицаДокументаРабочиеМеста", МетаданныеДокумента.ПолноеИмя() + ".РабочиеМеста");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ТаблицаДокументаАналогичныеМеста", МетаданныеДокумента.ПолноеИмя() + ".АналогичныеМеста");
			Если МетаданныеДокумента.ПолноеИмя() = "Документ.РезультатыСпецоценкиУсловийТруда" Тогда
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаДокументаРабочиеМеста.КлассУсловийТрудаПоРезультатамПредыдущейОценки", "ТаблицаДокументаРабочиеМеста.КлассУсловийТруда");
			КонецЕсли;
		Иначе
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	КадровыеДанныеСотрудников.ДолжностьПоШтатномуРасписанию КАК РабочееМесто,
			|	КОЛИЧЕСТВО(КадровыеДанныеСотрудников.Сотрудник) КАК Численность
			|ИЗ
			|	ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КлассыУсловийТрудаПоДолжностям.СрезПоследних(&ДатаДокумента, ) КАК КлассыУсловийТрудаПоДолжностямСрезПоследних
			|		ПО КадровыеДанныеСотрудников.ДолжностьПоШтатномуРасписанию = КлассыУсловийТрудаПоДолжностямСрезПоследних.Должность
			|ГДЕ
			|	КлассыУсловийТрудаПоДолжностямСрезПоследних.КлассУсловийТруда В (ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Оптимальный), ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Допустимый), ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка))
			|
			|СГРУППИРОВАТЬ ПО
			|	КадровыеДанныеСотрудников.ДолжностьПоШтатномуРасписанию";
			
		КонецЕсли;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СтрокаРабочегоМеста = РабочиеМеста.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРабочегоМеста, Выборка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьКорректностьМесяца(Ссылка, ДатаПодачи, "Объект.ДатаПодачи", Отказ, НСтр("ru='Период отчета'"), , , Ложь);
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли