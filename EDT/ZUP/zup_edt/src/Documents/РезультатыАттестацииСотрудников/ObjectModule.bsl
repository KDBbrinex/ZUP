#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если АттестацииСотрудников.ЭтоВнешняяАттестация(ВидАттестации) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СоставАттестационнойКомиссии");
	КонецЕсли;
	
	Если АттестацииСотрудников.ТипАттестации(ВидАттестации) = Перечисления.ТипыАттестацииСотрудников.ПодтверждениеСоответствияДолжности Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "РезультатыАттестации.Специальность");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "РезультатыАттестации.Категория");
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "РезультатыАттестации.Должность");
		Если АттестацииСотрудников.ЭтоАттестацияПедагогическихРаботников(ВидАттестации) Тогда 
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "РезультатыАттестации.Специальность");
		КонецЕсли;
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.КадровыйРезерв") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("КадровыйРезерв");
		Модуль.ПроверитьЗаполнениеВидаРезерваВТабличнойЧасти(ЭтотОбъект, "РезультатыАттестации", ПроверяемыеРеквизиты, Отказ, Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "РезультатыАттестации.ПозицияРезерва");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "РезультатыАттестации.ВидРезерва");
	КонецЕсли;
	
	// Проверка на отсутствие одинаковых сотрудников в ТЧ РезультатыАттестации.
	ЕстьОдинаковыеСотрудники = Ложь;
	Сотрудники = Новый Массив;
	Для Каждого СтрокаАттестации Из РезультатыАттестации Цикл
		Если Сотрудники.Найти(СтрокаАттестации.Сотрудник)=Неопределено Тогда
			Сотрудники.Добавить(СтрокаАттестации.Сотрудник);
			Продолжить;
		КонецЕсли;
		ИндексСтроки = РезультатыАттестации.Индекс(СтрокаАттестации);
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Информация о сотруднике %1 уже была введена в документе ранее'"), СтрокаАттестации.Сотрудник);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, "Объект.РезультатыАттестации[" + Формат(ИндексСтроки, "ЧН=0; ЧГ=0") + "].Сотрудник", ,Отказ);
		ЕстьОдинаковыеСотрудники = Истина;
	КонецЦикла;

	Если ЕстьОдинаковыеСотрудники Тогда
		Возврат
	КонецЕсли;
	
	// Проверка на отсутствие одинаковых специальностей на одну и ту же дату 
	// для одного физического лица в ТЧ РезультатыАттестации.
	// Считаем, что дата аттестации заполнена всегда.
	ФизическиеЛицаСотрудников = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники, "ФизическоеЛицо");
	СтрокиПоФизическимЛицам = Новый Соответствие;
	Для Каждого СтрокаАттестации Из РезультатыАттестации Цикл
		Если ЗначениеЗаполнено(СтрокаАттестации.Специальность) Тогда 
			ФизическоеЛицо = ФизическиеЛицаСотрудников[СтрокаАттестации.Сотрудник];	
			Если СтрокиПоФизическимЛицам[ФизическоеЛицо] = Неопределено Тогда
				СтрокиПоФизическимЛицам.Вставить(ФизическоеЛицо, Новый Массив);
			КонецЕсли;
			СтрокиПоФизическимЛицам[ФизическоеЛицо].Добавить(СтрокаАттестации);
		КонецЕсли;
	КонецЦикла;
	
	Если СтрокиПоФизическимЛицам.Количество()=0 Тогда 
		Возврат
	КонецЕсли;
	
	ТаблицаСообщений = Новый ТаблицаЗначений;
	ТаблицаСообщений.Колонки.Добавить("ИндексСтроки");
	ТаблицаСообщений.Колонки.Добавить("Сотрудник");
	ТаблицаСообщений.Колонки.Добавить("Реквизит");
	Для Каждого ТекущееФизическоеЛицо Из СтрокиПоФизическимЛицам Цикл 
		КоличествоСтрок = ТекущееФизическоеЛицо.Значение.Количество();
		Если КоличествоСтрок < 2 Тогда
			Продолжить;	
		КонецЕсли;
		// Двойной цикл для сравнения всех пар строк с одинаковым физическим лицом.
		Для ИндексЦикла0 = 0 По КоличествоСтрок-2 Цикл
			Строка0 = ТекущееФизическоеЛицо.Значение[ИндексЦикла0];
			ТекущийСотрудник = Строка0.Сотрудник;
			Для ИндексЦикла1 = ИндексЦикла0+1 По КоличествоСтрок-1 Цикл
				Строка1 = ТекущееФизическоеЛицо.Значение[ИндексЦикла1];
				Если Строка0.ДатаАттестации<>Строка1.ДатаАттестации Или Строка0.Специальность<>Строка1.Специальность Тогда
					Продолжить;
				КонецЕсли;
				Если РеквизитыРавны(Строка0, Строка1) Тогда
					Продолжить;
				КонецЕсли;
				ИндексСтроки = РезультатыАттестации.Индекс(Строка1);
				НоваяСтрокаСообщения = ТаблицаСообщений.Добавить();
				НоваяСтрокаСообщения.ИндексСтроки = ИндексСтроки;
				НоваяСтрокаСообщения.Сотрудник = ТекущийСотрудник;
				Если Строка0.Категория<>Строка1.Категория Тогда 
					НоваяСтрокаСообщения.Реквизит = "Категория";
				ИначеЕсли Строка0.ДатаОкончания<>Строка1.ДатаОкончания Тогда 
					НоваяСтрокаСообщения.Реквизит = "ДатаОкончания";
				ИначеЕсли Строка0.РезультатАттестации<>Строка1.РезультатАттестации Тогда 
					НоваяСтрокаСообщения.Реквизит = "РезультатАттестации";
				ИначеЕсли Строка0.СерияДокумента<>Строка1.СерияДокумента
						  Или Строка0.НомерДокумента<>Строка1.НомерДокумента Или  Строка0.КемВыданДокумент<>Строка1.КемВыданДокумент Тогда
					НоваяСтрокаСообщения.Реквизит = "ПредставлениеДокументаПодтверждающегоКвалификацию";
				Иначе 
					НоваяСтрокаСообщения.Реквизит = "Сотрудник";
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	ТаблицаСообщений.Свернуть("ИндексСтроки,Сотрудник,Реквизит");
	Для Каждого ТекущееСообщение Из ТаблицаСообщений Цикл 
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Для работника %1 ранее в документе уже введены данные об аттестации на ту же дату по той же специальности. Остальные реквизиты также должны совпадать.'"), ТекущееСообщение.Сотрудник);
		РеквизитФормы = "Объект.РезультатыАттестации[" + Формат(ТекущееСообщение.ИндексСтроки, "ЧН=0; ЧГ=0") + "]." + ТекущееСообщение.Реквизит;
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, РеквизитФормы, ,Отказ);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ЗарплатаКадрыРасширенный.ИнициализироватьОтложеннуюРегистрациюВторичныхДанныхПоДвижениямДокумента(Движения);
	
	ОчиститьСпециальностиФизическихЛиц();
	
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	ЗарплатаКадрыРасширенный.УстановитьВремяРегистрацииДокумента(Движения, ДанныеДляПроведения.СотрудникиДаты, Ссылка);
	
	АттестацииСотрудников.СформироватьДвиженияРезультатыАттестации(Движения, Отказ, ДанныеДляПроведения.РезультатыАттестации);
	АттестацииСотрудников.СформироватьДвиженияВнеочередныеАттестацииСотрудников(Движения, Отказ, ДанныеДляПроведения.ВнеочередныеАттестации);
	
	Если ЭтоПодтверждениеКвалификацииПоСпециальности() Тогда
		
		Если Не АттестацииСотрудников.ЭтоАттестацияПедагогическихРаботников(ВидАттестации) Тогда 
			РегистрыСведений.СпециальностиФизическихЛиц.ЗарегистрироватьСпециальностиФизическихЛиц(ДанныеДляПроведения.СпециальностиФизическихЛиц);
		КонецЕсли;
		
		Если ИзменитьОплату Тогда
			СтруктураПлановыхНачислений = Новый Структура;
			СтруктураПлановыхНачислений.Вставить("ДанныеОПлановыхНачислениях", ДанныеДляПроведения.ПлановыеНачисления);
			СтруктураПлановыхНачислений.Вставить("ЗначенияПоказателей", ДанныеДляПроведения.ЗначенияПоказателей);
			РасчетЗарплаты.СформироватьДвиженияПлановыхНачислений(ЭтотОбъект, Движения, СтруктураПлановыхНачислений);
			РазрядыКатегорииДолжностей.СформироватьДвиженияРазрядовКатегорийСотрудников(Движения, ДанныеДляПроведения.РазрядыКатегорииСотрудников);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.КадровыйРезерв") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("КадровыйРезерв");
		Модуль.СформироватьДвиженияИсторииКадровогоРезерва(Движения, ДанныеДляПроведения, "ДанныеКадровогоРезерва");
	КонецЕсли;
	
	ЭлектронныеТрудовыеКнижки.СформироватьДвиженияМероприятийТрудовойДеятельности(
		Движения.МероприятияТрудовойДеятельности, ДанныеДляПроведения.МероприятияТрудовойДеятельности, Истина);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОчиститьСпециальностиФизическихЛиц();
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЗарплатаКадрыРасширенный.ПриКопированииМногофункциональногоДокумента(ЭтотОбъект);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ЗарплатаКадрыРасширенный.ПередЗаписьюМногофункциональногоДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПроведения()
	
	ДанныеДляПроведения = Новый Структура();
	ДанныеДляПроведения.Вставить("МенеджерВременныхТаблиц", 		Новый МенеджерВременныхТаблиц);
	ДанныеДляПроведения.Вставить("РезультатыАттестации", 			Неопределено);
	ДанныеДляПроведения.Вставить("ВнеочередныеАттестации", 			Неопределено);
	ДанныеДляПроведения.Вставить("СпециальностиФизическихЛиц", 		Неопределено);
	ДанныеДляПроведения.Вставить("ПлановыеНачисления", 				Неопределено);
	ДанныеДляПроведения.Вставить("ЗначенияПоказателей", 			Неопределено);
	ДанныеДляПроведения.Вставить("ДанныеСовокупныхТарифныхСтавок", 	Неопределено);
	ДанныеДляПроведения.Вставить("РазрядыКатегорииСотрудников", 	Неопределено);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеДляПроведения.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("КвалификацияПодтверждена", Перечисления.РезультатыПодтвержденияКвалификацииПоСпециальности.КвалификацияПодтверждена);
	
	СоздатьВТРезультатыАттестацийСотрудников(Запрос, ДанныеДляПроведения);
	
	ДобавитьДанныеДляПроведенияРезультатыАттестации(Запрос, ДанныеДляПроведения);
	ДобавитьДанныеДляПроведенияВнеочередныеАттестации(Запрос, ДанныеДляПроведения);
		
	Если ЭтоПодтверждениеКвалификацииПоСпециальности() Тогда
		ДобавитьДанныеДляПроведенияСпециальностиФизическихЛиц(Запрос, ДанныеДляПроведения);
		
		Если ИзменитьОплату Тогда
			ДобавитьДанныеДляПроведенияПлановыеНачисления(Запрос, ДанныеДляПроведения);
			ДобавитьДанныеДляПроведенияЗначенияПоказателей(Запрос, ДанныеДляПроведения);
			ДобавитьДанныеДляПроведенияДанныеСовокупныхТарифныхСтавок(Запрос, ДанныеДляПроведения);
			ДобавитьДанныеДляПроведенияРазрядыКатегорииСотрудников(Запрос, ДанныеДляПроведения);
		КонецЕсли;
		
	КонецЕсли;
	
	ДобавитьДанныеДляПроведенияПоКадровомуРезерву(ДанныеДляПроведения);
	ДобавитьДанныеОВремениРегистрацииПлановыхНачислений(Запрос, ДанныеДляПроведения);
	
	ДанныеДляПроведения.Вставить("МероприятияТрудовойДеятельности",
		Документы.РезультатыАттестацииСотрудников.ДанныеДляПроведенияМероприятияТрудовойДеятельности(Ссылка).Получить(Ссылка));
	
	Возврат ДанныеДляПроведения;	
	
КонецФункции 

Процедура СоздатьВТРезультатыАттестацийСотрудников(Запрос, ДанныеДляПроведения)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧРезультатыАттестации.Сотрудник,
	|	ТЧРезультатыАттестации.ДатаАттестации КАК Период
	|ПОМЕСТИТЬ ВТСотрудникиПериоды
	|ИЗ
	|	Документ.РезультатыАттестацииСотрудников.РезультатыАттестации КАК ТЧРезультатыАттестации
	|ГДЕ
	|	ТЧРезультатыАттестации.Ссылка = &Ссылка";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(ДанныеДляПроведения.МенеджерВременныхТаблиц, "ВТСотрудникиПериоды");
	КадровыеДанные = "ГоловнаяОрганизация,ФизическоеЛицо";
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, КадровыеДанные);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧРезультатыАттестации.Сотрудник,
	|	ТЧРезультатыАттестации.Должность,
	|	ТЧРезультатыАттестации.РезультатАттестации,
	|	ТЧРезультатыАттестации.РешениеКомиссии,
	|	ТЧРезультатыАттестации.ДатаВнеочереднойАттестации,
	|	ТЧРезультатыАттестации.ПозицияРезерва,
	|	ТЧРезультатыАттестации.ВидРезерва,
	|	ТЧРезультатыАттестации.ДатаАттестации КАК Период,
	|	ТЧРезультатыАттестации.ДатаАттестации,
	|	ТЧРезультатыАттестации.ДатаОкончания,
	|	ТЧРезультатыАттестации.Ссылка.ВидАттестации КАК ВидАттестации,
	|	ТЧРезультатыАттестации.Ссылка.Организация КАК Организация,
	|	ВТКадровыеДанныеСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ТЧРезультатыАттестации.Специальность,
	|	ТЧРезультатыАттестации.Категория,
	|	ТЧРезультатыАттестации.ДатаДокумента,
	|	ТЧРезультатыАттестации.СерияДокумента,
	|	ТЧРезультатыАттестации.НомерДокумента,
	|	ТЧРезультатыАттестации.КемВыданДокумент,
	|	ТЧРезультатыАттестации.Основание,
	|	ТЧРезультатыАттестации.Ссылка,
	|	ВТКадровыеДанныеСотрудников.ФизическоеЛицо,
	|	ТЧРезультатыАттестации.СовокупнаяТарифнаяСтавка,
	|	ТЧРезультатыАттестации.ВидТарифнойСтавки
	|ПОМЕСТИТЬ ВТРезультатыАттестацийСотрудников
	|ИЗ
	|	Документ.РезультатыАттестацииСотрудников.РезультатыАттестации КАК ТЧРезультатыАттестации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ВТКадровыеДанныеСотрудников
	|		ПО ТЧРезультатыАттестации.Сотрудник = ВТКадровыеДанныеСотрудников.Сотрудник
	|			И ТЧРезультатыАттестации.ДатаАттестации = ВТКадровыеДанныеСотрудников.Период
	|ГДЕ
	|	ТЧРезультатыАттестации.Ссылка = &Ссылка";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ДобавитьДанныеДляПроведенияРезультатыАттестации(Запрос, ДанныеДляПроведения)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РезультатыАттестации.ДатаАттестации КАК Период,
	|	РезультатыАттестации.Сотрудник,
	|	РезультатыАттестации.Должность,
	|	РезультатыАттестации.РезультатАттестации,
	|	РезультатыАттестации.РешениеКомиссии,
	|	РезультатыАттестации.ВидАттестации
	|ИЗ
	|	ВТРезультатыАттестацийСотрудников КАК РезультатыАттестации";
	
	ДанныеДляПроведенияРезультатыАттестации = Запрос.Выполнить().Выгрузить();
	
	ДанныеДляПроведения.Вставить("РезультатыАттестации", ДанныеДляПроведенияРезультатыАттестации);
	
КонецПроцедуры

Процедура ДобавитьДанныеДляПроведенияВнеочередныеАттестации(Запрос, ДанныеДляПроведения)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВнеочередныеАттестации.ДатаАттестации КАК Период,
	|	ВнеочередныеАттестации.Сотрудник,
	|	ВнеочередныеАттестации.ДатаВнеочереднойАттестации,
	|	ВнеочередныеАттестации.ВидАттестации
	|ИЗ
	|	ВТРезультатыАттестацийСотрудников КАК ВнеочередныеАттестации
	|ГДЕ
	|	ВнеочередныеАттестации.ДатаВнеочереднойАттестации <> &ПустаяДата";
	
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	
	ДанныеДляПроведенияВнеочередныеАттестации = Запрос.Выполнить().Выгрузить();
	
	ДанныеДляПроведения.Вставить("ВнеочередныеАттестации", ДанныеДляПроведенияВнеочередныеАттестации);
	
КонецПроцедуры

Процедура ДобавитьДанныеДляПроведенияСпециальностиФизическихЛиц(Запрос, ДанныеДляПроведения)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СпециальностиФизическихЛиц.ДатаАттестации КАК Период,
	|	СпециальностиФизическихЛиц.ФизическоеЛицо,
	|	СпециальностиФизическихЛиц.Специальность,
	|	СпециальностиФизическихЛиц.Категория КАК РазрядКатегория,
	|	СпециальностиФизическихЛиц.СерияДокумента КАК Серия,
	|	СпециальностиФизическихЛиц.НомерДокумента КАК Номер,
	|	СпециальностиФизическихЛиц.КемВыданДокумент КАК КемВыдан,
	|	СпециальностиФизическихЛиц.Основание,
	|	СпециальностиФизическихЛиц.ДатаОкончания КАК ДействуетПо,
	|	СпециальностиФизическихЛиц.Ссылка КАК ДокументРегистратор
	|ИЗ
	|	ВТРезультатыАттестацийСотрудников КАК СпециальностиФизическихЛиц
	|ГДЕ
	|	СпециальностиФизическихЛиц.РезультатАттестации = &КвалификацияПодтверждена";
	
	ДанныеДляПроведенияСпециальностиФизическихЛиц = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведенияСпециальностиФизическихЛиц.Свернуть("Период,ФизическоеЛицо,Специальность,РазрядКатегория,Серия,Номер,КемВыдан,Основание,ДействуетПо,ДокументРегистратор");
	ДанныеДляПроведения.Вставить("СпециальностиФизическихЛиц", ДанныеДляПроведенияСпециальностиФизическихЛиц);
	
КонецПроцедуры

Процедура ДобавитьДанныеДляПроведенияПлановыеНачисления(Запрос, ДанныеДляПроведения)
		
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сотрудники.ДатаАттестации КАК ДатаСобытия,
		|	ВЫБОР
		|		КОГДА Сотрудники.ДатаОкончания > ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ДОБАВИТЬКДАТЕ(Сотрудники.ДатаОкончания, ДЕНЬ, 1)
		|		ИНАЧЕ Сотрудники.ДатаОкончания
		|	КОНЕЦ КАК ДействуетДо,
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	Начисления.Начисление,
		|	Начисления.Действие,
		|	Начисления.ДокументОснование,
		|	ВЫБОР
		|		КОГДА Начисления.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСНачислениямиИУдержаниями.Отменить)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Используется,
		|	ВЫБОР
		|		КОГДА Начисления.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСНачислениямиИУдержаниями.Отменить)
		|			ТОГДА ИСТИНА
		|		КОГДА Начисления.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСНачислениямиИУдержаниями.Утвердить)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ИспользуетсяПоОкончании,
		|	Начисления.Размер,
		|	Сотрудники.ФизическоеЛицо,
		|	Сотрудники.ГоловнаяОрганизация
		|ИЗ
		|	Документ.РезультатыАттестацииСотрудников.Начисления КАК Начисления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРезультатыАттестацийСотрудников КАК Сотрудники
		|		ПО Начисления.Ссылка = Сотрудники.Ссылка
		|			И Начисления.Сотрудник = Сотрудники.Сотрудник
		|ГДЕ
		|	Начисления.Ссылка = &Ссылка";
			
	ПлановыеНачисления = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("ПлановыеНачисления", ПлановыеНачисления);
	
КонецПроцедуры

Процедура ДобавитьДанныеДляПроведенияЗначенияПоказателей(Запрос, ДанныеДляПроведения)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.Организация,
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	Сотрудники.ФизическоеЛицо,
	|	Сотрудники.ДатаАттестации КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА Сотрудники.ДатаОкончания > ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДОБАВИТЬКДАТЕ(Сотрудники.ДатаОкончания, ДЕНЬ, 1)
	|		ИНАЧЕ Сотрудники.ДатаОкончания
	|	КОНЕЦ КАК ДействуетДо,
	|	Показатели.Показатель,
	|	Показатели.Значение,
	|	Начисления.ДокументОснование,
	|	Начисления.Действие
	|ИЗ
	|	Документ.РезультатыАттестацииСотрудников.Показатели КАК Показатели
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРезультатыАттестацийСотрудников КАК Сотрудники
	|		ПО Показатели.Ссылка = Сотрудники.Ссылка
	|			И Показатели.Сотрудник = Сотрудники.Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РезультатыАттестацииСотрудников.Начисления КАК Начисления
	|		ПО Показатели.Ссылка = Начисления.Ссылка
	|			И Показатели.Сотрудник = Начисления.Сотрудник
	|			И Показатели.ИдентификаторСтрокиВидаРасчета = Начисления.ИдентификаторСтрокиВидаРасчета
	|ГДЕ
	|	Показатели.Ссылка = &Ссылка
	|	И Показатели.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаЗарплаты.ПустаяСсылка)";
	
	ЗначенияПоказателей = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("ЗначенияПоказателей", ЗначенияПоказателей);
	
КонецПроцедуры

Процедура ДобавитьДанныеДляПроведенияДанныеСовокупныхТарифныхСтавок(Запрос, ДанныеДляПроведения)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.ДатаАттестации КАК ДатаСобытия,
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Сотрудники.СовокупнаяТарифнаяСтавка КАК Значение,
	|	ВЫБОР
	|		КОГДА Сотрудники.СовокупнаяТарифнаяСтавка = 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСтавок.ПустаяСсылка)
	|		ИНАЧЕ Сотрудники.ВидТарифнойСтавки
	|	КОНЕЦ КАК ВидТарифнойСтавки,
	|	Сотрудники.ДатаОкончания КАК ДействуетДо
	|ИЗ
	|	ВТРезультатыАттестацийСотрудников КАК Сотрудники";
	
	ДанныеСовокупныхТарифныхСтавок = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("ДанныеСовокупныхТарифныхСтавок", ДанныеСовокупныхТарифныхСтавок);
	
КонецПроцедуры

Процедура ДобавитьДанныеДляПроведенияРазрядыКатегорииСотрудников(Запрос, ДанныеДляПроведения)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.ДатаАттестации КАК ДатаСобытия,
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	Сотрудники.Категория КАК РазрядКатегория,
	|	Сотрудники.ДатаОкончания КАК ДействуетДо
	|ИЗ
	|	ВТРезультатыАттестацийСотрудников КАК Сотрудники
	|ГДЕ
	|	Сотрудники.РезультатАттестации = &КвалификацияПодтверждена";

	РазрядыКатегорииСотрудников = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("РазрядыКатегорииСотрудников", РазрядыКатегорииСотрудников);
	
КонецПроцедуры

Процедура ДобавитьДанныеДляПроведенияПоКадровомуРезерву(ДанныеДляПроведения)
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.КадровыйРезерв") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("КадровыйРезерв");
		ДанныеКадровогоРезерва = Модуль.ДанныеКадровыйРезервДляРезультатыАттестацииСотрудников(ДанныеДляПроведения);
		ДанныеДляПроведения.Вставить("ДанныеКадровогоРезерва", ДанныеКадровогоРезерва);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьДанныеОВремениРегистрацииПлановыхНачислений(Запрос, ДанныеДляПроведения)
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сотрудники.ДатаАттестации КАК ДатаСобытия,
	|	Сотрудники.Сотрудник КАК Сотрудник
	|ИЗ
	|	ВТРезультатыАттестацийСотрудников КАК Сотрудники";

	СотрудникиДаты = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("СотрудникиДаты", СотрудникиДаты);
	
КонецПроцедуры

Функция ЭтоПодтверждениеКвалификацииПоСпециальности()
	
	Возврат АттестацииСотрудников.ТипАттестации(ВидАттестации) = Перечисления.ТипыАттестацииСотрудников.ПодтверждениеКвалификацииПоСпециальности;

КонецФункции

Процедура ОчиститьСпециальностиФизическихЛиц()
	РегистрыСведений.СпециальностиФизическихЛиц.ОчиститьСпециальностиФизическихЛиц(Ссылка);
КонецПроцедуры


Функция РеквизитыРавны(Строка0, Строка1)
	
	Возврат (Строка0.Категория=Строка1.Категория 
		И Строка0.ДатаОкончания=Строка1.ДатаОкончания
		И Строка0.РезультатАттестации=Строка1.РезультатАттестации
		И Строка0.Основание=Строка1.Основание 
		И Строка0.ДатаДокумента=Строка1.ДатаДокумента
		И Строка0.СерияДокумента=Строка1.СерияДокумента
		И Строка0.НомерДокумента=Строка1.НомерДокумента 
		И Строка0.КемВыданДокумент=Строка1.КемВыданДокумент); 
		
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли