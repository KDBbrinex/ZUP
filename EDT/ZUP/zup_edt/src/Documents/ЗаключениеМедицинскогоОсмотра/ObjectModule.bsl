#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	ЗаполнитьНаОснованииНаправления(ДанныеЗаполнения, СтандартнаяОбработка);
	ЗаполнитьПоДаннымЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ВредныеФакторы.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидыРабот");
	КонецЕсли;
	
	Если ВидыРабот.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВредныеФакторы");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьВыданноеНаправление();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ПроверитьНаличиеЗаключенийПоНаправлению(Направление);	
	
	ЗаполнитьМедицинскиеОсмотрыПоПозиции();
	ЗаполнитьМедицинскиеОсмотрыПоВреднымФакторам();
	ЗаполнитьМедицинскиеОсмотрыПоВидамРабот();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьМедицинскиеОсмотрыПоПозиции()
	
	ЗаписьНабора = Движения.МедицинскиеОсмотры.Добавить();
	ЗаписьНабора.Период = ДатаОсмотра;
	ЗаписьНабора.ФизическоеЛицо = ФизическоеЛицо;
	ЗаписьНабора.Позиция = Позиция;
	ЗаписьНабора.ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Организация);
	ЗаписьНабора.Организация = Организация;
	ЗаписьНабора.ТипОсмотра = ТипОсмотра;
	ЗаписьНабора.РезультатОсмотра = РезультатОсмотра;
	ЗаписьНабора.Направление = Направление;
	
	Движения.МедицинскиеОсмотры.Записывать = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьМедицинскиеОсмотрыПоВреднымФакторам()
	
	Для Каждого СтрокаТаблицы Из ВредныеФакторы Цикл
		ЗаписьНабора = Движения.МедицинскиеОсмотрыПоВреднымФакторам.Добавить();
		ЗаписьНабора.Период = ДатаОсмотра;
		ЗаписьНабора.ФизическоеЛицо = ФизическоеЛицо;
		ЗаписьНабора.ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Организация);
		ЗаписьНабора.ВредныйФактор = СтрокаТаблицы.ВредныйФактор;
		ЗаписьНабора.РезультатОсмотра = РезультатОсмотра;
		ЗаписьНабора.Направление = Направление;
		Движения.МедицинскиеОсмотрыПоВреднымФакторам.Записывать = Истина;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьМедицинскиеОсмотрыПоВидамРабот()
	
	Для Каждого СтрокаТаблицы Из ВидыРабот Цикл
		ЗаписьНабора = Движения.МедицинскиеОсмотрыПоВидамРабот.Добавить();
		ЗаписьНабора.Период = ДатаОсмотра;
		ЗаписьНабора.ФизическоеЛицо = ФизическоеЛицо;
		ЗаписьНабора.ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Организация);
		ЗаписьНабора.ВидРабот = СтрокаТаблицы.ВидРабот;
		ЗаписьНабора.РезультатОсмотра = РезультатОсмотра;
		ЗаписьНабора.Направление = Направление;
		Движения.МедицинскиеОсмотрыПоВидамРабот.Записывать = Истина;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьНаОснованииНаправления(НаправлениеСсылка, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(НаправлениеСсылка) <> Тип("ДокументСсылка.НаправлениеНаМедицинскийОсмотр") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НаправлениеСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьНаличиеЗаключенийПоНаправлению(НаправлениеСсылка);
	
	СтандартнаяОбработка = Ложь;
	
	НаправлениеОбъект = НаправлениеСсылка.ПолучитьОбъект();
	Организация = НаправлениеОбъект.Организация;
	ФизическоеЛицо = НаправлениеОбъект.ФизическоеЛицо;
	Позиция = НаправлениеОбъект.Позиция;
	ТипОсмотра = НаправлениеОбъект.ТипОсмотра;
	ДатаОсмотра = НаправлениеОбъект.ДатаОсмотра;
	
	Направление = НаправлениеСсылка;
	
	ВредныеФакторы.Загрузить(НаправлениеОбъект.ВредныеФакторы.Выгрузить());
	ВидыРабот.Загрузить(НаправлениеОбъект.ВидыРабот.Выгрузить());
	
	ЗаполнитьЗначенияПоУмолчанию();
	
КонецПроцедуры

Процедура ЗаполнитьПоДаннымЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	
	Если ЗначениеЗаполнено(Направление) Тогда
		ЗаполнитьНаОснованииНаправления(Направление, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияПоУмолчанию()
	
	ЗначенияПоУмолчанию = Новый Структура("Ответственный");
	ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ЗначенияПоУмолчанию);
	Ответственный = ЗначенияПоУмолчанию.Ответственный;
	
КонецПроцедуры

Процедура ОбновитьВыданноеНаправление()
	
	Если Не ЗначениеЗаполнено(Направление) Тогда
		Возврат;
	КонецЕсли;
	
	// Если документ проводится, то направление считается погашенным, запись о выданном направлении удаляем.
	// В случае записи или отмены проведения запись нужно обновить, вписав туда направление, или создать, если ее пока нет.
	
	ДанныеНаправления = РегистрыСведений.ВыданныеНаправленияНаМедицинскийОсмотр.ДанныеВыданногоНаправления(Направление);
	
	Если ДанныеНаправления.Количество() = 0 Тогда
		Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
			СоздатьЗаписьВыданногоНаправления();
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ДанныеНаправления Цикл
		НаборЗаписей = РегистрыСведений.ВыданныеНаправленияНаМедицинскийОсмотр.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ФизическоеЛицо.Установить(СтрокаТаблицы.ФизическоеЛицо);
		НаборЗаписей.Отбор.Позиция.Установить(СтрокаТаблицы.Позиция);
		НаборЗаписей.Отбор.Период.Установить(СтрокаТаблицы.Период);
		Если ДополнительныеСвойства.РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда
			СтрокаНабора = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаТаблицы);
			СтрокаНабора.ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Организация);
			СтрокаНабора.Направление = Направление;
			СтрокаНабора.Заключение = Ссылка;
		КонецЕсли;
		НаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьЗаписьВыданногоНаправления()
	
	НаборЗаписей = РегистрыСведений.ВыданныеНаправленияНаМедицинскийОсмотр.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
	НаборЗаписей.Отбор.Позиция.Установить(Позиция);
	НаборЗаписей.Отбор.Период.Установить(ДатаОсмотра);
	СтрокаНабора = НаборЗаписей.Добавить();
	СтрокаНабора.ФизическоеЛицо = ФизическоеЛицо;
	СтрокаНабора.Позиция = Позиция;
	СтрокаНабора.ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Организация);
	СтрокаНабора.Период = ДатаОсмотра;
	СтрокаНабора.Направление = Направление;
	СтрокаНабора.Заключение = Ссылка;
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ПроверитьНаличиеЗаключенийПоНаправлению(НаправлениеСсылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Направление", НаправлениеСсылка);
	Запрос.УстановитьПараметр("Заключение", Ссылка);
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Заключения.Ссылка КАК Заключение
		|ИЗ
		|	Документ.ЗаключениеМедицинскогоОсмотра КАК Заключения
		|ГДЕ
		|	Заключения.Направление = &Направление
		|	И Заключения.Проведен
		|	И Заключения.Ссылка <> &Заключение";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'На основании документа %1 уже проведен документ %2'"),
		НаправлениеСсылка,
		Выборка.Заключение);
		
	ВызватьИсключение ТекстСообщения;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли