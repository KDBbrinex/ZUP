#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступом.ЗаполнитьНаборыЗначенийДоступа.
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизации(ЭтотОбъект, Таблица, "Организация");
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	КонтейнерОшибок = Неопределено;
	ПроверитьСтрокиРасчетыПоПолучателям(КонтейнерОшибок);
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(КонтейнерОшибок, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	Для Каждого Строка Из ДанныеДляПроведения.РасчетыПоПолучателям Цикл
		Движения.РасчетыСБюджетомПоНДФЛ.Записывать = Истина;
		НоваяСтрока = Движения.РасчетыСБюджетомПоНДФЛ.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	
	Движения.РасчетыСБюджетомПоНДФЛ.ДополнительныеСвойства.Вставить("ВводОстатков", Истина);
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции


Функция ПроверитьСтрокиРасчетыПоПолучателям(КонтейнерОшибок)
	
	// Проверяем, что остатки по организации еще не введены.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСБюджетомПоНДФЛ.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.РасчетыСБюджетомПоНДФЛ КАК РасчетыСБюджетомПоНДФЛ
	|ГДЕ
	|	РасчетыСБюджетомПоНДФЛ.Организация = &Организация
	|	И РасчетыСБюджетомПоНДФЛ.Регистратор <> &ИсключаемыйРегистратор
	|	И РасчетыСБюджетомПоНДФЛ.ВводОстатков";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = НСтр("ru = 'По организации %1 уже введены остатки расчетов с бюджетом по НДФЛ документом %2.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ТекстСообщения,
					Организация, Выборка.Регистратор);
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.Организация", ТекстСообщения, "",,,);
		
	КонецЦикла;
	
КонецФункции

Функция ДанныеДляПроведения()

	ДанныеДляПроведения = Новый Структура();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаОперации", ДатаОстатков);
	Запрос.УстановитьПараметр("Период", ДатаОстатков - 86400);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(&Период, ДЕНЬ) КАК Период,
	|	&Организация КАК Организация,
	|	РасчетыПоПолучателям.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ЕСТЬNULL(РаспределениеПоСтатьям.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) КАК СтатьяФинансирования,
	|	ЕСТЬNULL(РаспределениеПоСтатьям.СтатьяРасходов, ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)) КАК СтатьяРасходов,
	|	ЕСТЬNULL(РаспределениеПоСтатьям.Результат, РасчетыПоПолучателям.Сумма) КАК Сумма,
	|	&ДатаОперации КАК ДатаОперации,
	|	ИСТИНА КАК ВводОстатков
	|ИЗ
	|	Документ.НачальныеРасчетыСБюджетомПоНДФЛ.РасчетыПоПолучателям КАК РасчетыПоПолучателям
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачальныеРасчетыСБюджетомПоНДФЛ.РаспределениеПоСтатьям КАК РаспределениеПоСтатьям
	|		ПО РасчетыПоПолучателям.ИдентификаторСтроки = РаспределениеПоСтатьям.ИдентификаторСтроки
	|			И РасчетыПоПолучателям.Ссылка = РаспределениеПоСтатьям.Ссылка
	|ГДЕ
	|	РасчетыПоПолучателям.Ссылка = &Регистратор";
	ДанныеДляПроведения.Вставить("РасчетыПоПолучателям", Запрос.Выполнить().Выгрузить());
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

#КонецОбласти

	
#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли