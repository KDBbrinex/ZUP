
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("РегистрацияВНалоговомОргане", 	РегистрацияВНалоговомОргане);
	Параметры.Свойство("РаспределяемаяСумма", 			РаспределяемаяСумма);
	Параметры.Свойство("ПроверяемыеПоляРаспределения", 	ПроверяемыеПоляРаспределения);
	
	Если Параметры.РаспределениеПоСтатьям <> Неопределено Тогда
		Для каждого СтрокаРаспределения Из Параметры.РаспределениеПоСтатьям Цикл
			ЗаполнитьЗначенияСвойств(РаспределениеПоСтатьям.Добавить(), СтрокаРаспределения);
		КонецЦикла;
	КонецЕсли;
	
	ИтогРаспределения = РаспределениеПоСтатьям.Итог("Результат");

КонецПроцедуры


&НаКлиенте
Процедура РаспределениеПоСтатьямПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ИтогРаспределения = РаспределениеПоСтатьям.Итог("Результат");

КонецПроцедуры


#КонецОбласти


#Область ОбработчикиКомандФормы


&НаКлиенте
Процедура ОК(Команда)
	
	ЗавершитьРедактирование();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗавершитьРедактирование()
	
	Отказ = Ложь;
	
	Если Модифицированность Тогда
		
		Если Не ПроверитьЗаполнение() Тогда
			Отказ = Истина;
		Иначе
			РезультатРаспределения = РезультатРаспределения();
			Модифицированность = Ложь;
		КонецЕсли;
		
	Иначе
		РезультатРаспределения = Неопределено;
	КонецЕсли;
	
	Если Не Отказ Тогда
		Закрыть(РезультатРаспределения);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция РезультатРаспределения()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеРаспределения   = РаспределениеПоСтатьям.Выгрузить();
	ОтражениеЗарплатыВБухучетеРасширенный.ДополнитьТаблицуРаспределенияКодомСтатьиФинансирования(ДанныеРаспределения);
	
	Описание = Новый Структура;
	Описание.Вставить("РаспределениеПоСтатьям", ЗарплатаКадрыРасширенный.ТаблицаЗначенийВСтруктуру(ДанныеРаспределения));
	
	Возврат Описание;

КонецФункции

&НаСервере
Функция ОписанияПроверяемыхКолонок()
	
	ОписаниеКолонок = Новый Соответствие;
	
	РеквизитыТаблицы = ПолучитьРеквизиты("РаспределениеПоСтатьям");
	Для каждого РеквизитТаблицы Из РеквизитыТаблицы Цикл
		ОписаниеКолонок.Вставить(РеквизитТаблицы.Имя, РеквизитТаблицы.Заголовок); 
	КонецЦикла;
	
	Возврат ОписаниеКолонок;
	
КонецФункции

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ОписаниеКолонок = ОписанияПроверяемыхКолонок();
	
	НомерСтроки = 0;
	Для каждого СтрокаРаспределения Из РаспределениеПоСтатьям Цикл
		
		Для Каждого КлючИЗначение Из ПроверяемыеПоляРаспределения Цикл
			
			Если КлючИЗначение.Значение И Не ЗначениеЗаполнено(СтрокаРаспределения[КлючИЗначение.Ключ]) Тогда
				
				ЗаголовокКолонки = ОписаниеКолонок[КлючИЗначение.Ключ];
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Поле ""%1"" не заполнено'"),
					ЗаголовокКолонки);
				
				ОбщегоНазначения.СообщитьПользователю(
					ТекстСообщения,
					,
					"РаспределениеПоСтатьям[" + НомерСтроки + "]." + ОписаниеКолонок[КлючИЗначение.Ключ],
					,
					Отказ);
				
			КонецЕсли;
			
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		
	КонецЦикла;

	НомерСтроки = ?(НомерСтроки = 0,0,НомерСтроки-1);
	
	Если ИтогРаспределения <> РаспределяемаяСумма Тогда
		
		ТекстСообщения = НСтр("ru='Сумма распределения по статям не равна сумме расчетов с бюджетом.'");
			ОбщегоНазначения.СообщитьПользователю(
			ТекстСообщения,
			,
			"РаспределениеПоСтатьям[" + НомерСтроки + "].Результат",
			,
			Отказ);
			
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


