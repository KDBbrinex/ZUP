#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// регистр РасходыНаИсточникиИнформацииОКандидатах 
	Движения.РасходыНаИсточникиИнформацииОКандидатах.Записывать = Истина;
	Движение = Движения.РасходыНаИсточникиИнформацииОКандидатах.Добавить();
	Движение.Период = НачалоПериодаОказанияУслуги;
	Движение.Источник = Источник;
	Движение.Сумма = Сумма;
	Движение.Организация = Организация;

	// регистр ОплатаПубликацийВакансий
	Движения.ОплатаПубликацийВакансий.Записывать = Истина;
	Для Каждого ТекСтрокаВакансии Из Вакансии Цикл
		Движение = Движения.ОплатаПубликацийВакансий.Добавить();
		Движение.ДокументОснование = Ссылка;
		Движение.НачалоПериодаОказанияУслуги = НачалоПериодаОказанияУслуги;
		Движение.Источник = Источник;
		Движение.Вакансия = ТекСтрокаВакансии.Вакансия;
		Движение.Организация = Организация;
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("СправочникСсылка.ИсточникиИнформацииОКандидатах") Тогда
		
		Источник = ДанныеЗаполнения.Ссылка;
		
	ИначеЕсли ТипОснования = Тип("СправочникСсылка.Вакансии") Тогда
		
		МассивВакансий = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеЗаполнения);
		ЗаполнитьПоВакансиям(МассивВакансий);
		
	ИначеЕсли ТипОснования = Тип("Структура") И ДанныеЗаполнения.Свойство("МассивВакансий") Тогда 
		
		МассивВакансий = ДанныеЗаполнения.МассивВакансий;
		ЗаполнитьПоВакансиям(МассивВакансий);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если Вакансии.Количество() Тогда
		КраткийСоставДокумента = СтрСоединить(Вакансии.ВыгрузитьКолонку("Вакансия"), "; ");
	Иначе
		КраткийСоставДокумента = НСтр("ru = 'По всем вакансиям'");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверитьДублиВакансий(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьДублиВакансий(Отказ)
	
	НайденныеВакансии = Новый Соответствие;
	ДублиВакансий = Новый Соответствие;
	Для Каждого СтрокаТаблицы Из Вакансии Цикл
		Если НайденныеВакансии[СтрокаТаблицы.Вакансия] = Неопределено Тогда
			НайденныеВакансии.Вставить(СтрокаТаблицы.Вакансия, Истина);
			Продолжить;
		КонецЕсли;
		Если ДублиВакансий[СтрокаТаблицы.Вакансия] = Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Вакансия %1 встречается в таблице более одного раза.'"), 
				СтрокаТаблицы.Вакансия);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , "ЭтотОбъект.Вакансии", Отказ);
			ДублиВакансий.Вставить(СтрокаТаблицы.Вакансия, Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоВакансиям(МассивВакансий)
	
	Если МассивВакансий.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицуИзМассива(Вакансии, МассивВакансий, "Вакансия");
	
	ДанныеПервойВакансии = Справочники.Вакансии.ДанныеВакансии(МассивВакансий[0]);
	Организация = ДанныеПервойВакансии.Организация;

КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли