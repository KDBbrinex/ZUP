#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "НаправлениеНаМедицинскийОсмотр";
	КомандаПечати.Представление = НСтр("ru = 'Направление на медицинский осмотр'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр).
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Печать направления
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "НаправлениеНаМедицинскийОсмотр");
	Если ПечатнаяФорма <> Неопределено Тогда
		// имена файлов
		ИменаФайлов = Новый Соответствие;
		Шаблон = НСтр("ru = 'Направление на медосмотр [ФизическоеЛицо] - [Организация] (№[Номер] от [Дата])'");
		ЗначенияРеквизитовДокументов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивОбъектов, "Организация,ФизическоеЛицо,Номер,Дата,Ссылка");
		Для Каждого Ссылка Из МассивОбъектов Цикл
			РеквизитыДокумента = ЗначенияРеквизитовДокументов[Ссылка];
			РеквизитыДокумента.ФизическоеЛицо = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(Строка(РеквизитыДокумента.ФизическоеЛицо));
			РеквизитыДокумента.Дата = Формат(РеквизитыДокумента.Дата, "ДЛФ=D");
			РеквизитыДокумента.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.Номер);
			ИмяФайла = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(Шаблон, ЗначенияРеквизитовДокументов[Ссылка]);
			ИменаФайлов.Вставить(Ссылка, ИмяФайла);
		КонецЦикла;
		
		// описание печатной формы
		ПечатнаяФорма.ТабличныйДокумент = ПечатьНаправленияНаМедицинскийОсмотр(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Направление на медицинский осмотр'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.НаправлениеНаМедицинскийОсмотр.ПФ_MXL_НаправлениеНаМедицинскийОсмотр";
		ПечатнаяФорма.ИмяФайлаПечатнойФормы = ИменаФайлов;
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли
	
#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Дата");
	Поля.Добавить("Номер");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	МедицинскиеОсмотрыКлиентСервер.ЗаполнитьПредставлениеДокумента(Данные, Представление, НСтр("ru = 'Направление'"));
	
КонецПроцедуры
	
#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
//
Функция ОписаниеСоставаОбъекта() Экспорт
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаФизическоеЛицоВШапке("ФизическоеЛицо", "");
КонецФункции

Функция ОписаниеПодписейДокумента() Экспорт 

	ОписаниеПодписей = ПодписиДокументов.ОписаниеТаблицыПодписей();
	
	ОписаниеПодписи = ПодписиДокументов.ОписаниеРеквизитовПодписанта();
	ОписаниеПодписи.ФизическоеЛицо = "СпециалистПоОхранеТруда";
	ОписаниеПодписи.Должность = "ДолжностьСпециалистаПоОхранеТруда";
	ОписаниеПодписи.ОснованиеПодписи = "ОснованиеПодписиСпециалистаПоОхранеТруда";
	
	ПереопределяемыеИмена = Новый Соответствие;
	ПереопределяемыеИмена.Вставить("ОтветственныйЗаОхрануТруда", ОписаниеПодписи);

	РолиОтветственных = "Руководитель, ОтветственныйЗаОхрануТруда";
	ПодписиДокументов.ДобавитьОписаниеПодписейОрганизации(ОписаниеПодписей, РолиОтветственных, ПереопределяемыеИмена);
	
	Возврат ОписаниеПодписей;

КонецФункции

Функция ДанныеНаправления(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Направление.Ссылка КАК Ссылка,
		|	Направление.Номер КАК Номер,
		|	Направление.Дата КАК Дата,
		|	Направление.Проведен КАК Проведен,
		|	Направление.Организация КАК Организация,
		|	Направление.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Направление.Позиция КАК Позиция,
		|	Направление.ДатаОсмотра КАК ДатаОсмотра,
		|	Направление.ТипОсмотра КАК ТипОсмотра,
		|	Направление.Ответственный КАК Ответственный,
		|	Направление.Комментарий КАК Комментарий
		|ИЗ
		|	Документ.НаправлениеНаМедицинскийОсмотр КАК Направление
		|ГДЕ
		|	Направление.Ссылка = &Ссылка";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(РезультатЗапроса.Выгрузить()[0]);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОписаниеДляЗаполнения() Экспорт
	
	Описание = Новый Структура(
		"Организация,
		|ТипОсмотра,
		|МедицинскаяОрганизация,
		|ДатаОсмотра,
		|ФизическоеЛицо,
		|Позиция");
	
	Возврат Описание;
	
КонецФункции

#Область ПечатьНаправления

// Процедура печати направления.
//
Функция ПечатьНаправленияНаМедицинскийОсмотр(Направления, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_НаправлениеНаМедицинскийОсмотр";
	
	ИмяМакета = "НаправлениеНаМедицинскийОсмотр";
	
	ОбластиМакета = Новый Структура;
	ОбластиМакета.Вставить("Организация");
	ОбластиМакета.Вставить("Заголовок");
	ОбластиМакета.Вставить("НомерДата");
	ОбластиМакета.Вставить("МедицинскаяОрганизация");
	ОбластиМакета.Вставить("ФизическоеЛицо");
	ОбластиМакета.Вставить("ПоступающийРаботающий");
	ОбластиМакета.Вставить("МестоРаботы");
	ОбластиМакета.Вставить("ВредныеФакторы");
	ОбластиМакета.Вставить("Подпись");
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.НаправлениеНаМедицинскийОсмотр.ПФ_MXL_НаправлениеНаМедицинскийОсмотр");
	
	ДанныеДляПечати = ДанныеПечатиНаправлений(Направления);
	
	// Вывод форм для субъектов.
	ПервыйДокумент = Истина;
	Для Каждого ОписаниеНаправления Из ДанныеДляПечати Цикл
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		// Формируем печатную форму направления.
		НаправлениеФорма = Новый ТабличныйДокумент;
		Для Каждого КлючИЗначение Из ОбластиМакета Цикл
			ИмяОбласти = КлючИЗначение.Ключ;
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
			ОбластьМакета.Параметры.Заполнить(ОписаниеНаправления);
			НаправлениеФорма.Вывести(ОбластьМакета);
		КонецЦикла;
		ТабличныйДокумент.Вывести(НаправлениеФорма);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ОписаниеНаправления.ДокументСсылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ДанныеПечатиНаправлений(Направления)
	
	ДанныеПечати = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Направления", Направления);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Направление.Ссылка КАК ДокументСсылка,
		|	Направление.Номер КАК Номер,
		|	Направление.Дата КАК Дата,
		|	Направление.Организация КАК Организация,
		|	Направление.Организация.ИНН КАК ОрганизацияИНН,
		|	Направление.Организация.ОГРН КАК ОрганизацияОГРН,
		|	Направление.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Направление.ФизическоеЛицо.ФИО КАК ФизическоеЛицоФИО,
		|	Направление.ДатаРождения КАК ДатаРождения,
		|	Направление.Позиция КАК Позиция,
		|	Направление.МедицинскаяОрганизация КАК МедицинскаяОрганизация,
		|	Направление.МедицинскаяОрганизация.Наименование КАК МедицинскаяОрганизацияНаименование,
		|	Направление.МедицинскаяОрганизация.ОГРН КАК МедицинскаяОрганизацияОГРН,
		|	Направление.МедицинскаяОрганизация.Адрес КАК МедицинскаяОрганизацияАдрес,
		|	Направление.Подразделение КАК Подразделение,
		|	Направление.Должность КАК Должность,
		|	Направление.ТипОсмотра КАК ТипОсмотра,
		|	Направление.ДолжностьСпециалистаПоОхранеТруда КАК ОтветственныйДолжность,
		|	Направление.СпециалистПоОхранеТруда.Фамилия КАК ОтветственныйФамилия,
		|	Направление.СпециалистПоОхранеТруда.Имя КАК ОтветственныйИмя,
		|	Направление.СпециалистПоОхранеТруда.Отчество КАК ОтветственныйОтчество,
		|	Направление.СпециалистПоОхранеТруда.Инициалы КАК ОтветственныйИнициалы,
		|	ВЫБОР
		|		КОГДА ИСТИНА В
		|				(ВЫБРАТЬ ПЕРВЫЕ 1
		|					ИСТИНА
		|				ИЗ
		|					Документ.НаправлениеНаМедицинскийОсмотр.ВредныеФакторы КАК ВредныеФакторы
		|				ГДЕ
		|					ВредныеФакторы.Ссылка = Направление.Ссылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьВредныеФакторы,
		|	ВЫБОР
		|		КОГДА ИСТИНА В
		|				(ВЫБРАТЬ ПЕРВЫЕ 1
		|					ИСТИНА
		|				ИЗ
		|					Документ.НаправлениеНаМедицинскийОсмотр.ВидыРабот КАК ВидыРабот
		|				ГДЕ
		|					ВидыРабот.Ссылка = Направление.Ссылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьВидыРабот
		|ИЗ
		|	Документ.НаправлениеНаМедицинскийОсмотр КАК Направление
		|ГДЕ
		|	Направление.Ссылка В(&Направления)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВредныеФакторы.Ссылка КАК ДокументСсылка,
		|	ВредныеФакторы.НомерСтроки КАК НомерСтроки,
		|	ВредныеФакторы.ВредныйФактор КАК ВредныйФактор
		|ИЗ
		|	Документ.НаправлениеНаМедицинскийОсмотр.ВредныеФакторы КАК ВредныеФакторы
		|ГДЕ
		|	ВредныеФакторы.Ссылка В(&Направления)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДокументСсылка,
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыРабот.Ссылка КАК ДокументСсылка,
		|	ВидыРабот.НомерСтроки КАК НомерСтроки,
		|	ВидыРабот.ВидРабот КАК ВидРабот
		|ИЗ
		|	Документ.НаправлениеНаМедицинскийОсмотр.ВидыРабот КАК ВидыРабот
		|ГДЕ
		|	ВидыРабот.Ссылка В(&Направления)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДокументСсылка,
		|	НомерСтроки";
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаВредныхФакторов = РезультатыЗапроса[1].Выбрать();
	ВыборкаВидовРабот = РезультатыЗапроса[2].Выбрать();
	
	ВыборкаНаправлений = РезультатыЗапроса[0].Выбрать();
	Пока ВыборкаНаправлений.Следующий() Цикл
		Описание = ОписаниеДляПечати();
		ЗаполнитьОписаниеНаправления(Описание, ВыборкаНаправлений, ВыборкаВредныхФакторов, ВыборкаВидовРабот);
		ДанныеПечати.Добавить(Описание);
	КонецЦикла;
	
	Возврат ДанныеПечати;
	
КонецФункции

Функция ОписаниеДляПечати()
	
	Описание = Новый Структура(
		"ДокументСсылка,
		|ТипОсмотра,
		|Дата,
		|Номер,
		|ОрганизацияПредставление,
		|ФормаСобственностиПредставление,
		|ОКВЭДПредставление,
		|МедицинскаяОрганизацияПредставление,
		|ФизическоеЛицоФИО,
		|ДатаРожденияПредставление,
		|ПоступающийРаботающий,
		|ПодразделениеПредставление,
		|ДолжностьПредставление,
		|ВредныеФакторыПредставление,
		|ВидыРаботПредставление,
		|ОтветственныйДолжностьПредставление,
		|ОтветственныйФИО");
	Описание.ВредныеФакторыПредставление = "";
	Описание.ВидыРаботПредставление = "";
	
	Возврат Описание;
	
КонецФункции

Процедура ЗаполнитьОписаниеНаправления(Описание, ВыборкаНаправлений, ВыборкаВредныхФакторов, ВыборкаВидовРабот)
	
	ЗаполнитьЗначенияСвойств(Описание, ВыборкаНаправлений);
	
	Описание.ТипОсмотра = НРег(ВыборкаНаправлений.ТипОсмотра);
	Описание.Дата = Формат(ВыборкаНаправлений.Дата, "ДЛФ=D");
	Описание.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаНаправлений.Номер);
	
	ЗаполнитьРеквизитыОрганизации(ВыборкаНаправлений.Организация, Описание);
	ЗаполнитьПредставлениеМедицинскойОрганизации(ВыборкаНаправлений, Описание.МедицинскаяОрганизацияПредставление);
	
	Описание.ФизическоеЛицоФИО = ВыборкаНаправлений.ФизическоеЛицоФИО;
	Описание.ДатаРожденияПредставление = Формат(ВыборкаНаправлений.ДатаРождения, "ДЛФ=D");
	
	Описание.ПоступающийРаботающий = НСтр("ru = 'Работающий'");
	Если ВыборкаНаправлений.ТипОсмотра = Перечисления.ТипыМедицинскогоОсмотра.Предварительный Тогда
		Описание.ПоступающийРаботающий = НСтр("ru = 'Поступающий на работу'");
	КонецЕсли;
	
	Описание.ПодразделениеПредставление = Строка(ВыборкаНаправлений.Подразделение);
	Описание.ДолжностьПредставление = Строка(ВыборкаНаправлений.Должность);
	
	Описание.ОтветственныйДолжностьПредставление = Строка(ВыборкаНаправлений.ОтветственныйДолжность);
	Если ЗначениеЗаполнено(ВыборкаНаправлений.ОтветственныйФамилия) Тогда
		СтруктураФИО = Новый Структура;
		СтруктураФИО.Вставить("Фамилия", ВыборкаНаправлений.ОтветственныйФамилия);
		СтруктураФИО.Вставить("Имя", ВыборкаНаправлений.ОтветственныйИмя);
		СтруктураФИО.Вставить("Отчество", ВыборкаНаправлений.ОтветственныйОтчество);
		СтруктураФИО.Вставить("Инициалы", ВыборкаНаправлений.ОтветственныйИнициалы);
		Описание.ОтветственныйФИО = ФизическиеЛицаЗарплатаКадрыКлиентСервер.ФамилияИнициалы(СтруктураФИО);
	КонецЕсли;
	
	Если ВыборкаНаправлений.ЕстьВредныеФакторы Тогда
		Пока ВыборкаВредныхФакторов.НайтиСледующий(ВыборкаНаправлений.ДокументСсылка, "ДокументСсылка") Цикл
			Описание.ВредныеФакторыПредставление = Описание.ВредныеФакторыПредставление + Строка(ВыборкаВредныхФакторов.ВредныйФактор) + Символы.ПС;
		КонецЦикла;
	КонецЕсли;
	
	Если ВыборкаНаправлений.ЕстьВидыРабот Тогда
		Пока ВыборкаВидовРабот.НайтиСледующий(ВыборкаНаправлений.ДокументСсылка, "ДокументСсылка") Цикл
			Описание.ВидыРаботПредставление = Описание.ВидыРаботПредставление + Строка(ВыборкаВидовРабот.ВидРабот) + Символы.ПС;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыОрганизации(Организация, Описание)
	
	СписокПоказателей = Новый Массив;
	СписокПоказателей.Добавить("НаимЮЛПол");

	СписокПоказателей.Добавить("ИННЮЛ");
	СписокПоказателей.Добавить("ОГРН");
	СписокПоказателей.Добавить("ПолныйАдрЮР");
	СписокПоказателей.Добавить("ТелОрганизации");
	СписокПоказателей.Добавить("ФаксОрганизации");
	СписокПоказателей.Добавить("АдресЭлектроннойПочтыОрганизации");

	СписокПоказателей.Добавить("ОКФС");
	СписокПоказателей.Добавить("НаименованиеОКФС");
	
	СписокПоказателей.Добавить("ОКВЭД");
	СписокПоказателей.Добавить("ОснВидДеят");
	СписокПоказателей.Добавить("ОКВЭД2");
	СписокПоказателей.Добавить("ОснВидДеят2");

	УстановитьПривилегированныйРежим(Истина);
	СведенияОрганизации = ЗарплатаКадры.ПолучитьСведенияОбОрганизации(Организация, ТекущаяДатаСеанса(), СписокПоказателей);
	УстановитьПривилегированныйРежим(Ложь);
	
	ЗаполнитьПредставлениеОрганизации(СведенияОрганизации, Описание.ОрганизацияПредставление);
	ЗаполнитьОКВЭДОрганизации(СведенияОрганизации, Описание.ОКВЭДПредставление);
	
КонецПроцедуры

Процедура ЗаполнитьПредставлениеОрганизации(СведенияОрганизации, Представление)
	
	Представление = "";
	
	Если ЗначениеЗаполнено(СведенияОрганизации.ИННЮЛ) Тогда
		Представление = Представление + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИНН %1,'"), СведенияОрганизации.ИННЮЛ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СведенияОрганизации.ОГРН) Тогда
		Если Не ПустаяСтрока(Представление) Тогда
			Представление = Представление + Символы.НПП;
		КонецЕсли;
		Представление = Представление + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ОГРН %1,'"), СведенияОрганизации.ОГРН);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтрЗаменить(СведенияОрганизации.ПолныйАдрЮР, ",", "")) Тогда
		Если Не ПустаяСтрока(Представление) Тогда
			Представление = Представление + Символы.ПС;
		КонецЕсли;
		Представление = Представление + СведенияОрганизации.ПолныйАдрЮР + ",";
		Если ЗначениеЗаполнено(СведенияОрганизации.ТелОрганизации) Тогда
			Если Не ПустаяСтрока(Представление) Тогда
				Представление = Представление + " ";
			КонецЕсли;
			СведенияОрганизации.ТелОрганизации = СтрЗаменить(СведенияОрганизации.ТелОрганизации, " ", Символы.НПП);
			Представление = Представление + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'тел.%2%1,'"), СведенияОрганизации.ТелОрганизации, Символы.НПП);
		КонецЕсли;
		Если ЗначениеЗаполнено(СведенияОрганизации.ФаксОрганизации) Тогда
			Если Не ПустаяСтрока(Представление) Тогда
				Представление = Представление + " ";
			КонецЕсли;
			СведенияОрганизации.ФаксОрганизации = СтрЗаменить(СведенияОрганизации.ФаксОрганизации, " ", Символы.НПП);
			Представление = Представление + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'факс%2%1,'"), СведенияОрганизации.ФаксОрганизации, Символы.НПП);
		КонецЕсли;
		Если ЗначениеЗаполнено(СведенияОрганизации.АдресЭлектроннойПочтыОрганизации) Тогда
			Если Не ПустаяСтрока(Представление) Тогда
				Представление = Представление + " ";
			КонецЕсли;
			Представление = Представление + СведенияОрганизации.АдресЭлектроннойПочтыОрганизации + ",";
		КонецЕсли;
		Если Прав(Представление, 1) = "," Тогда
			СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(Представление);
		КонецЕсли;
	КонецЕсли;
	
	Представление = СведенияОрганизации.НаимЮЛПол + Символы.ПС + Представление;
	
КонецПроцедуры

Процедура ЗаполнитьОКВЭДОрганизации(СведенияОрганизации, Представление)
	
	Представление = "";
	
	Если ЗначениеЗаполнено(СведенияОрганизации.ОКФС) Тогда
		Представление = Представление + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Форма собственности %1'"), 
			СведенияОрганизации.ОКФС);
		Если ЗначениеЗаполнено(СведенияОрганизации.НаименованиеОКФС) Тогда
			Представление = Представление + ", " + СведенияОрганизации.НаименованиеОКФС;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СведенияОрганизации.ОКВЭД) Тогда
		Если Не ПустаяСтрока(Представление) Тогда
			Представление = Представление + Символы.ПС;
		КонецЕсли;
		Представление = Представление + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ОКВЭД %1'"), СведенияОрганизации.ОКВЭД);
		Если ЗначениеЗаполнено(СведенияОрганизации.ОснВидДеят) Тогда
			Представление = Представление + ", " + СведенияОрганизации.ОснВидДеят;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СведенияОрганизации.ОКВЭД2) Тогда
		Если Не ПустаяСтрока(Представление) Тогда
			Представление = Представление + Символы.ПС;
		КонецЕсли;
		Представление = Представление + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ОКВЭД %1'"), СведенияОрганизации.ОКВЭД2);
		Если ЗначениеЗаполнено(СведенияОрганизации.ОснВидДеят2) Тогда
			Представление = Представление + ", " + СведенияОрганизации.ОснВидДеят2;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПредставлениеМедицинскойОрганизации(Выборка, Представление)
	
	Представление = Выборка.МедицинскаяОрганизацияНаименование;
	
	Если ЗначениеЗаполнено(Выборка.МедицинскаяОрганизацияАдрес) Тогда
		Представление = Представление + ", " + Выборка.МедицинскаяОрганизацияАдрес;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.МедицинскаяОрганизацияАдрес) Тогда
		Представление = Представление + ", " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'ОГРН%2%1'"),
			Выборка.МедицинскаяОрганизацияОГРН,
			Символы.НПП);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
