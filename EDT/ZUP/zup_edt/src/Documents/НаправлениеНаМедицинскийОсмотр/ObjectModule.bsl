#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	ЗаполнитьПоРешениюОПриемеНаРаботу(ДанныеЗаполнения, СтандартнаяОбработка);
	ЗаполнитьПоРешениюОКадровомПереводе(ДанныеЗаполнения, СтандартнаяОбработка);
	ЗаполнитьПоОписаниюДляЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если МедицинскиеОсмотры.ЕстьЗаключениеПоНаправлению(Ссылка) Тогда
		ТекстСообщения = НСтр("ru = 'По данному направлению уже проведено заключение медицинского осмотра'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
	КонецЕсли;
	
	Если ВредныеФакторы.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидыРабот");
	КонецЕсли;
	
	Если ВидыРабот.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВредныеФакторы");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	МедицинскиеОсмотрыФормы.УдалитьДублиФакторовВидовРабот(ВредныеФакторы, "ВредныйФактор");
	МедицинскиеОсмотрыФормы.УдалитьДублиФакторовВидовРабот(ВидыРабот, "ВидРабот");
	
	ДанныеПозиции = Справочники.ШтатноеРасписание.ДанныеПозицииШтатногоРасписания(Позиция);
	Подразделение = ДанныеПозиции.Подразделение;
	Должность = ДанныеПозиции.Должность;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьВыданноеНаправление();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьВредныеФакторыВидыРабот() Экспорт
	
	Если Не ЗначениеЗаполнено(Позиция) Или Не ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		Возврат;
	КонецЕсли;
	
	ВредныеФакторыТаблица = МедицинскиеОсмотры.ВредныеФакторыТребующиеОсмотра(ФизическоеЛицо, Позиция, Дата);
	ВредныеФакторы.Загрузить(ВредныеФакторыТаблица);
	
	ВидыРаботТаблица = МедицинскиеОсмотры.ВидыРаботТребующиеОсмотра(ФизическоеЛицо, Позиция, Дата);
	ВидыРабот.Загрузить(ВидыРаботТаблица);
	
КонецПроцедуры

Процедура ЗаполнитьДатуРожденияФизическогоЛица() Экспорт
	
	ДатаРождения = Неопределено;
	
	Если Не ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		Возврат;
	КонецЕсли;
	
	ФизическиеЛица = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо);
	КадровыеДанные = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, ФизическиеЛица, "ДатаРождения");
	
	Если КадровыеДанные.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДатаРождения = КадровыеДанные[0]["ДатаРождения"];
	
КонецПроцедуры

Процедура ЗаполнитьПозицию() Экспорт
	
	Позиция = Неопределено;
	
	Если Не ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗапроса = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыЗапроса.КадровыеДанные = "ДолжностьПоШтатномуРасписанию";
	ПараметрыЗапроса.Организация = Организация;
	ПараметрыЗапроса.СписокФизическихЛиц = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо);
	
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыЗапроса.Отборы, "ОформленПоТрудовомуДоговору", "=", Истина);
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыЗапроса.Отборы, "ДатаУвольнения", "<", ТекущаяДатаСеанса());
	
	КадровыеДанные = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыЗапроса);
	Если КадровыеДанные.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Позиция = КадровыеДанные[0].ДолжностьПоШтатномуРасписанию;
	
	ЗаполнитьВредныеФакторыВидыРабот();
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияПоУмолчанию()
	
	ЗначенияПоУмолчанию = Новый Структура("Ответственный");
	ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ЗначенияПоУмолчанию);
	Ответственный = ЗначенияПоУмолчанию.Ответственный;
	
КонецПроцедуры

Процедура ЗаполнитьПоРешениюОПриемеНаРаботу(ДокументОснование, СтандартнаяОбработка)
	
	Если ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.РешениеОПриемеНаРаботу") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеРешения = Документы.РешениеОПриемеНаРаботу.ДанныеОПриемеНаРаботу(ДокументОснование);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеРешения);
	ТипОсмотра = Перечисления.ТипыМедицинскогоОсмотра.Предварительный;
	
	ЗаполнитьДатуРожденияФизическогоЛица();
	ЗаполнитьВредныеФакторыВидыРабот();
	ЗаполнитьЗначенияПоУмолчанию();
	
КонецПроцедуры

Процедура ЗаполнитьПоРешениюОКадровомПереводе(ДокументОснование, СтандартнаяОбработка)
	
	Если ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.РешениеОКадровомПереводе") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеРешения = Документы.РешениеОКадровомПереводе.ДанныеОПереводе(ДокументОснование);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеРешения);
	ТипОсмотра = Перечисления.ТипыМедицинскогоОсмотра.Внеплановый;
	
	ЗаполнитьДатуРожденияФизическогоЛица();
	ЗаполнитьВредныеФакторыВидыРабот();
	ЗаполнитьЗначенияПоУмолчанию();
	
КонецПроцедуры

Процедура ЗаписатьВыданноеНаправление()
	
	// Определим предыдущее состояние регистра по этому направлению.
	ДанныеНаправления = РегистрыСведений.ВыданныеНаправленияНаМедицинскийОсмотр.ДанныеВыданногоНаправления(Ссылка);
	
	// Удаляем прежние данные.
	Для Каждого Выборка Из ДанныеНаправления Цикл
		НаборЗаписей = РегистрыСведений.ВыданныеНаправленияНаМедицинскийОсмотр.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ФизическоеЛицо.Установить(Выборка.ФизическоеЛицо);
		НаборЗаписей.Отбор.Позиция.Установить(Выборка.Позиция);
		НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
		НаборЗаписей.Записать();
	КонецЦикла;
	
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	// Создаем новую запись о выданном направлении.
	ДатаЗаписи = ДатаОсмотра;
	Если Не ЗначениеЗаполнено(ДатаЗаписи) Тогда
		ДатаЗаписи = Дата;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ФизическоеЛицо) 
		Или Не ЗначениеЗаполнено(Позиция) 
		Или Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ВыданныеНаправленияНаМедицинскийОсмотр.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
	НаборЗаписей.Отбор.Позиция.Установить(Позиция);
	НаборЗаписей.Отбор.Период.Установить(ДатаЗаписи);
	
	СтрокаНабора = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаНабора, ЭтотОбъект);
	СтрокаНабора.ГоловнаяОрганизация = ЗарплатаКадры.ГоловнаяОрганизация(Организация);
	СтрокаНабора.Период = ДатаЗаписи;
	СтрокаНабора.Направление = Ссылка;
	СтрокаНабора.Заключение = МедицинскиеОсмотры.ЗаключениеПоНаправлению(Ссылка);
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ЗаполнитьПоОписаниюДляЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	
	ЗаполнитьДатуРожденияФизическогоЛица();
	ЗаполнитьВредныеФакторыВидыРабот();
	ЗаполнитьЗначенияПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли