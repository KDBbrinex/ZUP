
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		// Новая заявка.
		// Заполняем реквизиты значениями по умолчанию.
		ЗначенияДляЗаполнения = Новый Структура("Ответственный", "Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		Если Не ЗначениеЗаполнено(Объект.ПланируемаяДатаЗакрытия) Тогда
			Объект.ПланируемаяДатаЗакрытия =
				ПодборПерсонала.ПланируемаяДатаЗакрытияПоУмолчанию(Объект.Дата);
		КонецЕсли;
		
		ПриПолученииДанныхНаСервере();
	КонецЕсли;
	
	// Отобразим элементы в зависимости от функциональной опции.
	ИспользоватьЭлектронноеИнтервью = ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронноеИнтервью");
	Элементы.ГруппаФункцииТребованияКХарактеристикам.Видимость = ИспользоватьЭлектронноеИнтервью;
	Если ИспользоватьЭлектронноеИнтервью Тогда
		ХарактеристикиПерсоналаФормы.ПрочитатьХарактеристикиВТаблицы(Объект.ХарактеристикиПерсонала, Характеристики, ЗначенияХарактеристики);
	Иначе
		Элементы.ГруппаДанныеДляПубликацииВакансии.Поведение = ПоведениеОбычнойГруппы.Обычное;
		Элементы.ГруппаДанныеДляПубликацииВакансии.Отображение = ОтображениеОбычнойГруппы.Нет;
		Элементы.ГруппаДанныеДляПубликацииВакансии.ОтображатьЗаголовок = Ложь;
	КонецЕсли;
	
	ДоступноДобавлениеИзменение = ПравоДоступа("Добавление", Метаданные.Документы.ЗаявкаНаПодборПерсонала);
	Если Не ДоступноДобавлениеИзменение Тогда
		Элементы.Характеристики.ТолькоПросмотр = Истина;
		Элементы.ХарактеристикиПерсоналаОткрытьПодборХарактеристикПерсонала.Доступность = Ложь;
		Элементы.ЗаполнитьИзПрофиля.Доступность = Ложь;
	КонецЕсли;
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// ПроцессыОбработкиДокументов
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ПроцессыОбработкиДокументовЗарплата") Тогда
		МодульПроцессыОбработкиДокументовЗарплата = ОбщегоНазначения.ОбщийМодуль("ПроцессыОбработкиДокументовЗарплата");
		МодульПроцессыОбработкиДокументовЗарплата.ПриСозданииНаСервере(ЭтотОбъект, Объект);
	КонецЕсли;	
	// Конец ПроцессыОбработкиДокументов
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	// ПроцессыОбработкиДокументов
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ПроцессыОбработкиДокументовЗарплата") Тогда
		МодульПроцессыОбработкиДокументовЗарплата = ОбщегоНазначенияКлиент.ОбщийМодуль("ПроцессыОбработкиДокументовЗарплатаКлиент");
		МодульПроцессыОбработкиДокументовЗарплата.ПередЗакрытием(ЭтотОбъект, Объект, Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	КонецЕсли;	
	// Конец ПроцессыОбработкиДокументов
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбработатьОповещениеСогласованияВакансий(ИмяСобытия, Параметр, Источник);
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриПолученииДанныхНаСервере(ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// ПроцессыОбработкиДокументов
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ПроцессыОбработкиДокументовЗарплата") Тогда
		МодульПроцессыОбработкиДокументовЗарплата = ОбщегоНазначения.ОбщийМодуль("ПроцессыОбработкиДокументовЗарплата");
		МодульПроцессыОбработкиДокументовЗарплата.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;	
	// Конец ПроцессыОбработкиДокументов
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриПолученииДанныхНаСервере(ТекущийОбъект);
	
	// ПроцессыОбработкиДокументов
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ПроцессыОбработкиДокументовЗарплата") Тогда
		МодульПроцессыОбработкиДокументовЗарплата = ОбщегоНазначения.ОбщийМодуль("ПроцессыОбработкиДокументовЗарплата");
		МодульПроцессыОбработкиДокументовЗарплата.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;	
	// Конец ПроцессыОбработкиДокументов
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ЗаписьДокумента", Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ХарактеристикиПерсоналаФормы.ПеренестиХарактеристикиВТабличнуюЧасть(ТекущийОбъект.ХарактеристикиПерсонала, Характеристики, ЗначенияХарактеристики);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// ПроцессыОбработкиДокументов
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ПроцессыОбработкиДокументовЗарплата") Тогда
		МодульПроцессыОбработкиДокументовЗарплата = ОбщегоНазначения.ОбщийМодуль("ПроцессыОбработкиДокументовЗарплата");
		МодульПроцессыОбработкиДокументовЗарплата.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи, Отказ);
	КонецЕсли;		
	// Конец ПроцессыОбработкиДокументов
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	ХарактеристикиПерсоналаФормы.ОбработкаПроверкиЗаполненияТабличныхЧастейХарактеристик(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СпособНабораПриИзменении(Элемент)
	
	УстановитьДоступностьНазначенияНабора(ЭтаФорма);
	УстановитьВидимостьПричиныОткрытия(ЭтаФорма);
	УстановитьВидимостьНоваяСуществующаяПозиция(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НоваяПозицияПриИзменении(Элемент)
	
	УстановитьДоступностьНазначенияНабора(ЭтаФорма);
	УстановитьВидимостьПричиныОткрытия(ЭтаФорма);
	УстановитьДоступностьДолжностиПодразделения(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НазначениеНабораПозицияПриИзменении(Элемент)
	
	УстановитьДоступностьПозиции(ЭтаФорма);
	УстановитьДоступностьДолжностиПодразделения(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицияПриИзменении(Элемент)
	
	ДанныеПозиции = ДанныеПозицииШтатногоРасписания(Объект.Позиция);
	
	Объект.Подразделение = ДанныеПозиции.МестоВСтруктуреПредприятия;
	Объект.ПредполагаемыйДоход = ДанныеПозиции.ФОТ;
	Объект.Должность = ДанныеПозиции.Должность;
	
КонецПроцедуры

&НаКлиенте
Процедура НазначениеНабораДолжностьПодразделениеПриИзменении(Элемент)
	
	УстановитьДоступностьПозиции(ЭтаФорма);
	УстановитьДоступностьДолжностиПодразделения(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДолжностьПриИзменении(Элемент)
	
	ОчиститьПредыдущееЗначениеПозиции();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ОчиститьПредыдущееЗначениеПозиции();
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДействияСотрудников

&НаКлиенте
Процедура ДействияСотрудниковПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	ХарактеристикиПерсоналаКлиент.ОткрытьФормуДобавленияДействий(ЭтаФорма, Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ДействияСотрудниковПередУдалением(Элемент, Отказ)
	
	Если Элементы.ДействияСотрудников.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	УдаляемыеДействия = Новый Массив;
	Для Каждого ТекущаяСтрока Из Элементы.ДействияСотрудников.ВыделенныеСтроки Цикл
		СтрокаДействия = Объект.ДействияСотрудников.НайтиПоИдентификатору(ТекущаяСтрока);
		Если СтрокаДействия = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		УдаляемыеДействия.Добавить(СтрокаДействия.ДействиеСотрудника);
	КонецЦикла;
	
	ПрочиеДействия = Новый Массив;
	Для Каждого ТекущаяСтрока Из Объект.ДействияСотрудников Цикл
		Если УдаляемыеДействия.Найти(ТекущаяСтрока.ДействиеСотрудника) = Неопределено Тогда
			ПрочиеДействия.Добавить(ТекущаяСтрока.ДействиеСотрудника);
		КонецЕсли;
	КонецЦикла;
	МассивХарактеристик = Новый Массив;
	Для Каждого ТекущаяСтрока Из Характеристики Цикл
		МассивХарактеристик.Добавить(ТекущаяСтрока.Характеристика);
	КонецЦикла;
	МассивЗначенийХарактеристик = Новый Массив;
	Для Каждого ТекущаяСтрока Из ЗначенияХарактеристики Цикл
		МассивЗначенийХарактеристик.Добавить(ТекущаяСтрока.Значение);
	КонецЦикла;
	
	ЭлектронноеИнтервьюКлиент.УдалитьДействияСотрудника(ЭтаФорма, УдаляемыеДействия, ПрочиеДействия, МассивХарактеристик, МассивЗначенийХарактеристик);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыХарактеристики

&НаКлиенте
Процедура ХарактеристикиПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	ХарактеристикиПерсоналаКлиент.ОткрытьФормуДобавленияХарактеристик(ЭтаФорма, Копирование, Отказ, Новый ОписаниеОповещения("ДобавитьХарактеристикиПерсоналаНаКлиенте", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикиПередУдалением(Элемент, Отказ)
	ХарактеристикиПерсоналаКлиент.УдалитьЗначенияХарактеристик(ЭтаФорма, Элементы.Характеристики.ВыделенныеСтроки);
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя <> "ХарактеристикиЗначенияСтрокой" Тогда
		Возврат;
	КонецЕсли;
	Если Не ДоступноДобавлениеИзменение Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Характеристики.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Или Не ЗначениеЗаполнено(ТекущиеДанные.Характеристика) Тогда
		Возврат;
	КонецЕсли;
	
	ХарактеристикиПерсоналаКлиент.ОткрытьНастройкуЗначенийХарактеристик(ЭтаФорма, ТекущиеДанные.Характеристика);
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Элементы.Характеристики.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ХарактеристикаРедактируемойСтроки = Элементы.Характеристики.ТекущиеДанные.Характеристика;
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикиХарактеристикаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Характеристики.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭлектронноеИнтервьюКлиент.ОбработатьИзменениеХарактеристики(ЭтаФорма, ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ЗаполнитьИзПрофиля(Команда)
	
	НачатьЗаполнениеПоДаннымПрофиля();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборХарактеристикПерсонала(Команда)
	
	ХарактеристикиПерсоналаКлиент.ОткрытьФормуПодбораХарактеристик(ЭтаФорма, Истина, Новый ОписаниеОповещения("ДобавитьХарактеристикиПерсоналаНаКлиенте", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьДействияДеревом(Команда)
	
	Если Элементы.ГруппаДействияСотрудников.ТекущаяСтраница = Элементы.СтраницаДействияСотрудниковСписком Тогда
		СписокДействий = Новый Массив;
		Для Каждого ТекущаяСтрока Из Объект.ДействияСотрудников Цикл
			СписокДействий.Добавить(ТекущаяСтрока.ДействиеСотрудника);
		КонецЦикла;
		ЗаполнитьДеревоДействийСотрудников(СписокДействий);
		Элементы.ГруппаДействияСотрудников.ТекущаяСтраница = Элементы.СтраницаДействияСотрудниковДеревом;
	Иначе
		Элементы.ГруппаДействияСотрудников.ТекущаяСтраница = Элементы.СтраницаДействияСотрудниковСписком;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиСобытийПроцессыОбработкиДокументов

&НаКлиенте
Процедура Подключаемый_ВыполнитьЗадачуПоОбработкеДокумента(Команда)
	// ПроцессыОбработкиДокументов
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ПроцессыОбработкиДокументовЗарплата") Тогда
		МодульПроцессыОбработкиДокументовЗарплата = ОбщегоНазначенияКлиент.ОбщийМодуль("ПроцессыОбработкиДокументовЗарплатаКлиент");
		МодульПроцессыОбработкиДокументовЗарплата.ВыполнитьЗадачу(ЭтотОбъект, Команда, Объект)
	КонецЕсли;		
	// Конец ПроцессыОбработкиДокументов
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьЗадачуПоОбработкеДокументаОповещение(Контекст, ДополнительныеПараметры) Экспорт
	ВыполнитьЗадачуПоОбработкеДокументаНаСервере(Контекст);
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры, Контекст);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗадачуПоОбработкеДокументаНаСервере(Контекст)
	// ПроцессыОбработкиДокументов
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ПроцессыОбработкиДокументовЗарплата") Тогда	
		МодульПроцессыОбработкиДокументовЗарплата = ОбщегоНазначения.ОбщийМодуль("ПроцессыОбработкиДокументовЗарплата");
		МодульПроцессыОбработкиДокументовЗарплата.ВыполнитьЗадачу(ЭтотОбъект, Контекст, Объект);
	КонецЕсли;		
	// Конец ПроцессыОбработкиДокументов
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КомментарийНаправившегоОткрытие(Элемент, СтандартнаяОбработка)
	// ПроцессыОбработкиДокументов
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ПроцессыОбработкиДокументовЗарплата") Тогда	
		МодульПроцессыОбработкиДокументовЗарплата = ОбщегоНазначенияКлиент.ОбщийМодуль("ПроцессыОбработкиДокументовЗарплатаКлиент");
		МодульПроцессыОбработкиДокументовЗарплата.КомментарийНаправившегоОткрытие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	КонецЕсли;		
	// Конец ПроцессыОбработкиДокументов
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КомментарийСледующемуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// ПроцессыОбработкиДокументов
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ПроцессыОбработкиДокументовЗарплата") Тогда	
		МодульПроцессыОбработкиДокументовЗарплата = ОбщегоНазначенияКлиент.ОбщийМодуль("ПроцессыОбработкиДокументовЗарплатаКлиент");
		МодульПроцессыОбработкиДокументовЗарплата.КомментарийСледующемуНачалоВыбора(ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	КонецЕсли;		
	// Конец ПроцессыОбработкиДокументов
КонецПроцедуры

#КонецОбласти

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ПриПолученииДанныхНаСервере(ТекущийОбъект = Неопределено)
	
	Если ТекущийОбъект = Неопределено Тогда
		ТекущийОбъект = Объект;
	КонецЕсли;
	
	ПрочитатьСогласованиеВакансии(ТекущийОбъект);
	УстановитьПанельСведенийСогласования(ТекущийОбъект);
	
	ХарактеристикиПерсоналаФормы.ЗаполнитьКартинкуИВидХарактеристикиТаблицыХарактеристик(Характеристики);
	
	УстановитьДоступностьНазначенияНабора(ЭтаФорма);
	УстановитьДоступностьПозиции(ЭтаФорма);
	УстановитьДоступностьДолжностиПодразделения(ЭтаФорма);
	УстановитьВидимостьПричиныОткрытия(ЭтаФорма);
	УстановитьВидимостьНоваяСуществующаяПозиция(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПанельСведенийСогласования(ТекущийОбъект = Неопределено)
	
	Если ТекущийОбъект = Неопределено Тогда
		ТекущийОбъект = Объект;
	КонецЕсли;
	
	СостоянияСогласования = Новый Массив;
	СостоянияСогласования.Добавить(Перечисления.СостоянияСогласования.Согласовано);
	СостоянияСогласования.Добавить(Перечисления.СостоянияСогласования.Отклонено);
	
	// Работа с заявкой пока не завершена — не отображаем панель согласования.
	Если СостоянияСогласования.Найти(Согласование.СостояниеСогласования) = Неопределено Тогда
		Элементы.СостояниеСогласованияГруппа.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	Элементы.СостояниеСогласованияГруппа.Видимость = Истина;
	Элементы.СостояниеСогласованияГруппа.ЦветТекстаЗаголовка = Новый Цвет;
	
	Если Согласование.СостояниеСогласования = Перечисления.СостоянияСогласования.Отклонено Тогда
		Элементы.СостояниеСогласованияГруппа.ЦветТекстаЗаголовка = ЦветаСтиля.ПросроченныеДанныеЦвет;
	КонецЕсли;
	
	// Если открыта вакансия, то показываем еще и поле с вакансией.
	ОтборПоЗаявке = Новый Структура("Основание", ТекущийОбъект.Ссылка);
	Вакансии = Справочники.Вакансии.ВакансииПоОтбору(ОтборПоЗаявке);
	Если Вакансии.Количество() > 0 Тогда
		Вакансия = Вакансии[0];
	КонецЕсли;
	
	Элементы.Вакансия.Видимость = ЗначениеЗаполнено(Вакансия);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗаполнениеПоДаннымПрофиля()
	
	ЗаголовокВопроса = НСтр("ru = 'Заявка будет заполнена по данным профиля должности'");
	ТекстВопроса = НСтр("ru = 'Обязанности, требования, условия, - будут заменены аналогичными сведениями из профиля.
                         |Продолжить?'");
	
	Если ИспользоватьЭлектронноеИнтервью Тогда
		ТекстВопроса = НСтр("ru = 'Обязанности, требования, условия, функции и требования к характеристикам, - будут заменены аналогичными сведениями из профиля.
	                         |Продолжить?'");
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьЗаполнениеПоДаннымПрофиля", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , , ЗаголовокВопроса);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьЗаполнениеПоДаннымПрофиля(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьОписаниеИзПрофиляДолжности();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОписаниеИзПрофиляДолжности()
	
	Если Не ЗначениеЗаполнено(Объект.ПрофильДолжности) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПолучения = Справочники.ПрофилиДолжностей.ПараметрыПолученияДанныхПрофиляДолжности();
	ПараметрыПолучения.ЭтапыРаботыСКандидатами = Ложь;
	
	ДанныеПрофиля = Справочники.ПрофилиДолжностей.ДанныеПрофиляДолжности(Объект.ПрофильДолжности, ПараметрыПолучения);
	
	Если ДанныеПрофиля.Свойство("ХарактеристикиПерсонала") Тогда
		Объект.ХарактеристикиПерсонала.Очистить();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеПрофиля.ХарактеристикиПерсонала, Объект.ХарактеристикиПерсонала);
		ПрочитатьХарактеристикиВТаблицы();
	КонецЕсли;
	
	Если ДанныеПрофиля.Свойство("ДействияСотрудников") Тогда
		Объект.ДействияСотрудников.Очистить();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеПрофиля.ДействияСотрудников, Объект.ДействияСотрудников);
	КонецЕсли;
	
	Объект.Требования = ДанныеПрофиля.Требования;
	Объект.Обязанности = ДанныеПрофиля.Обязанности;
	Объект.Условия = ДанныеПрофиля.Условия;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеПозицииШтатногоРасписания(Позиция)
	Возврат Справочники.ШтатноеРасписание.ДанныеПозицииШтатногоРасписания(Позиция);
КонецФункции

&НаСервере
Процедура ПрочитатьХарактеристикиВТаблицы()
	
	ХарактеристикиПерсоналаФормы.ПрочитатьХарактеристикиВТаблицы(Объект.ХарактеристикиПерсонала, Характеристики, ЗначенияХарактеристики);	
	
КонецПроцедуры

#Область ДобавлениеХарактеристик

&НаСервере
Процедура ДобавитьХарактеристикиИзДействийНаСервере(МассивДобавленныхДействий) Экспорт
	
	ДобавляемыеХарактеристики = ХарактеристикиПерсонала.МассивСтруктурХарактеристикСоЗначениямиИзДействий(МассивДобавленныхДействий);
	ХарактеристикиПерсоналаФормы.ДобавитьХарактеристикиСоЗначениями(Характеристики, ЗначенияХарактеристики, ДобавляемыеХарактеристики);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьХарактеристикиПерсоналаНаКлиенте(НовыеХарактеристики, ДополнительныеПараметры = Неопределено) Экспорт
	ДобавитьХарактеристикиПерсоналаНаСервере(НовыеХарактеристики, ДополнительныеПараметры);
КонецПроцедуры

&НаСервере
Процедура ДобавитьХарактеристикиПерсоналаНаСервере(НовыеХарактеристики, ДополнительныеПараметры)
	ХарактеристикиПерсоналаФормы.ДобавитьХарактеристикиВТабличнуюЧасть(ЭтаФорма, НовыеХарактеристики, ДополнительныеПараметры);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоДействийСотрудников(СписокДействий)
	
	ДеревоДействий = ЭлектронноеИнтервью.ДеревоДействийСотрудников(СписокДействий);
	
	ЗначениеВДанныеФормы(ДеревоДействий, ДействияСотрудниковДерево);
КонецПроцедуры

#КонецОбласти

#Область УстановкаСвойствЭлементовФормы

&НаКлиенте
Процедура ОчиститьПредыдущееЗначениеПозиции()
	
	Если Не ЗначениеЗаполнено(ПозицияПредыдущееЗначение) Тогда
		Возврат;
	КонецЕсли;
		
	ДанныеПозиции = ДанныеПозицииШтатногоРасписания(ПозицияПредыдущееЗначение);
	
	Если ДанныеПозиции.Должность <> Объект.Должность Или ДанныеПозиции.МестоВСтруктуреПредприятия <> Объект.Подразделение Тогда 
		ПозицияПредыдущееЗначение = Неопределено;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьНазначенияНабора(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	МассовыйНабор = ЭтоМассовыйНабор(Объект.СпособНабора);
	
	Если Не МассовыйНабор Тогда 
		Если Не Объект.НоваяПозиция Тогда
			Объект.НазначениеНабора = ПредопределенноеЗначение("Перечисление.НазначениеНабораПерсоналаНаВакансию.ПозицияШтатногоРасписания");
		Иначе
			Объект.НазначениеНабора = ПредопределенноеЗначение("Перечисление.НазначениеНабораПерсоналаНаВакансию.ДолжностьПодразделение");
		КонецЕсли;
		УстановитьДоступностьПозиции(Форма);
		УстановитьДоступностьДолжностиПодразделения(Форма);
	КонецЕсли;
	
	Если МассовыйНабор Тогда
		Элементы.НазначениеНабораПозиция.ТолькоПросмотр = Ложь;
		Элементы.НазначениеНабораДолжностьПодразделение.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.НазначениеНабораПозиция.ТолькоПросмотр = Объект.НоваяПозиция;
		Элементы.НазначениеНабораДолжностьПодразделение.ТолькоПросмотр = Не Объект.НоваяПозиция;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьПозиции(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	НаборНаПозицию = Объект.НазначениеНабора = ПредопределенноеЗначение("Перечисление.НазначениеНабораПерсоналаНаВакансию.ПозицияШтатногоРасписания");
	
	Элементы.Позиция.Доступность = НаборНаПозицию;
	
	Если Не НаборНаПозицию И ЗначениеЗаполнено(Объект.Позиция) Тогда 
		Форма.ПозицияПредыдущееЗначение = Объект.Позиция;
		Объект.Позиция = Неопределено;
		Возврат;
	КонецЕсли;
	
	Если НаборНаПозицию И ЗначениеЗаполнено(Форма.ПозицияПредыдущееЗначение) Тогда
		Объект.Позиция = Форма.ПозицияПредыдущееЗначение;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьДолжностиПодразделения(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ТолькоПросмотр = Истина;
	Если Объект.НазначениеНабора = ПредопределенноеЗначение("Перечисление.НазначениеНабораПерсоналаНаВакансию.ДолжностьПодразделение") Тогда
		ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	Элементы.Должность.ТолькоПросмотр = ТолькоПросмотр;
	Элементы.Подразделение.ТолькоПросмотр = ТолькоПросмотр;
	
	Элементы.Должность.АвтоОтметкаНезаполненного = Не Объект.НоваяПозиция;
	Элементы.Должность.ОтметкаНезаполненного = Не Объект.НоваяПозиция И Не ЗначениеЗаполнено(Объект.Должность);
	
	МассовыйНабор = ЭтоМассовыйНабор(Объект.СпособНабора);
	
	Элементы.Подразделение.АвтоОтметкаНезаполненного = Не Объект.НоваяПозиция И Не МассовыйНабор;
	Элементы.Подразделение.ОтметкаНезаполненного = Не Объект.НоваяПозиция И Не МассовыйНабор И Не ЗначениеЗаполнено(Объект.Подразделение);
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьНоваяСуществующаяПозиция(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	МассовыйНабор = ЭтоМассовыйНабор(Объект.СпособНабора);
	
	Элементы.НоваяПозиция.Видимость = Не МассовыйНабор;
	Если МассовыйНабор Тогда
		Объект.НоваяПозиция = Ложь;
		УстановитьДоступностьДолжностиПодразделения(Форма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьПричиныОткрытия(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если ЭтоМассовыйНабор(Объект.СпособНабора) Тогда
		Элементы.ПричинаОткрытия.Доступность = Ложь;
		Форма.ПричинаОткрытияПредыдущееЗначение = Объект.ПричинаОткрытия;
		Объект.ПричинаОткрытия = Неопределено;
		Возврат;
	КонецЕсли;
	
	Если Объект.НоваяПозиция Тогда
		Элементы.ПричинаОткрытия.Доступность = Ложь;
		Форма.ПричинаОткрытияПредыдущееЗначение = Объект.ПричинаОткрытия;
		Объект.ПричинаОткрытия = Неопределено;
		Возврат;
	КонецЕсли;
	
	Элементы.ПричинаОткрытия.Доступность = Истина;
	Если ЗначениеЗаполнено(Форма.ПричинаОткрытияПредыдущееЗначение) Тогда
		Объект.ПричинаОткрытия = Форма.ПричинаОткрытияПредыдущееЗначение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоМассовыйНабор(СпособНабора)
	
	Если СпособНабора = ПредопределенноеЗначение("Перечисление.СпособНабораПерсоналаНаВакансию.МассовыйНабор") Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область СогласованиеВакансий

&НаСервере
Процедура ПрочитатьСогласованиеВакансии(ТекущийОбъект = Неопределено)
	
	Если ТекущийОбъект = Неопределено Тогда
		ТекущийОбъект = Объект;
	КонецЕсли;
	
	Если ТекущийОбъект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.СогласованиеВакансий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Вакансия.Установить(ТекущийОбъект.Ссылка);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Согласование, НаборЗаписей[0]);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСогласованиеВакансий") Тогда
		Если Не ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.СогласованиеВакансий.Команды.Согласовать) Тогда
			ТолькоПросмотр = Перечисления.СостоянияСогласования.РешениеПринято(Согласование.СостояниеСогласования);
		КонецЕсли;
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОповещениеСогласованияВакансий(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия <> "СогласованиеВакансий_Завершено" Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметр.Найти(Объект.Ссылка) = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ПрочитатьСогласованиеВакансии();
	УстановитьПанельСведенийСогласования();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
