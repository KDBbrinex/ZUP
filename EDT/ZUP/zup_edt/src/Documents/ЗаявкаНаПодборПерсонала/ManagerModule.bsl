
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Подразделение)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// ЗарплатаКадрыКорпоративнаяПодсистемы.ПодборПерсонала.СогласованиеВакансий

// См. СогласованиеВакансий.ЗаполнитьДанныеСогласованияВакансии
Процедура ЗаполнитьДанныеСогласованияВакансии(ОбъектСогласования, ДанныеСогласования, ТребуетсяСогласование) Экспорт
	
	ЗаполнитьЗначенияСвойств(ДанныеСогласования, ОбъектСогласования);
	ДанныеСогласования.Вакансия = ОбъектСогласования.Ссылка;
	
	ДанныеСогласования.СостояниеСогласования = Неопределено;
	Если ОбъектСогласования.Проведен Тогда
		ДанныеСогласования.СостояниеСогласования = Перечисления.СостоянияСогласования.Рассматривается;
	КонецЕсли;
	
КонецПроцедуры

// См. СогласованиеВакансий.ПриУстановкеСостоянияСогласованияВакансии
Процедура ПриУстановкеСостоянияСогласованияВакансии(ОбъектСогласования, ДанныеСогласования) Экспорт
	
КонецПроцедуры

// Конец ЗарплатаКадрыКорпоративнаяПодсистемы.ПодборПерсонала.СогласованиеВакансий

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Функция-конструктор для составления параметра к методу ДанныеЗаявкиНаПодборПерсонала.
// 
// Возвращаемое значение:
//  Структура - структура с полями, описывающих требования к получению данных заявки.
//
Функция ПараметрыПолученияДанныхЗаявки() Экспорт
	
	ПараметрыПолучения = Новый Структура(
		"ХарактеристикиПерсонала,
		|ДействияСотрудников,
		|Согласование");
	
	ПараметрыПолучения.ХарактеристикиПерсонала = Ложь;
	ПараметрыПолучения.ДействияСотрудников = Ложь;
	ПараметрыПолучения.Согласование = Ложь;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронноеИнтервью") Тогда
		ПараметрыПолучения.ХарактеристикиПерсонала = Истина;
		ПараметрыПолучения.ДействияСотрудников = Истина;
	КонецЕсли;
	
	Возврат ПараметрыПолучения;
	
КонецФункции

// Формирует структуру с данными документа по его ссылке.
//
// Параметры:
//  ЗаявкаНаПодборПерсонала	 - ДокументСсылка.ЗаявкаНаПодборПерсонала	 - заявка, данные которой необходимо получить.
//  ПараметрыПолучения		 - Структура								 - необязательный, см. ПараметрыПолученияДанныхЗаявки.
// 
// Возвращаемое значение:
//  Структура - структура с полями:
//  Ссылка,
//  Позиция,
//  НоваяПозиция,
//  Подразделение,
//  Должность,
//  ПрофильДолжности,
//  Требования,
//  Обязанности,
//  Условия,
//  ПредполагаемыйДоход,
//  ПланируемаяДатаЗакрытия,
//  Приоритет,
//  ПричинаОткрытия,
//  СпособНабора,
//  НазначениеНабора,
//  Ответственный,
//  Комментарий
//
Функция ДанныеЗаявкиНаПодборПерсонала(ЗаявкаНаПодборПерсонала, ПараметрыПолучения = Неопределено) Экспорт
	
	Если ПараметрыПолучения = Неопределено Тогда
		ПараметрыПолучения = ПараметрыПолученияДанныхЗаявки();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаявкаНаПодборПерсонала", ЗаявкаНаПодборПерсонала);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявкаНаПодборПерсонала.Ссылка КАК Ссылка,
		|	ЗаявкаНаПодборПерсонала.Позиция КАК Позиция,
		|	ЗаявкаНаПодборПерсонала.НоваяПозиция КАК НоваяПозиция,
		|	ЗаявкаНаПодборПерсонала.Подразделение КАК Подразделение,
		|	ЗаявкаНаПодборПерсонала.Должность КАК Должность,
		|	ЗаявкаНаПодборПерсонала.ПрофильДолжности КАК ПрофильДолжности,
		|	ЗаявкаНаПодборПерсонала.Требования КАК Требования,
		|	ЗаявкаНаПодборПерсонала.Обязанности КАК Обязанности,
		|	ЗаявкаНаПодборПерсонала.Условия КАК Условия,
		|	ЗаявкаНаПодборПерсонала.ПредполагаемыйДоход КАК ПредполагаемыйДоход,
		|	ЗаявкаНаПодборПерсонала.ПланируемаяДатаЗакрытия КАК ПланируемаяДатаЗакрытия,
		|	ЗаявкаНаПодборПерсонала.Приоритет КАК Приоритет,
		|	ЗаявкаНаПодборПерсонала.ПричинаОткрытия КАК ПричинаОткрытия,
		|	ЗаявкаНаПодборПерсонала.СпособНабора КАК СпособНабора,
		|	ЗаявкаНаПодборПерсонала.НазначениеНабора КАК НазначениеНабора,
		|	ЗаявкаНаПодборПерсонала.Ответственный КАК Ответственный,
		|	ЗаявкаНаПодборПерсонала.Комментарий КАК Комментарий
		|ИЗ
		|	Документ.ЗаявкаНаПодборПерсонала КАК ЗаявкаНаПодборПерсонала
		|ГДЕ
		|	ЗаявкаНаПодборПерсонала.Ссылка = &ЗаявкаНаПодборПерсонала";
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
	ВыбираемыеПоля = СхемаЗапроса.ПакетЗапросов[0].Операторы[0].ВыбираемыеПоля;
	
	Если ПараметрыПолучения.ХарактеристикиПерсонала Тогда
		ВыбираемыеПоля.Добавить("ЗаявкаНаПодборПерсонала.ХарактеристикиПерсонала.Характеристика");
		ВыбираемыеПоля.Добавить("ЗаявкаНаПодборПерсонала.ХарактеристикиПерсонала.Значение");
		ВыбираемыеПоля.Добавить("ЗаявкаНаПодборПерсонала.ХарактеристикиПерсонала.Вес");
		ВыбираемыеПоля.Добавить("ЗаявкаНаПодборПерсонала.ХарактеристикиПерсонала.ТребуетсяПроверка");
		ВыбираемыеПоля.Добавить("ЗаявкаНаПодборПерсонала.ХарактеристикиПерсонала.ТребуетсяОбучение");
		ВыбираемыеПоля.Добавить("ЗаявкаНаПодборПерсонала.ХарактеристикиПерсонала.ВесЗначения");
	КонецЕсли;
	
	Если ПараметрыПолучения.ДействияСотрудников Тогда
		ВыбираемыеПоля.Добавить("ЗаявкаНаПодборПерсонала.ДействияСотрудников.ДействиеСотрудника");
	КонецЕсли;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	ДанныеЗаявки = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Запрос.Выполнить().Выгрузить()[0]);
	
	Если ПараметрыПолучения.Согласование Тогда
		ДанныеЗаявки.Вставить("Согласование", СогласованиеВакансий.ДанныеСогласования(ЗаявкаНаПодборПерсонала));
	КонецЕсли;
	
	Возврат ДанныеЗаявки;
	
КонецФункции

#КонецОбласти

#КонецЕсли