#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	// Ограничения доступа в ролях:
	// Чтение / Изменение:
	// #ПоЗначениямРасширенный( "Документ.<ИмяДокумента>", "","","",
	// "НЕ Ложь В (Выбрать Первые 1 Ложь Из Документ.<ИмяДокумента>.ФизическиеЛица КАК Т1 ГДЕ Т.Ссылка = Т1.Ссылка И НЕ (",
	// "ГруппыФизическихЛиц", "Т1.ФизическоеЛицо", "))",
	// "","", "","","", "", "","", "", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","",
	// "","","", "","","", "","","", "","","")
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок(ЗначениеРазрешено(ФизическиеЛица.ФизическоеЛицо))";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ПланОбученияРазвития;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПроведения(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ТаблицаМероприятия.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА ДокументПлан.Подразделение
		|		ИНАЧЕ ТаблицаМероприятия.Подразделение
		|	КОНЕЦ КАК Подразделение,
		|	ТаблицаМероприятия.Мероприятие КАК Мероприятие,
		|	ТаблицаМероприятия.ДатаНачала КАК ДатаНачала,
		|	ТаблицаМероприятия.ДатаОкончания КАК ДатаОкончания,
		|	ТаблицаМероприятия.КоличествоУчебныхЧасов КАК КоличествоУчебныхЧасов,
		|	ТаблицаМероприятия.КоличествоСотрудников КАК КоличествоСотрудников,
		|	ТаблицаМероприятия.СуммаРасходов КАК СуммаРасходов,
		|	ДокументПлан.ДатаНачалаПланирования КАК ДатаНачалаПланирования,
		|	ДокументПлан.ДатаОкончанияПланирования КАК ДатаОкончанияПланирования,
		|	ТаблицаМероприятия.Заявка КАК Заявка,
		|	ТаблицаМероприятия.Подразделение КАК ЦелевоеПодразделение
		|ИЗ
		|	Документ.ПланОбученияРазвития.Мероприятия КАК ТаблицаМероприятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПланОбученияРазвития КАК ДокументПлан
		|		ПО ТаблицаМероприятия.Ссылка = ДокументПлан.Ссылка
		|ГДЕ
		|	ТаблицаМероприятия.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ТаблицаМероприятия.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА ДокументПлан.Подразделение
		|		ИНАЧЕ ТаблицаМероприятия.Подразделение
		|	КОНЕЦ КАК Подразделение,
		|	ТаблицаМероприятия.Мероприятие КАК Мероприятие,
		|	ТаблицаМероприятия.ДатаНачала КАК ДатаНачала,
		|	ТаблицаМероприятия.ДатаОкончания КАК ДатаОкончания,
		|	ТаблицаСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВЫБОР
		|		КОГДА ТаблицаМероприятия.КоличествоСотрудников = 0
		|			ТОГДА ТаблицаМероприятия.КоличествоУчебныхЧасов
		|		ИНАЧЕ ТаблицаМероприятия.КоличествоУчебныхЧасов / ТаблицаМероприятия.КоличествоСотрудников
		|	КОНЕЦ КАК КоличествоУчебныхЧасов,
		|	ТаблицаСотрудники.СуммаНаСотрудника КАК СуммаРасходов,
		|	ТаблицаСотрудники.Сотрудник КАК Сотрудник,
		|	ТаблицаМероприятия.Подразделение КАК ЦелевоеПодразделение
		|ИЗ
		|	Документ.ПланОбученияРазвития.Мероприятия КАК ТаблицаМероприятия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПланОбученияРазвития КАК ДокументПлан
		|		ПО ТаблицаМероприятия.Ссылка = ДокументПлан.Ссылка
		|			И (ТаблицаМероприятия.Ссылка = &Ссылка)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПланОбученияРазвития.Сотрудники КАК ТаблицаСотрудники
		|		ПО ТаблицаМероприятия.НомерСтрокиМероприятия = ТаблицаСотрудники.НомерСтрокиМероприятия
		|			И ТаблицаМероприятия.Ссылка = ТаблицаСотрудники.Ссылка";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеДляПроведения = Новый Структура(
		"ПлановыеДвиженияМероприятий,
		|ПлановыеДвиженияСотрудников");
	
	ДанныеДляПроведения.ПлановыеДвиженияМероприятий = РезультатЗапроса[РезультатЗапроса.Количество() - 2].Выгрузить();
	ДанныеДляПроведения.ПлановыеДвиженияСотрудников = РезультатЗапроса[РезультатЗапроса.Количество() - 1].Выгрузить();
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// План обучения
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Документ.ПланОбученияРазвития";
	КомандаПечати.Идентификатор = "ПланОбучения";
	КомандаПечати.Представление = НСтр("ru = 'План обучения'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь; 
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПланОбучения");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПланОбучения",
			НСтр("ru = 'План обучения'"),
			ПечатьПланаОбучения(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.ПланОбученияРазвития.ПФ_MXL_ПланОбучения");
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьПланаОбучения(МассивОбъектов, ОбъектыПечати)
	
	// Создаем табличный документ и устанавливаем имя параметров печати.
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ПланОбучения";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПланОбученияРазвития.ПФ_MXL_ПланОбучения");
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаМероприятие = Макет.ПолучитьОбласть("Мероприятие");
	ОбластьМакетаСотрудники = Макет.ПолучитьОбласть("Сотрудники"); 
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал"); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		  |	ПланОбученияРазвитияМероприятия.Ссылка КАК ПланСсылка,
		  |	ПланОбученияРазвитияМероприятия.НомерСтрокиМероприятия КАК НомерСтрокиМероприятия,
		  |	ПланОбученияРазвитияМероприятия.Мероприятие КАК Мероприятие,
		  |	ПланОбученияРазвитияМероприятия.КоличествоСотрудников КАК КоличествоСотрудников,
		  |	ПланОбученияРазвитияМероприятия.КоличествоУчебныхЧасов КАК КоличествоУчебныхЧасов,
		  |	ПланОбученияРазвитияМероприятия.СуммаРасходов КАК СуммаРасходов,
		  |	ПланОбученияРазвитияМероприятия.ДатаНачала КАК ДатаНачала,
		  |	ПланОбученияРазвитияМероприятия.ДатаОкончания КАК ДатаОкончания,
		  |	ПланОбученияРазвития.Дата,
		  |	ПланОбученияРазвития.ДатаНачалаПланирования,
		  |	ПланОбученияРазвития.ДатаОкончанияПланирования,
		  |	ПланОбученияРазвития.Утвердил,
		  |	ПланОбученияРазвитияСотрудники.Сотрудник,
		  |	ПланОбученияРазвитияМероприятия.НомерСтроки КАК НомерСтроки
		  |ИЗ
		  |	Документ.ПланОбученияРазвития.Мероприятия КАК ПланОбученияРазвитияМероприятия
		  |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПланОбученияРазвития КАК ПланОбученияРазвития
		  |		ПО ПланОбученияРазвитияМероприятия.Ссылка = ПланОбученияРазвития.Ссылка
		  |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПланОбученияРазвития.Сотрудники КАК ПланОбученияРазвитияСотрудники
		  |		ПО ПланОбученияРазвитияМероприятия.Ссылка = ПланОбученияРазвитияСотрудники.Ссылка
		  |			И ПланОбученияРазвитияМероприятия.НомерСтрокиМероприятия = ПланОбученияРазвитияСотрудники.НомерСтрокиМероприятия
		  |ГДЕ
		  |	ПланОбученияРазвитияМероприятия.Ссылка В(&МассивОбъектов)
		  |
		  |УПОРЯДОЧИТЬ ПО
		  |	ПланСсылка,
		  |	НомерСтроки,
		  |	НомерСтрокиМероприятия";
		
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("ПланСсылка") Цикл
		// Вывод шапки документа.
		ЗаполнитьЗначенияСвойств(ОбластьМакетаШапка.Параметры, Выборка);
		ОбластьМакетаШапка.Параметры.ДатаНачалаПланирования = Формат(Выборка.ДатаНачалаПланирования,"ДЛФ=D");
		ОбластьМакетаШапка.Параметры.ДатаОкончанияПланирования = Формат(Выборка.ДатаОкончанияПланирования,"ДЛФ=D");
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		// Вывод мероприятий.
		НомерСтроки = 1;
		Пока Выборка.СледующийПоЗначениюПоля("НомерСтрокиМероприятия") Цикл
			ЗаполнитьЗначенияСвойств(ОбластьМакетаМероприятие.Параметры, Выборка);
			ОбластьМакетаМероприятие.Параметры.НомерСтроки = НомерСтроки;
			ТабличныйДокумент.Вывести(ОбластьМакетаМероприятие);
			// Выборка по сотрудникам.
			Пока Выборка.Следующий() Цикл
				Если ЗначениеЗаполнено(Выборка.Сотрудник) Тогда
					ЗаполнитьЗначенияСвойств(ОбластьМакетаСотрудники.Параметры, Выборка);
					ТабличныйДокумент.Вывести(ОбластьМакетаСотрудники);
				КонецЕсли;
			КонецЦикла;
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;	
		ЗаполнитьЗначенияСвойств(ОбластьМакетаПодвал.Параметры, РеквизитыУтвердившего(Выборка.Утвердил, Выборка.Дата));
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
	КонецЦикла;

	Возврат ТабличныйДокумент;
	
КонецФункции

Функция РеквизитыУтвердившего(ПользовательУтвердил, ДатаДокумента)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Пользователи.ФизическоеЛицо КАК Ссылка,
		|	&ДатаДокумента КАК Дата
		|ПОМЕСТИТЬ ВТФизическоеЛицо
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.Ссылка = &ПользовательУтвердил";
		
	Запрос.УстановитьПараметр("ПользовательУтвердил",ПользовательУтвердил);
	Запрос.УстановитьПараметр("ДатаДокумента",ДатаДокумента);
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Ссылка");

	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТФизическоеЛицо");
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЕСТЬNULL(Сотрудники.Ссылка, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) КАК Сотрудник,
	|	ВТФИООтветственныхЛиц.РасшифровкаПодписи
	|ПОМЕСТИТЬ ВТСотрудник
	|ИЗ
	|	ВТФизическоеЛицо КАК ВТФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИООтветственныхЛиц
	|		ПО ВТФизическоеЛицо.Ссылка = ВТФИООтветственныхЛиц.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО ВТФизическоеЛицо.Ссылка = Сотрудники.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	КадроваяИсторияСотрудниковСрезПоследних.Должность КАК ДолжностьРуководителя,
	|	ВТСотрудник.РасшифровкаПодписи КАК РуководительРасшифровкаПодписи
	|ИЗ
	|	ВТСотрудник КАК ВТСотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(
	|				&НаДату,
	|				Сотрудник В
	|					(ВЫБРАТЬ
	|						ВТСотрудник.Сотрудник
	|					ИЗ
	|						ВТСотрудник КАК ВТСотрудник)) КАК КадроваяИсторияСотрудниковСрезПоследних
	|		ПО ВТСотрудник.Сотрудник = КадроваяИсторияСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("НаДату",ДатаДокумента);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	РезультатСтруктура = Новый Структура("ДолжностьРуководителя, РуководительРасшифровкаПодписи");
	Если РезультатЗапроса.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(РезультатСтруктура, РезультатЗапроса[0]);
	КонецЕсли;
	
	Возврат РезультатСтруктура;

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли