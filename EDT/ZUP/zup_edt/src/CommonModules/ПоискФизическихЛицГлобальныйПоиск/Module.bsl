
#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьРезультатыГлобальногоПоиска(СтрокаПоиска, РезультатПоиска, ДопПараметры) Экспорт
	
	Если Не ПравоДоступа("Чтение", Метаданные.Справочники.ФизическиеЛица) Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрДлина(СтрокаПоиска) < 3 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СтрокаПоиска", "%" + СтрокаПоиска + "%");
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 20
		|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо,
		|	ФизическиеЛица.ФИО КАК ФИО,
		|	ДанныеПоискаФизическихЛиц.АдресаЭлектроннойПочты КАК АдресЭлектроннойПочты,
		|	ДанныеПоискаФизическихЛиц.Телефоны КАК Телефон,
		|	ФизическиеЛица.ИНН КАК ИНН,
		|	ФизическиеЛица.СтраховойНомерПФР КАК СНИЛС,
		|	ФизическиеЛица.ДатаРождения КАК ДатаРождения,
		|	ФизическиеЛица.Фамилия КАК Фамилия,
		|	ФизическиеЛица.Имя КАК Имя,
		|	ФизическиеЛица.Отчество КАК Отчество
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПоискаФизическихЛиц КАК ДанныеПоискаФизическихЛиц
		|		ПО ФизическиеЛица.Ссылка = ДанныеПоискаФизическихЛиц.ФизическоеЛицо
		|ГДЕ
		|	ФизическиеЛица.ПометкаУдаления = ЛОЖЬ
		|	И (ФизическиеЛица.ФИО ПОДОБНО &СтрокаПоиска
		|			ИЛИ ФизическиеЛица.ИНН ПОДОБНО &СтрокаПоиска
		|			ИЛИ ФизическиеЛица.СтраховойНомерПФР ПОДОБНО &СтрокаПоиска
		|			ИЛИ ДанныеПоискаФизическихЛиц.АдресаЭлектроннойПочты ПОДОБНО &СтрокаПоиска
		|			ИЛИ ДанныеПоискаФизическихЛиц.Телефоны ПОДОБНО &СтрокаПоиска)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ФизическиеЛица = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	
	ИсторияВзаимоотношений = СотрудникиФормы.ИсторияВзаимоотношенийСКомпанией(ФизическиеЛица);
	ОбщегоНазначенияБЗК.ДобавитьИндексКоллекции(ИсторияВзаимоотношений, "ФизическоеЛицо");
	
	ФотографииФизическихЛиц = КадровыйУчетРасширенный.АдресаФотографийФизическихЛиц(ФизическиеЛица);
	
	Результаты = Новый ТаблицаЗначений;
	Результаты.Колонки.Добавить("ЭлементРезультата");
	Результаты.Колонки.Добавить("Приоритет", Новый ОписаниеТипов("Число"));
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ФрагментыСтроки = Новый Массив;
		ФрагментыСтроки.Добавить(ПредставлениеФИО(Строка(Выборка.ФизическоеЛицо), СтрокаПоиска));
		ДобавитьФрагментСтроки(ФрагментыСтроки, 
			ФизическиеЛицаЗарплатаКадрыКлиентСервер.ПредставлениеВозраста(Выборка.ДатаРождения, ТекущаяДатаСеанса()));
			
		НайденныеСтроки = ИсторияВзаимоотношений.НайтиСтроки(Новый Структура("ФизическоеЛицо", Выборка.ФизическоеЛицо));
		Если НайденныеСтроки.Количество() > 0 Тогда
			ДобавитьФрагментСтроки(ФрагментыСтроки, ПредставлениеРоли(Выборка.ФизическоеЛицо, НайденныеСтроки[0].Примечание));
		КонецЕсли;
		
		ДобавитьФрагментСтроки(ФрагментыСтроки, АдресЭлектроннойПочты(Выборка.АдресЭлектроннойПочты, СтрокаПоиска));
		ДобавитьФрагментСтроки(ФрагментыСтроки, Телефон(Выборка.Телефон, СтрокаПоиска));
		ДобавитьФрагментСтроки(ФрагментыСтроки, ИНН(Выборка.ИНН, СтрокаПоиска));
		ДобавитьФрагментСтроки(ФрагментыСтроки, СНИЛС(Выборка.СНИЛС, СтрокаПоиска));
		
		Представление = Новый ФорматированнаяСтрока(ФрагментыСтроки);
		Картинка = ФотографияФизическогоЛица(ФотографииФизическихЛиц, Выборка.ФизическоеЛицо);
		
		НоваяСтрока = Результаты.Добавить();
		
		ПараметрыВычисления = Новый Структура;
		ПараметрыВычисления.Вставить("ФизическоеЛицо", Выборка.ФизическоеЛицо);
		ПараметрыВычисления.Вставить("Представление", Представление);
		ПараметрыВычисления.Вставить("Картинка", Картинка);
		
		ИсполняемыйФрагмент = "Новый ЭлементРезультатаГлобальногоПоиска(Параметры.ФизическоеЛицо, Параметры.Представление, Параметры.Картинка)";
		
		НоваяСтрока.ЭлементРезультата = ОбщегоНазначения.ВычислитьВБезопасномРежиме(ИсполняемыйФрагмент, ПараметрыВычисления);
		НоваяСтрока.Приоритет = ПриоритетРезультата(Выборка, СтрокаПоиска);
	КонецЦикла;
	
	Результаты.Сортировать("Приоритет");
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(РезультатПоиска, Результаты.ВыгрузитьКолонку("ЭлементРезультата"));
	
КонецПроцедуры

Функция ПриоритетРезультата(Выборка, СтрокаПоиска)
	
	Если СтрокаСодержитФрагмент(Выборка.ФИО, СтрокаПоиска) Тогда
		Если ФрагментВНачалеСтроки(Выборка.Фамилия, СтрокаПоиска) Тогда
			Возврат 1;
		КонецЕсли;
		Если ФрагментВНачалеСтроки(Выборка.Имя, СтрокаПоиска) Тогда
			Возврат 2;
		КонецЕсли;
		Если ФрагментВНачалеСтроки(Выборка.Отчество, СтрокаПоиска) Тогда
			Возврат 3;
		КонецЕсли;
	КонецЕсли;
	
	Если СтрокаСодержитФрагмент(Выборка.Телефон, СтрокаПоиска) Тогда
		Если ФрагментВНачалеСтроки(Выборка.Телефон, СтрокаПоиска) Тогда
			Возврат 4;
		КонецЕсли;
		Возврат 5;
	КонецЕсли;
	
	Если СтрокаСодержитФрагмент(Выборка.АдресЭлектроннойПочты, СтрокаПоиска) Тогда
		Если ФрагментВНачалеСтроки(Выборка.АдресЭлектроннойПочты, СтрокаПоиска) Тогда
			Возврат 4;
		КонецЕсли;
		Возврат 5;
	КонецЕсли;
	
	Если СтрокаСодержитФрагмент(Выборка.ИНН, СтрокаПоиска) Тогда
		Если ФрагментВНачалеСтроки(Выборка.ИНН, СтрокаПоиска) Тогда
			Возврат 6;
		КонецЕсли;
		Возврат 7;
	КонецЕсли;
	
	Если СтрокаСодержитФрагмент(Выборка.СНИЛС, СтрокаПоиска) Тогда
		Если ФрагментВНачалеСтроки(Выборка.СНИЛС, СтрокаПоиска) Тогда
			Возврат 6;
		КонецЕсли;
		Возврат 7;
	КонецЕсли;
	
	Возврат 9;
	
КонецФункции

Функция СтрокаСодержитФрагмент(Строка, Фрагмент)
	Возврат СтрНайти(НРег(Строка), НРег(Фрагмент)) > 0;
КонецФункции

Функция ФрагментВНачалеСтроки(Строка, Фрагмент)
	Возврат СтрНайти(НРег(Строка), НРег(Фрагмент)) = 1;
КонецФункции

Функция ПредставлениеРоли(ФизическоеЛицо, ОписаниеВзаимоотношений)
	Возврат НРег(Лев(ОписаниеВзаимоотношений, 1)) + Сред(ОписаниеВзаимоотношений, 2);
КонецФункции

Функция ПредставлениеФИО(ФИО, СтрокаПоиска)
	Возврат ПредставлениеСВыделениемНайденного(ФИО, СтрокаПоиска);
КонецФункции

Функция АдресЭлектроннойПочты(АдресЭлектроннойПочты, СтрокаПоиска)
	Возврат ПредставлениеСВыделениемНайденного(АдресЭлектроннойПочты, СтрокаПоиска, Истина);
КонецФункции

Функция Телефон(Телефон, СтрокаПоиска)
	Возврат ПредставлениеСВыделениемНайденного(Телефон, СтрокаПоиска, Истина);
КонецФункции

Функция ИНН(ИНН, СтрокаПоиска)
	
	Представление = ПредставлениеСВыделениемНайденного(ИНН, СтрокаПоиска, Истина);
	Если ПустаяСтрока(Представление) Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат Новый ФорматированнаяСтрока(
		ОбщегоНазначенияБЗККлиентСервер.ЗначенияВМассиве(НСтр("ru = 'ИНН: '"), Представление));
	
КонецФункции

Функция СНИЛС(СНИЛС, СтрокаПоиска)
	
	Представление = ПредставлениеСВыделениемНайденного(СНИЛС, СтрокаПоиска, Истина);
	Если ПустаяСтрока(Представление) Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат Новый ФорматированнаяСтрока(
		ОбщегоНазначенияБЗККлиентСервер.ЗначенияВМассиве(НСтр("ru = 'СНИЛС: '"), Представление));
	
КонецФункции

Функция ПредставлениеСВыделениемНайденного(ФрагментСтроки, СтрокаПоиска, ТолькоЕслиНайдено = Ложь)
	
	Позиция = СтрНайти(НРег(ФрагментСтроки), НРег(СтрокаПоиска));
	Если Позиция = 0 Тогда
		Если ТолькоЕслиНайдено Тогда
			Возврат "";
		КонецЕсли;
		Возврат ФрагментСтроки;
	КонецЕсли;
	
	ЧастиСтроки = Новый Массив;
	ДобавитьФрагментСтроки(ЧастиСтроки, Лев(ФрагментСтроки, Позиция - 1), Ложь);
	ДобавитьФрагментСтроки(ЧастиСтроки, ПредставлениеНайденного(Сред(ФрагментСтроки, Позиция, СтрДлина(СтрокаПоиска))), Ложь);
	ДобавитьФрагментСтроки(ЧастиСтроки, Прав(ФрагментСтроки, СтрДлина(ФрагментСтроки) - Позиция - СтрДлина(СтрокаПоиска) + 1), Ложь);
	
	Возврат Новый ФорматированнаяСтрока(ЧастиСтроки);
	
КонецФункции

Функция ПредставлениеНайденного(НайденныйФрагмент)
	Возврат Новый ФорматированнаяСтрока(НайденныйФрагмент, Новый Шрифт( , , Истина,), WebЦвета.ЗеленыйЛес);
КонецФункции

Функция ФотографияФизическогоЛица(ФотографииФизическихЛиц, ФизическоеЛицо)
	
	Фотография = ФотографииФизическихЛиц[ФизическоеЛицо];
	
	Если Фотография = Неопределено Тогда
		Возврат БиблиотекаКартинок.Силуэт;
	КонецЕсли;

	АдресФотографии = ПолучитьИзВременногоХранилища(Фотография);
	Возврат ?(ТипЗнч(АдресФотографии) = Тип("Картинка"), АдресФотографии, Новый Картинка(АдресФотографии));

КонецФункции

Процедура ДобавитьФрагментСтроки(ФрагментыСтроки, Фрагмент, ДобавлятьРазделитель = Истина)
	
	Если ПустаяСтрока(Фрагмент) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДобавлятьРазделитель Тогда
		ДобавитьРазделитель(ФрагментыСтроки);
	КонецЕсли;
	
	ФрагментыСтроки.Добавить(Фрагмент);
	
КонецПроцедуры

Процедура ДобавитьРазделитель(ЧастиСтроки)
	ЧастиСтроки.Добавить(", ");
КонецПроцедуры

#КонецОбласти
