#Область СлужебныйПрограммныйИнтерфейс

// Предназначена для обработки команды перехода из формы сотрудника к форме кандидата.
//
Процедура ОткрытьФормуКандидатаИзФормыСотрудника(Форма) Экспорт
	
	КандидатСсылка = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, "КандидатСсылка");
	Если Не ЗначениеЗаполнено(КандидатСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Кандидаты.ФормаОбъекта", Новый Структура("Ключ", КандидатСсылка));
	
КонецПроцедуры

Процедура ОткрытьФормуНовогоКандидата(Знач ЗначенияЗаполнения = Неопределено, Знач ПараметрыФормы = Неопределено, Уникальность = Неопределено) Экспорт
	
	Если ПараметрыФормы = Неопределено Тогда
		ПараметрыФормы = Новый Структура;
	КонецЕсли;
	
	Если ЗначенияЗаполнения <> Неопределено Тогда
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Кандидаты.Форма.ФормаЭлемента", ПараметрыФормы, , Уникальность);
	
КонецПроцедуры

Процедура ФизическиеЛицаФормаЭлементаПриВыполненииКоманды(Команда, Форма) Экспорт
	ОткрытьФормуНовогоКандидатаФизическогоЛица(Команда, Форма);	
КонецПроцедуры

Процедура ПриОткрытииФормыЭлементаИсторииВзаимоотношений(Ссылка, ФормаВладелец, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(Ссылка) <> Тип("СправочникСсылка.Кандидаты") Тогда
		Возврат;
	КонецЕсли;

	СтандартнаяОбработка = Ложь;

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Ссылка);
	ПараметрыФормы.Вставить("ТолькоПросмотр", Истина);
	
	ОткрытьФорму(
		"Справочник.Кандидаты.ФормаОбъекта", 
		ПараметрыФормы, 
		ФормаВладелец, , , , , 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура ФизическиеЛицаФормаЭлементаОбработкаОповещения(Форма, ИмяСобытия, Параметр) Экспорт
	
	Если ИмяСобытия <> "Запись_Кандидаты" Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Параметр) = Тип("Структура") 
		И Параметр.Свойство("ФизическоеЛицо") 
		И Параметр.ФизическоеЛицо = Форма.ФизическоеЛицоСсылка Тогда
		СотрудникиКлиент.НачатьЗаполнениеИсторииВзаимоотношений(
			Форма, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Форма.ФизическоеЛицоСсылка));
	КонецЕсли;
	
КонецПроцедуры

#Область НачальнаяНастройкаПрограммы

Процедура ОткрытьФормуЗагрузкиДанныхИзEStaff(Форма) Экспорт
	
	ОткрытьФорму("Обработка.ПереносДанныхEStaff.Форма.ПереносДанныхEStaff", , Форма);
	
КонецПроцедуры

#КонецОбласти

#Область ПанельНастроекУправлениеПерсоналом

Процедура ИспользоватьСкрытиеПерсональныхДанныхКандидатовПриИзменении(Форма, НастройкиПодбораПерсонала) Экспорт
	
	Элементы = Форма.Элементы;
	ИспользоватьСкрытиеПерсональныхДанных = НастройкиПодбораПерсонала.ИспользоватьСкрытиеПерсональныхДанныхКандидатов;
	
	ФоновоеЗадание = ПодборПерсоналаВызовСервера.ЗапуститьИзменениеНастроекКонтроляПДнВФоновомЗадании(Форма.УникальныйИдентификатор, ИспользоватьСкрытиеПерсональныхДанных);
	
	ДоступностьЭлементов = Новый Соответствие;
	ДоступностьЭлементов.Вставить(Элементы.ИспользоватьСкрытиеПерсональныхДанныхКандидатов.Имя, Элементы.ИспользоватьСкрытиеПерсональныхДанныхКандидатов.Доступность);
	
	Если ФоновоеЗадание <> Неопределено
		И ФоновоеЗадание.Статус = "Выполняется" Тогда
		
		Элементы.ИспользоватьСкрытиеПерсональныхДанныхКандидатов.Доступность = Ложь;
		Элементы.ДекорацияОжиданиеИзмененияИспользоватьСкрытиеПДн.Видимость = Истина;
		
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", Форма);
	ДополнительныеПараметры.Вставить("ДоступностьЭлементов", ДоступностьЭлементов);
	ДополнительныеПараметры.Вставить("НастройкиПодбораПерсонала", НастройкиПодбораПерсонала);
	
	НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	НастройкиОжидания.ВыводитьОкноОжидания = Ложь;
	
	Обработчик = Новый ОписаниеОповещения("ПослеИзмененияНастроекКонтроляПДн", ЭтотОбъект, ДополнительныеПараметры);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФоновоеЗадание, Обработчик, НастройкиОжидания);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПанельНастроекУправлениеПерсоналом

Процедура ПослеИзмененияНастроекКонтроляПДн(ФоновоеЗадание, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	
	Элементы = Форма.Элементы;
	ДоступностьЭлементов = ДополнительныеПараметры.ДоступностьЭлементов;
	
	Для Каждого КлючИЗначение Из ДоступностьЭлементов Цикл
		
		ИмяЭлемента = КлючИЗначение.Ключ;
		ДоступностьДо = КлючИЗначение.Значение;
		ТекущийЭлемент = Элементы.Найти(ИмяЭлемента);
		
		Если ТекущийЭлемент.Доступность <> ДоступностьДо Тогда
			ТекущийЭлемент.Доступность = ДоступностьДо;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Элементы.ДекорацияОжиданиеИзмененияИспользоватьСкрытиеПДн.Видимость Тогда
		Элементы.ДекорацияОжиданиеИзмененияИспользоватьСкрытиеПДн.Видимость = Ложь;
	КонецЕсли;
	
	Если ФоновоеЗадание <> Неопределено
		И ФоновоеЗадание.Статус = "Выполнено" Тогда
		
		ПоказатьОповещениеПользователя(НСтр("ru = 'Настройки контроля персональных данных изменены.'"));
		
	Иначе
		
		НастройкиПодбораПерсонала = ДополнительныеПараметры.НастройкиПодбораПерсонала;
		ИспользоватьСкрытиеПерсональныхДанных = Не НастройкиПодбораПерсонала.ИспользоватьСкрытиеПерсональныхДанныхКандидатов;
		
		НастройкиПодбораПерсонала.ИспользоватьСкрытиеПерсональныхДанныхКандидатов = ИспользоватьСкрытиеПерсональныхДанных;
		ПодборПерсоналаВызовСервера.ЗаписатьНастройкиПодбораПерсонала(Форма.УникальныйИдентификатор, НастройкиПодбораПерсонала);
		
		Форма.НастройкиПодбораПерсонала.ИспользоватьСкрытиеПерсональныхДанныхКандидатов = ИспользоватьСкрытиеПерсональныхДанных;
		
		Если ФоновоеЗадание <> Неопределено Тогда
			ТекстОшибки = НСтр("ru='Не удалось изменить настройки контроля персональных данных кандидатов.
				|См. подробности в журнале регистрации.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		КонецЕсли;
		
	КонецЕсли;
	
	Оповестить("Запись_НастройкиПодбораПерсонала", Новый Структура, "ИспользоватьСкрытиеПерсональныхДанныхКандидатов");
	
КонецПроцедуры

#КонецОбласти

Процедура НачатьПринятиеРешенияПоКандидату(Кандидаты, Решение, ОписаниеОповещения, Владелец) Экспорт
	
	ПараметрыФормы = Новый Структура("Кандидаты, Решение, Источник");
	ПараметрыФормы.Кандидаты = Кандидаты;
	ПараметрыФормы.Решение = Решение;
	
	ОткрытьФорму(
		"Справочник.Кандидаты.Форма.ФормаРешенияПоКандидату", 
		ПараметрыФормы, 
		Владелец, 
		Владелец, , , 
		ОписаниеОповещения);

КонецПроцедуры

Процедура НачатьЗаполнениеСчетчиковКандидатовПоВакансии(Вакансия, ТолькоКандидатыВРаботе, Форма, ОписаниеОповещения) Экспорт

	ДлительнаяОперация = ПодборПерсоналаВызовСервера.ДлительнаяОперацияЗаполненияСчетчиковКандидатовПоВакансии(
		Вакансия, ТолькоКандидатыВРаботе, Форма.УникальныйИдентификатор); 
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Заполнение информационной строки кандидатов'");
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ДополнительныеПараметры = Новый Структура("Вакансия, ОписаниеОповещения");
	ДополнительныеПараметры.Вакансия = Вакансия;
	ДополнительныеПараметры.ОписаниеОповещения = ОписаниеОповещения;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ЗавершитьЗаполнениеСчетчиковКандидатовПоВакансии", ЭтотОбъект, ДополнительныеПараметры);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

Процедура ЗавершитьЗаполнениеСчетчиковКандидатовПоВакансии(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещения, Неопределено);
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещения, Неопределено);
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещения, Результат);
	
КонецПроцедуры

Процедура НачатьЗаполнениеИнформацииЗанятостиПоВакансии(Вакансия, Форма, ОписаниеОповещения) Экспорт
	
	ДлительнаяОперация = ПодборПерсоналаВызовСервера.ДлительнаяОперацияЗаполненияЗанятостиПоВакансии(
		Вакансия, Форма.УникальныйИдентификатор);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Заполнение информационной строки занятости позиций'");
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ДополнительныеПараметры = Новый Структура("Вакансия, ОписаниеОповещения");
	ДополнительныеПараметры.Вакансия = Вакансия;
	ДополнительныеПараметры.ОписаниеОповещения = ОписаниеОповещения;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ЗавершитьЗаполнениеИнформацииЗанятости", ЭтотОбъект, ДополнительныеПараметры);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);

КонецПроцедуры

Процедура НачатьЗаполнениеИнформацииЗанятостиПоДаннымВакансии(ДанныеВакансии, Форма, ОписаниеОповещения) Экспорт
	
	ДлительнаяОперация = ПодборПерсоналаВызовСервера.ДлительнаяОперацияЗаполненияЗанятостиПоДаннымВакансии(
		ДанныеВакансии, Форма.УникальныйИдентификатор);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Заполнение информационной строки занятости позиций'");
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ДополнительныеПараметры = Новый Структура("Вакансия, ОписаниеОповещения");
	ДополнительныеПараметры.Вакансия = ДанныеВакансии.Вакансия;
	ДополнительныеПараметры.ОписаниеОповещения = ОписаниеОповещения;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ЗавершитьЗаполнениеИнформацииЗанятости", ЭтотОбъект, ДополнительныеПараметры);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
КонецПроцедуры

Процедура ЗавершитьЗаполнениеИнформацииЗанятости(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещения, Неопределено);
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещения, Неопределено);
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещения, Результат);
	
КонецПроцедуры

Процедура ОткрытьФормуНовогоКандидатаФизическогоЛица(Команда, Форма)	

	Если Команда.Имя <> ПодборПерсоналаКлиентСервер.ИмяКомандыНовыйКандидатВФормеФизическиеЛица() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ФизическоеЛицо");
	ПараметрыФормы.ФизическоеЛицо = Форма.ФизическоеЛицо.Ссылка;
	
	ОткрытьФорму("Справочник.Кандидаты.Форма.ФормаЭлемента", ПараметрыФормы, Форма, Форма.ФизическоеЛицо.Ссылка);
	
КонецПроцедуры

#КонецОбласти