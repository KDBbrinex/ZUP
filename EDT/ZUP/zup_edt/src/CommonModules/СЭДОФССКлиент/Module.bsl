#Область ПрограммныйИнтерфейс

// Открывает форму настроек организации в части социального ЭДО.
//
// Параметры:
//   Организация - СправочникСсылка.Организации - Организация, для которой необходимо показать настройки.
//
Процедура ОткрытьНастройкиОрганизации(Организация) Экспорт
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	Измерения = Новый Структура("Организация", Организация);
	ПараметрыЗаписи = Новый Массив(1);
	ПараметрыЗаписи[0] = Измерения;
	КлючРегистра = Новый(Тип("РегистрСведенийКлючЗаписи.НастройкиСЭДОФСС"), ПараметрыЗаписи);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", КлючРегистра);
	ОткрытьФорму("РегистрСведений.НастройкиСЭДОФСС.ФормаЗаписи", ПараметрыФормы);
КонецПроцедуры

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

// Открывает диалог отключения подписки организации на уведомления ФСС об изменении состояний ЭЛН сотрудника
//
// Параметры:
//   Сотрудники - Массив, СправочникСсылка.Сотрудники - Сотрудники, для которых необходимо отключить подписки.
//
Процедура ОтключитьПодписку(Сотрудники) Экспорт
	ИзменитьПодписку(Ложь, Сотрудники);
КонецПроцедуры

// Возвращает признак необходимости обновления группы напоминания ФСС об отключении подписки на ЭЛН.
Функция ТребуетсяОбновитьНапоминаниеОбОтключенииПодпискиНаЭЛН(ИмяСобытия) Экспорт
	Возврат ИмяСобытия = ИмяСобытияПослеИзмененияПодписокНаЭЛН()
		Или ИмяСобытия = ИмяСобытияПослеПолученияСообщенийОтФСС()
		Или ИмяСобытия = "Запись_СогласиеНаУведомлениеОбЭЛН"
		Или ИмяСобытия = "Запись_ОтзывСогласияНаУведомлениеОбЭЛН"
		Или ИмяСобытия = "Запись_Увольнение"
		Или ИмяСобытия = "Запись_УвольнениеСписком";
КонецФункции

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ПолучитьСообщенияИзФСС(ОрганизацияИлиМассивОрганизаций) Экспорт
	Если Не ЗначениеЗаполнено(ОрганизацияИлиМассивОрганизаций) Тогда
		Возврат;
	ИначеЕсли ТипЗнч(ОрганизацияИлиМассивОрганизаций) = Тип("Массив") Тогда
		Организации = ОрганизацияИлиМассивОрганизаций;
	Иначе
		Организации = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОрганизацияИлиМассивОрганизаций);
	КонецЕсли;
	Обработчик = Новый ОписаниеОповещения("ПослеПолученияСообщенийИзФСС", ЭтотОбъект);
	ЭлектронныйДокументооборотСФССКлиент.ПолучитьВходящиеСообщенияСЭДОФСС(Обработчик, Организации);
КонецПроцедуры

Процедура ПослеПолученияСообщенийИзФСС(Результат, ПустойПараметр) Экспорт
	Если Результат.ОшибкиПоОрганизациям.Количество() > 0 Тогда
		ТекстыОшибок = Новый Массив;
		Для Каждого КлючИЗначение Из Результат.ОшибкиПоОрганизациям Цикл
			Текст = Строка(КлючИЗначение.Ключ) + ":" + Символы.ПС + СтрСоединить(КлючИЗначение.Значение, Символы.ПС);
			ТекстыОшибок.Добавить(Текст);
		КонецЦикла;
		ИнформированиеПользователяКлиент.ПоказатьПодробности(
			СтрСоединить(ТекстыОшибок, Символы.ПС + Символы.ПС + "----------" + Символы.ПС + Символы.ПС),
			НСтр("ru = 'Информация об ошибке'"),
			БиблиотекаКартинок.Предупреждение32);
	КонецЕсли;
	Оповестить(ИмяСобытияПослеПолученияСообщенийОтФСС(), Результат);
КонецПроцедуры

Функция ИмяСобытияПослеИзмененияПодписокНаЭЛН()
	Возврат "ПослеИзмененияПодписокНаУведомленияОбИзмененииСостоянийЭЛН";
КонецФункции

Функция ИмяСобытияПослеПолученияСообщенийОтФСС() Экспорт
	Возврат "ПослеПолученияСообщенийСЭДОФСС";
КонецФункции

Процедура ОткрытьСогласие(Согласие, Организация = Неопределено, Сотрудник = Неопределено) Экспорт
	ПараметрыФормы = Новый Структура;
	Если ЗначениеЗаполнено(Согласие) Тогда
		ПараметрыФормы.Вставить("Ключ", Согласие);
	КонецЕсли;
	Если ЗначениеЗаполнено(Организация) Тогда
		ПараметрыФормы.Вставить("Организация", Организация);
	КонецЕсли;
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		ПараметрыФормы.Вставить("Сотрудник", Сотрудник);
	КонецЕсли;
	ОткрытьФорму("Документ.СогласиеНаУведомлениеОбЭЛН.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

Процедура ИзменитьПодписку(ВключитьПодписку, МассивОснований) Экспорт
	ПараметрыФормы = Новый Структура("ВключитьПодписку, МассивОснований", ВключитьПодписку, МассивОснований);
	НеИскатьРанееОткрытуюФорму = Истина;
	БлокироватьОкноВладельца = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОткрытьФорму("РегистрСведений.СогласияНаУведомленияОбЭЛН.Форма.ИзменениеСоставаПодписок",
		ПараметрыФормы,
		,
		НеИскатьРанееОткрытуюФорму,
		,
		,
		,
		БлокироватьОкноВладельца);
КонецПроцедуры

Процедура ИзменитьПометкуУдаленияСогласий(МассивСогласий, ПометкаУдаления, Обработчик = Неопределено) Экспорт
	ИзменяемыеСогласия = Новый Массив;
	Для Каждого Согласие Из МассивСогласий Цикл
		СведенияОСогласии = Новый Структура("Ссылка,ПометкаУдаления");
		ЗаполнитьЗначенияСвойств(СведенияОСогласии, Согласие);
		Если ЗначениеЗаполнено(СведенияОСогласии.Ссылка)
			И СведенияОСогласии.ПометкаУдаления <> ПометкаУдаления Тогда
			ИзменяемыеСогласия.Добавить(СведенияОСогласии.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Количество = ИзменяемыеСогласия.Количество();
	Если Количество = 0 Тогда
		Если Обработчик <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(Обработчик, Истина);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если Количество = 1 Тогда
		ПредставлениеСогласий = Строка(ИзменяемыеСогласия[0]);
	Иначе
		ПредставлениеСогласий = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
			НСтр("ru = ';%1 согласие;;%1 согласия;%1 согласий;%1 согласия'"), 
			Количество);
	КонецЕсли;
	
	Если ПометкаУдаления Тогда
		ТекстВопроса = НСтр("ru = 'После пометки на удаление согласия пропадут из списка.
			|Если сотрудник решил не подписывать согласие,
			|то рекомендуется регистрировать отказ при помощи соответствующей кнопки.
			|
			|Примеры ситуаций, в которых согласия помечаются на удаление:
			|- Согласие утратило свою актуальность (сотрудник его не читал);
			|- Согласие было создано по ошибке.
			|
			|Пометить на удаление %1?'");
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Пометить на удаление'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		КнопкаПоУмолчанию = Неопределено;
	Иначе
		ТекстВопроса = НСтр("ru = 'Снять пометку удаления %1?'");
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Снять пометку удаления'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		КнопкаПоУмолчанию = КодВозвратаДиалога.Да;
	КонецЕсли;
	
	ТекстВопроса = СтрШаблон(ТекстВопроса, ПредставлениеСогласий);
	
	Контекст = Новый Структура;
	Контекст.Вставить("Обработчик", Обработчик);
	Контекст.Вставить("ИзменяемыеСогласия", ИзменяемыеСогласия);
	Контекст.Вставить("ПометкаУдаления", ПометкаУдаления);
	
	ОбработчикОтвета = Новый ОписаниеОповещения(
		"ПослеОтветаНаВопросОбИзмененииПометкиУдаленияСогласий",
		ЭтотОбъект,
		Контекст);
	
	ПоказатьВопрос(ОбработчикОтвета, ТекстВопроса, Кнопки, , КнопкаПоУмолчанию);
КонецПроцедуры

Процедура ПослеОтветаНаВопросОбИзмененииПометкиУдаленияСогласий(Ответ, Контекст) Экспорт
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Если Контекст.Обработчик <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(Контекст.Обработчик, Ложь);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	ИзмененныеСогласия = СЭДОФССВызовСервера.ИзменитьПометкуУдаления(Контекст.ИзменяемыеСогласия, Контекст.ПометкаУдаления);
	
	Количество = ИзмененныеСогласия.Количество();
	Если Количество > 0 Тогда
		Если Количество = 1 Тогда
			Если Контекст.ПометкаУдаления Тогда
				Заголовок = НСтр("ru = 'Помечено на удаление'");
			Иначе
				Заголовок = НСтр("ru = 'Снаята пометка удаления'");
			КонецЕсли;
			Текст = Строка(ИзмененныеСогласия[0]);
			Ссылка = ПолучитьНавигационнуюСсылку(ИзмененныеСогласия[0]);
		Иначе
			ПредставлениеСогласий = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
				НСтр("ru = ';%1 согласие;;%1 согласия;%1 согласий;%1 согласия'"), 
				Количество);
			Если Контекст.ПометкаУдаления Тогда
				Текст = НСтр("ru = '%1 помечено на удаление'");
			Иначе
				Текст = НСтр("ru = 'Снята пометка удаления %1'");
			КонецЕсли;
			Текст = СтрШаблон(Текст, ПредставлениеСогласий);
			Ссылка = Неопределено;
		КонецЕсли;
		ПоказатьОповещениеПользователя(Заголовок, Ссылка, Текст, БиблиотекаКартинок.Успешно32);
	КонецЕсли;
	
	ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъектов(ИзмененныеСогласия);
	
	Если Контекст.Обработчик <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(Контекст.Обработчик, Истина);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
