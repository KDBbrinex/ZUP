////////////////////////////////////////////////////////////////////////////////
// Подсистема "Испытательный срок сотрудников"
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьИсточникиВторичныхДанныхИспытательногоСрока(ДокументОбъект, Отказ, РежимЗаписи) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ДокументОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ИспытательныйСрокСотрудников.ИнициализироватьНаборыИсточникиВторичныхДанных(ДокументОбъект, РежимЗаписи);
	
КонецПроцедуры

Процедура ЗаписатьВторичныеДанныеИспытательногоСрокаПриПроведенииДокумента(ДокументОбъект) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ДокументОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ИспытательныйСрокСотрудников.ЗарегистрироватьВторичныеДанныеПриПроведенииДокумента(ДокументОбъект);
	
КонецПроцедуры

Процедура ЗаписатьВторичныеДанныеИспытательногоСрокаПриОтменеПроведенияДокумента(ДокументОбъект) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ДокументОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	РегистрыИсточникиВторичныхДанных = ИспытательныйСрокСотрудников.РегистрыИсточникиВторичныхДанных();
	
	Для Каждого Набор Из ДокументОбъект.Движения Цикл
		Если РегистрыИсточникиВторичныхДанных[Набор.Метаданные().Имя] = Истина Тогда
			Набор.Записывать = Истина
		КонецЕсли;
	КонецЦикла;
	
	ИспытательныйСрокСотрудников.ЗарегистрироватьВторичныеДанныеПриПроведенииДокумента(ДокументОбъект);
	
КонецПроцедуры

Процедура ЗаписатьВторичныеДанныеИспытательногоСрокаПриЗаписиНабора(Источник, Отказ, Замещение) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	ИспытательныйСрокСотрудников.ЗарегистрироватьВторичныеДанныеПриЗаписиНабора(Источник);
	
КонецПроцедуры

Процедура ЗаписатьВторичныеДанныеИспытательногоСрокаПриЗаписиКадровойИстории(Источник, Отказ, Замещение) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("НеФормироватьВторичныеДанныеИспытательногоСрокаПриЗаписи")
		И Источник.ДополнительныеСвойства.НеФормироватьВторичныеДанныеИспытательногоСрокаПриЗаписи = Истина Тогда
		
		Возврат;
	КонецЕсли;
	
	ИзменившиесяДанные = Источник.ТаблицаИзменившихсяДанныхНабора();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(Запрос.МенеджерВременныхТаблиц, ИзменившиесяДанные, "ВТНаборЗаписей");
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НаборЗаписей.Сотрудник КАК Сотрудник,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Период,
	|	НаборЗаписей.Период КАК ПериодЗаписи
	|ПОМЕСТИТЬ ВТДанныеСотрудников
	|ИЗ
	|	ВТНаборЗаписей КАК НаборЗаписей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИспытательныйСрокСотрудников КАК ИспытательныйСрокСотрудников
	|		ПО НаборЗаписей.Сотрудник = ИспытательныйСрокСотрудников.Сотрудник
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НаборЗаписей.НовоеЗначениеВидСобытия = НЕОПРЕДЕЛЕНО
	|				ТОГДА НаборЗаписей.СтароеЗначениеВидСобытия
	|			ИНАЧЕ НаборЗаписей.НовоеЗначениеВидСобытия
	|		КОНЕЦ В (ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Перемещение), ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение))
	|	И НаборЗаписей.Период <= КОНЕЦПЕРИОДА(ИспытательныйСрокСотрудников.ДатаЗавершения, ДЕНЬ)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Выборка.Количество > 0 Тогда
			ИспытательныйСрокСотрудников.ОбновитьСостояниеИспытательногоСрока(Запрос.МенеджерВременныхТаблиц);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьВторичныеДанныеИспытательногоСрокаПриЗаписиСостоянийСотрудников(Источник, Отказ, Замещение) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("НеФормироватьВторичныеДанныеИспытательногоСрокаПриЗаписи")
		И Источник.ДополнительныеСвойства.НеФормироватьВторичныеДанныеИспытательногоСрокаПриЗаписи = Истина Тогда
		
		Возврат;
	КонецЕсли;
	
	ИзменившиесяДанные = Источник.ТаблицаИзменившихсяДанныхНабора();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(Запрос.МенеджерВременныхТаблиц, ИзменившиесяДанные, "ВТНаборЗаписей");
	
	Запрос.УстановитьПараметр("СостоянияОтклонений", СостоянияСотрудников.СостоянияОтклоненийСотрудников());
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НаборЗаписей.Сотрудник КАК Сотрудник,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Период,
	|	НаборЗаписей.Начало КАК ПериодЗаписи
	|ПОМЕСТИТЬ ВТДанныеСотрудников
	|ИЗ
	|	ВТНаборЗаписей КАК НаборЗаписей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИспытательныйСрокСотрудников КАК ИспытательныйСрокСотрудников
	|		ПО НаборЗаписей.Сотрудник = ИспытательныйСрокСотрудников.Сотрудник
	|ГДЕ
	|	НаборЗаписей.Состояние В(&СостоянияОтклонений)
	|	И НаборЗаписей.Период <= КОНЕЦПЕРИОДА(ИспытательныйСрокСотрудников.ДатаЗавершения, ДЕНЬ)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Выборка.Количество > 0 Тогда
			ИспытательныйСрокСотрудников.ОбновитьСостояниеИспытательногоСрока(Запрос.МенеджерВременныхТаблиц);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти