#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьДействияПриЗаписиЗаданияАдаптацииУвольнения(Источник, Отказ) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Не АдаптацияУвольнение.ИспользуетсяАдаптацияУвольнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Источник.ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Задание", Источник.Ссылка);
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗаданияАдаптацииУвольнения.ДокументОснование КАК ДокументОснование
		|ИЗ
		|	РегистрСведений.ЗаданияАдаптацииУвольнения КАК ЗаданияАдаптацииУвольнения
		|ГДЕ
		|	ЗаданияАдаптацииУвольнения.Задание = &Задание";
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Не Результат.Пустой() И Не Источник.ДополнительныеСвойства.Свойство("ПометкаОснованияЗадачАдаптацииУвольнения") Тогда
		ТекстСообщения = НСтр("ru = '""Пометка на удаление"" заданий адаптации и увольнения выполняется при пометке основания заданий.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Источник.Ссылка, , , Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьДействияПриЗаписиЗадачиАдаптацииУвольнения(Источник, Отказ) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Не АдаптацияУвольнение.ИспользуетсяАдаптацияУвольнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.Выполнена
		Или Источник.ПометкаУдаления
		Или Не ЗначениеЗаполнено(Источник.Предмет) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", Источник.Предмет);
	Запрос.УстановитьПараметр("Задание", Источник.БизнесПроцесс);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаданияАдаптацииУвольнения.ДокументОснование КАК ДокументОснование,
		|	ЗаданияАдаптацииУвольнения.Мероприятие КАК Мероприятие,
		|	ЗаданияАдаптацииУвольнения.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	РегистрСведений.ЗаданияАдаптацииУвольнения КАК ЗаданияАдаптацииУвольнения
		|ГДЕ
		|	ЗаданияАдаптацииУвольнения.ДокументОснование = &ДокументОснование
		|	И ЗаданияАдаптацииУвольнения.Задание = &Задание
		|	И ЗаданияАдаптацииУвольнения.ЗадачаИсполнителя = ЗНАЧЕНИЕ(Задача.ЗадачаИсполнителя.ПустаяСсылка)";
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ЗаданияАдаптацииУвольнения.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ДокументОснование.Установить(Выборка.ДокументОснование);
		НаборЗаписей.Отбор.Мероприятие.Установить(Выборка.Мероприятие);
		НаборЗаписей.Отбор.ФизическоеЛицо.Установить(Выборка.ФизическоеЛицо);
		НаборЗаписей.Прочитать();
		НаборЗаписей[0].ЗадачаИсполнителя = Источник.Ссылка;
		НаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти