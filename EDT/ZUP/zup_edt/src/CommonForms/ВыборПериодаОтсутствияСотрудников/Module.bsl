#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "ДатаНачала,ДатаОкончания,КоличествоЧасов");
	
	Если Параметры.ЧастьСмены Тогда
		ЧастьДня = 1;
	Иначе
		Если ДатаНачала < ДатаОкончания Тогда
			ЧастьДня = 2;
		КонецЕсли;
	КонецЕсли;
	
	ДатыВводаДокумента = ОтсутствияСотрудниковКлиентСервер.ПериодВводаДокумента(Параметры.ПериодВвода, Параметры.ПериодРегистрации);
	Элементы.ВыборПериода.НачалоПериодаОтображения = ДатыВводаДокумента.НачалоПериода;
	Элементы.ВыборПериода.КонецПериодаОтображения = ДатыВводаДокумента.ОкончаниеПериода;
	
	НастроитьРежимВыделенияКалендаряПоЧастиДня(ЭтотОбъект);
	УстановитьОтметкуВыбранныхДат(ЭтотОбъект, ДатаНачала, ДатаОкончания, ТекущаяДатаСеанса());
	УстановитьОтображениеЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВыборПериодаПриАктивизацииДаты(Элемент)
	
	Если ЧастьДня = 2 Тогда
		
		УстановитьОтметкуВыбранныхДат(ЭтотОбъект, ДатаНачала, ТекущаяДатаИнтервала, ОбщегоНазначенияКлиент.ДатаСеанса());
		ТекущаяДатаИнтервала = ДатаНачала;
		
	ИначеЕсли ЧастьДня = 0 Тогда
		
		Если Элементы.ВыборПериода.ВыделенныеДаты.Количество() > 1 Тогда
			ЧастьДня = 2;
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьОтображениеЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧастьДняПриИзменении(Элемент)
	
	Если ЧастьДня = 1 Тогда
		
		Если КоличествоЧасов = 0 Тогда
			КоличествоЧасов = 1;
		КонецЕсли;
		
		Если Элементы.ВыборПериода.ВыделенныеДаты.Количество() > 1 Тогда
			УстановитьОтметкуВыбранныхДат(ЭтотОбъект, ДатаНачала, ДатаНачала, ОбщегоНазначенияКлиент.ДатаСеанса());
		КонецЕсли;
		
	ИначеЕсли ЧастьДня = 2 Тогда
		ТекущаяДатаИнтервала = ДатаНачала;
	Иначе
		ДатаОкончания = ДатаНачала;
	КонецЕсли;
	
	НастроитьРежимВыделенияКалендаряПоЧастиДня(ЭтотОбъект);
	УстановитьОтображениеЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоЧасовПриИзменении(Элемент)
	
	УстановитьОтображениеЭлементовФормы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	СтруктураВозврата = Неопределено;
	
	Если Модифицированность Тогда
		
		Если Элементы.ВыборПериода.ВыделенныеДаты.Количество() > 0 Тогда
			
			ЗапомнитьДатыНачалаОкончания(ЭтотОбъект);
			
			СтруктураВозврата = Новый Структура("ДатаНачала,ДатаОкончания,КоличествоЧасов");
			ЗаполнитьЗначенияСвойств(СтруктураВозврата, ЭтотОбъект);
			
			СтруктураВозврата.Вставить("ЧастьСмены", ЧастьДня = 1);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьРежимВыделенияКалендаряПоЧастиДня(Форма)
	
	Если Форма.ЧастьДня = 1 Тогда
		Форма.Элементы.ВыборПериода.РежимВыделения = РежимВыделенияДаты.Одиночный;
	Иначе
		Форма.Элементы.ВыборПериода.РежимВыделения = РежимВыделенияДаты.Интервал;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтображениеЭлементовФормы(Форма)
	
	Элементы = Форма.Элементы;
	
	ЗапомнитьДатыНачалаОкончания(Форма);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"КоличествоЧасов",
		"Доступность",
		Форма.ЧастьДня = 1);
	
	Форма.ПредставлениеПериода = ОтсутствияСотрудниковКлиентСервер.ПредставлениеПериодаОтсутствия(
		Форма.ДатаНачала, Форма.ДатаОкончания, Форма.ЧастьДня = 1, Форма.КоличествоЧасов, Истина);
	
	Если Форма.ТолькоПросмотр Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ФормаВыбрать",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ФормаЗакрыть",
			"Заголовок",
			НСтр("ru='Закрыть'"));
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ФормаЗакрыть",
			"КнопкаПоУмолчанию",
			Истина);
		
		ЭлементФормаЗакрыть = Элементы.Найти("ФормаЗакрыть");
		Если ЭлементФормаЗакрыть <> Неопределено Тогда
			Форма.ТекущийЭлемент = ЭлементФормаЗакрыть;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗапомнитьДатыНачалаОкончания(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Элементы.ВыборПериода.ВыделенныеДаты.Количество() = 0 Тогда
		Форма.ДатаОкончания = Форма.ДатаНачала;
	Иначе
		
		Форма.ДатаНачала = Элементы.ВыборПериода.ВыделенныеДаты[0];
		Форма.ДатаОкончания = Элементы.ВыборПериода.ВыделенныеДаты[Элементы.ВыборПериода.ВыделенныеДаты.Количество() - 1];
		
		Если Форма.ДатаНачала > Форма.ДатаОкончания Тогда
			
			Форма.ДатаНачала = Форма.ДатаОкончания;
			Форма.ДатаОкончания = Элементы.ВыборПериода.ВыделенныеДаты[0];
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтметкуВыбранныхДат(Форма, ДатаНачала, ДатаОкончания, ДатаСеанса)
	
	Форма.Элементы.ВыборПериода.ВыделенныеДаты.Очистить();
	
	Если Не ЗначениеЗаполнено(ДатаНачала) Тогда
		ДатаНачала = Макс(ДатаСеанса, ДатаОкончания);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаОкончания) Тогда
		ДатаОкончания = ДатаНачала;
	КонецЕсли;
	
	ДатаСобытия = Мин(ДатаНачала, ДатаОкончания);
	Форма.Элементы.ВыборПериода.ВыделенныеДаты.Очистить();
	Пока ДатаСобытия <= Макс(ДатаНачала, ДатаОкончания) Цикл
		
		Форма.Элементы.ВыборПериода.ВыделенныеДаты.Добавить(ДатаСобытия);
		ДатаСобытия = КонецДня(ДатаСобытия) + 1;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

