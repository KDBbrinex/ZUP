
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЗарплатаКадрыКорпоративнаяПодсистемы") Тогда
		ИнициализироватьРеквизитыФормы();
		УстановитьСвойстваЭлементовФормы();
		КлючСохраненияПоложенияОкна = ?(ДанныеАктуальные, "КлючДанныеАктуальные", "КлючДанныеНеАктуальные");
	Иначе 
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)

	Если Модифицированность Тогда
		СохранитьНаКлиенте();
	Иначе
		ЗакрытьНаКлиенте();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИнформационнаяНадписьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, АктуальноеОснованиеПодписи, "ОснованиеПодписи, Должность, ДатаНачала, ДатаОкончания");
	
	УстановитьАктуальность();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьРеквизитыФормы()

	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Должность, ОснованиеПодписи, ФизическоеЛицо, Организация, ДатаСведений");
	
	Если Не ЗначениеЗаполнено(ДатаСведений) Тогда
		ДатаСведений = ТекущаяДатаСеанса();
	КонецЕсли;
	
	// выполним поиск основания полномочий на переданную дату
	НайденнаяСтруктура = РегистрыСведений.ОснованияПолномочийОтветственныхЛиц.ПолучитьОснованиеПолномочийНаДату(
		Организация, ФизическоеЛицо, ДатаСведений);
		
	МассивИсключаемыхНомеров = Новый Массив;
		
	Если НайденнаяСтруктура = Неопределено Тогда
		ДанныеАктуальные = Истина;
	Иначе
		ЗаполнитьЗначенияСвойств(АктуальноеОснованиеПодписи, НайденнаяСтруктура);
		Если НайденнаяСтруктура.Должность = Должность И НайденнаяСтруктура.ОснованиеПодписи = ОснованиеПодписи Тогда
			ДанныеАктуальные = Истина;
			ДатаНачала = НайденнаяСтруктура.ДатаНачала;
			ДатаОкончания = НайденнаяСтруктура.ДатаОкончания;
			МассивИсключаемыхНомеров.Добавить(НайденнаяСтруктура.НомерПоПорядку);
		КонецЕсли;
	КонецЕсли;

	ТаблицаОснований = РегистрыСведений.ОснованияПолномочийОтветственныхЛиц.ТаблицаПоследнихОснованийПолномочий(
		Организация, ФизическоеЛицо, МассивИсключаемыхНомеров);
	ОснованияПолномочийФизическогоЛица.Загрузить(ТаблицаОснований);
	
	Если ОснованияПолномочийФизическогоЛица.Количество() > 0 Тогда
		ВыводитьДругиеОснования = Истина;
		Для Каждого Строка Из ОснованияПолномочийФизическогоЛица Цикл
			ИмяКнопки = "ОснованиеПодписи_" + ОснованияПолномочийФизическогоЛица.Индекс(Строка);

			НоваяКоманда = Команды.Добавить(ИмяКнопки);
			НоваяКоманда.Действие = "ВыбратьОснованиеПолномочий";
			ЗаголовокКоманды = ?(ЗначениеЗаполнено(Строка.ОснованиеПодписи), Строка.ОснованиеПодписи, НСтр("ru = 'Не указано'"));
			НоваяКоманда.Заголовок = ЗаголовокКоманды;

			НоваяКнопка = Элементы.Добавить(ИмяКнопки, Тип("КнопкаФормы"), Элементы.ГруппаОснованияПолномочий);
			НоваяКнопка.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
			НоваяКнопка.ИмяКоманды = НоваяКоманда.Имя;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОснованиеПолномочий(Команда)

	Индекс = Число(Прав(Команда.Имя, СтрДлина(Команда.Имя) - Найти(Команда.Имя,"_")));
	Запись = ОснованияПолномочийФизическогоЛица[Индекс];

	ЗаполнитьЗначенияСвойств(ЭтаФорма, Запись, "Должность, ОснованиеПодписи, ДатаНачала, ДатаОкончания");
	ЗаполнитьЗначенияСвойств(АктуальноеОснованиеПодписи, Запись);

	УстановитьАктуальность();

КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваЭлементовФормы()

	УстановитьЗаголовокФормы();
	УстановитьВидимостьПредупреждения(ЭтаФорма);

	Элементы.ГруппаВыбратьДругоеОснование.Видимость = ВыводитьДругиеОснования;

КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()

	ФИО = СклонениеПредставленийОбъектов.ПросклонятьФИО(ФизическоеЛицо, 2);
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Реквизиты подписи для %1'"), ФИО);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьПредупреждения(Форма)

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ГруппаПредупреждение",
		"Видимость",
		Не Форма.ДанныеАктуальные);

КонецПроцедуры

&НаСервере
Процедура ЗаписатьОснованияПодписиНаСервере(Перезаписывать)

	ДанныеЗаписи = ПодписиДокументов.ДанныеЗаписиОснованияПолномочий();
	ДанныеЗаписи.Организация = Организация;
	ДанныеЗаписи.ФизическоеЛицо = ФизическоеЛицо;
	ДанныеЗаписи.НомерПоПорядку = АктуальноеОснованиеПодписи.НомерПоПорядку;
	ДанныеЗаписи.ОснованиеПодписи = ОснованиеПодписи;
	ДанныеЗаписи.Должность = Должность;
	ДанныеЗаписи.ДатаНачала = ДатаНачала;
	ДанныеЗаписи.ДатаОкончания = ДатаОкончания;

	ПодписиДокументов.ЗаписатьОснованияПолномочийОтветственныхЛиц(ДанныеЗаписи, Перезаписывать);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеОснования(Команда)

	Оповещение = Новый ОписаниеОповещения("ПоказатьВсеОснованияЗавершение", ЭтаФорма);

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ОрганизацияСсылка", Организация);
	ПараметрыФормы.Вставить("ФизическоеЛицо", ФизическоеЛицо);

	ОткрытьФорму("РегистрСведений.ОснованияПолномочийОтветственныхЛиц.ФормаСписка",
		ПараметрыФормы,,,,,Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеОснованияЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		ЗаполнитьОснованиеПолномочий(РезультатЗакрытия);
		УстановитьАктуальность();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОснованиеПолномочий(Ключ)

	Запись = РегистрыСведений.ОснованияПолномочийОтветственныхЛиц.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, Ключ);
	Запись.Прочитать();
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Запись, "Должность, ОснованиеПодписи, ДатаНачала, ДатаОкончания");
	ЗаполнитьЗначенияСвойств(АктуальноеОснованиеПодписи, Запись);

КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиенте()
	
	Если АктуальноеОснованиеПодписи.НомерПоПорядку > 0 Тогда
		Если АктуальноеОснованиеПодписи.ОснованиеПодписи <> ОснованиеПодписи
			И (АктуальноеОснованиеПодписи.ДатаНачала <> ДатаНачала
			ИЛИ АктуальноеОснованиеПодписи.ДатаОкончания <> ДатаОкончания) Тогда
			ЗапроситьРежимИзмененияОснованияПодписи();
		Иначе
			ЗаписатьОснованияПодписиНаСервере(Истина);
			ЗакрытьНаКлиенте();
		КонецЕсли;
	Иначе
		ЗаписатьОснованияПодписиНаСервере(Ложь);
		ЗакрытьНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьНаКлиенте()

	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Должность", Должность);
	СтруктураПараметров.Вставить("ОснованиеПодписи", ОснованиеПодписи);
	СтруктураПараметров.Вставить("Модифицированность", Модифицированность);

	Закрыть(СтруктураПараметров);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьАктуальность()

	Модифицированность = Истина;
	ДанныеАктуальные = Истина;
	УстановитьВидимостьПредупреждения(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияОснованияПодписи()

	ТекстКнопкиДа = НСтр("ru = 'Добавить новое основание'");
	
	ТекстДатаОснования = ?(ЗначениеЗаполнено(ДатаНачала),
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = ' с %1,'"), Формат(ДатаНачала, НСтр("ru='ДЛФ=''DD'''"))),
		"");
		
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'При редактировании изменено основание подписи. 
		|Если исправлена прежняя запись (она была ошибочной), нажмите ""Исправить это основание"".
		|Если у сотрудника изменилось основание подписи%1 нажмите ""%2""'"),
		ТекстДатаОснования,
		ТекстКнопкиДа);

	Кнопки = Новый СписокЗначений();
	Кнопки.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Исправить это основание'"));
	Кнопки.Добавить(КодВозвратаДиалога.Да, ТекстКнопкиДа);
	Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Отмена'"));
	
	Оповещение = Новый ОписаниеОповещения("ЗапроситьРежимИзмененияОснованияПодписиЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Отмена);

КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияОснованияПодписиЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Нет Тогда
		ЗаписатьОснованияПодписиНаСервере(Истина);
		СтруктураПараметров = Новый Структура;

		СтруктураПараметров.Вставить("Должность", Должность);
		СтруктураПараметров.Вставить("ОснованиеПодписи", ОснованиеПодписи);
		СтруктураПараметров.Вставить("Модифицированность", Модифицированность);

		Закрыть(СтруктураПараметров);
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьОснованияПодписиНаСервере(Ложь);
		СтруктураПараметров = Новый Структура;

		СтруктураПараметров.Вставить("Должность", Должность);
		СтруктураПараметров.Вставить("ОснованиеПодписи", ОснованиеПодписи);
		СтруктураПараметров.Вставить("Модифицированность", Модифицированность);

		Закрыть(СтруктураПараметров);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти