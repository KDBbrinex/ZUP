
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьНастройкиПоУмолчанию() Экспорт
	
	НаборЗаписей = РегистрыСведений.НастройкиСамообслуживанияСотрудников.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		НаборЗаписей.Добавить();
	КонецЕсли;
	
	СтрокаНабора = НаборЗаписей[0];
	
	СтрокаНабора.ИспользоватьЗаявкиНаОтпуск = Истина;
	СтрокаНабора.ИспользоватьСообщенияОбОтсутствии = Истина;
	СтрокаНабора.ИспользоватьЗаявкиНаКомандировку = Истина;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура СброситьНастройки() Экспорт
	
	НаборЗаписей = РегистрыСведений.НастройкиСамообслуживанияСотрудников.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		НаборЗаписей.Добавить();
	КонецЕсли;
	
	СтрокаНабора = НаборЗаписей[0];
	
	СтрокаНабора.ИспользоватьЗапросыСправокСотрудником = Ложь;
	СтрокаНабора.ИспользоватьЗаявкиНаЕдиновременнуюКомпенсацию = Ложь;
	СтрокаНабора.ИспользоватьЗаявкиНаКомандировку = Ложь;
	СтрокаНабора.ИспользоватьЗаявкиНаОтпуск = Ложь;
	СтрокаНабора.ИспользоватьМоеОбучениеРазвитие = Ложь;
	СтрокаНабора.ИспользоватьСообщенияОбОтсутствии = Ложь;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

Процедура ПеренестиНастройкиИспользованияРегламентныхЗаданийВКонстанты() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиРегистр.УдалитьИспользоватьРегламентноеЗаданиеДляЗапретаВходаВПрограммуУволенным КАК ИспользоватьРегламентноеЗаданиеДляЗапретаВходаВПрограммуУволенным,
		|	НастройкиРегистр.УдалитьИспользоватьСамообслуживаниеСотрудников КАК ИспользоватьСамообслуживаниеСотрудников,
		|	НастройкиРегистр.УдалитьИспользоватьСозданиеПользователейРегламентнымЗаданием КАК ИспользоватьСозданиеПользователейРегламентнымЗаданием
		|ИЗ
		|	РегистрСведений.НастройкиСамообслуживанияСотрудников КАК НастройкиРегистр
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
		|		ПО (НастройкиРегистр.УдалитьИспользоватьСамообслуживаниеСотрудников <> Константы.ИспользоватьСамообслуживаниеСотрудников
		|				ИЛИ НастройкиРегистр.УдалитьИспользоватьРегламентноеЗаданиеДляЗапретаВходаВПрограммуУволенным <> Константы.ЗапрещатьВходВПрограммуУволеннымСотрудникамАвтоматически
		|				ИЛИ НастройкиРегистр.УдалитьИспользоватьСозданиеПользователейРегламентнымЗаданием <> Константы.СоздаватьПользователейДляПринятыхНаРаботуСотрудниковАвтоматически)";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	МенеджерЗначения = Константы.ИспользоватьСамообслуживаниеСотрудников.СоздатьМенеджерЗначения();
	МенеджерЗначения.Прочитать();
	Если МенеджерЗначения.Значение <> Выборка.ИспользоватьСамообслуживаниеСотрудников Тогда
		МенеджерЗначения.Значение = Выборка.ИспользоватьСамообслуживаниеСотрудников;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(МенеджерЗначения);
	КонецЕсли;
	
	МенеджерЗначения = Константы.СоздаватьПользователейДляПринятыхНаРаботуСотрудниковАвтоматически.СоздатьМенеджерЗначения();
	МенеджерЗначения.Прочитать();
	Если МенеджерЗначения.Значение <> Выборка.ИспользоватьСозданиеПользователейРегламентнымЗаданием Тогда
		МенеджерЗначения.Значение = Выборка.ИспользоватьСозданиеПользователейРегламентнымЗаданием;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(МенеджерЗначения);
	КонецЕсли;
	
	МенеджерЗначения = Константы.ЗапрещатьВходВПрограммуУволеннымСотрудникамАвтоматически.СоздатьМенеджерЗначения();
	МенеджерЗначения.Прочитать();
	Если МенеджерЗначения.Значение <> Выборка.ИспользоватьРегламентноеЗаданиеДляЗапретаВходаВПрограммуУволенным Тогда
		МенеджерЗначения.Значение = Выборка.ИспользоватьРегламентноеЗаданиеДляЗапретаВходаВПрограммуУволенным;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(МенеджерЗначения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли


