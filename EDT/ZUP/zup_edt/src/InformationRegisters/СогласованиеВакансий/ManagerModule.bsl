#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура СогласоватьДлительнаяОперация(Параметры, АдресРезультата) Экспорт
	
	СогласованныеВакансии = УстановитьСостояниеСогласования(Параметры.Вакансии, Перечисления.СостоянияСогласования.Согласовано);
	
	ПоместитьВоВременноеХранилище(СогласованныеВакансии, АдресРезультата);
	
КонецПроцедуры

Процедура ОтклонитьДлительнаяОперация(Параметры, АдресРезультата) Экспорт
	
	ОтклоненныеВакансии = УстановитьСостояниеСогласования(Параметры.Вакансии, Перечисления.СостоянияСогласования.Отклонено);
	
	ПоместитьВоВременноеХранилище(ОтклоненныеВакансии, АдресРезультата);
	
КонецПроцедуры

Процедура ОтменитьРешениеДлительнаяОперация(Параметры, АдресРезультата) Экспорт
	
	ОбработанныеВакансии = УстановитьСостояниеСогласования(Параметры.Вакансии, Перечисления.СостоянияСогласования.Рассматривается);
	
	ПоместитьВоВременноеХранилище(ОбработанныеВакансии, АдресРезультата);
	
КонецПроцедуры

Функция УстановитьСостояниеСогласования(Вакансии, Состояние)
	
	Обработанные = Новый Массив;
	
	Для Каждого ВакансияЗаявка Из Вакансии Цикл
		ВакансияОбъект = ВакансияЗаявка.ПолучитьОбъект();
		ПроверитьУстановкуСостояния(ВакансияОбъект, Состояние);
		Если Не НачатьУстановкуСостояния(ВакансияЗаявка, Состояние) Тогда
			Продолжить;
		КонецЕсли;
		Попытка
			УстановитьСостояниеСогласованияВакансии(ВакансияОбъект, Состояние);
			ЗавершитьУстановкуСостояния();
		Исключение
			ОтменитьУстановкуСостояния();
			ЗарегистрироватьОшибкуУстановкиСостояния(ИнформацияОбОшибке(), ВакансияОбъект.Ссылка, Состояние, Ложь);
			ВызватьИсключение;
		КонецПопытки;
		Обработанные.Добавить(ВакансияЗаявка);
	КонецЦикла;
	
	Возврат Обработанные;
	
КонецФункции

// АПК:326-выкл. АПК "не видит", что транзакция на самом деле фиксируется в методе ЗавершитьУстановкуСостояния.
// АПК:325-выкл. АПК "не видит", что фиксируется транзакция, открытая в НачатьУстановкуСостояния.

Функция НачатьУстановкуСостояния(ВакансияСсылка, Состояние)
	
	БлокировкаДанных = Новый БлокировкаДанных();
	
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.СогласованиеВакансий");
	ЭлементБлокировки.УстановитьЗначение("Вакансия", ВакансияСсылка);
	
	НачатьТранзакцию();
	
	Попытка
		БлокировкаДанных.Заблокировать();
	Исключение
		ОтменитьУстановкуСостояния();
		ЗарегистрироватьОшибкуУстановкиСостояния(ИнформацияОбОшибке(), ВакансияСсылка.Ссылка, Состояние);
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

Процедура ЗавершитьУстановкуСостояния()
	ЗафиксироватьТранзакцию();
КонецПроцедуры

Процедура ОтменитьУстановкуСостояния()
	ОтменитьТранзакцию();
КонецПроцедуры

// АПК:326-вкл.
// АПК:325-вкл.

Процедура ПроверитьУстановкуСостояния(ВакансияОбъект, Состояние)
	
	Если Состояние <> Перечисления.СостоянияСогласования.Согласовано Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ВакансияОбъект.ПроверитьЗаполнение() Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось согласовать %1, ошибка проверки заполнения.'"),
			ВакансияОбъект.Ссылка);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьСостояниеСогласованияВакансии(ВакансияОбъект, Состояние)
	
	ТребуетсяСогласование = Истина;
	
	НаборЗаписей = РегистрыСведений.СогласованиеВакансий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Вакансия.Установить(ВакансияОбъект.Ссылка);
	
	ДанныеСогласования = НаборЗаписей.Добавить();
	
	СогласованиеВакансий.ЗаполнитьДанныеСогласованияВакансии(ВакансияОбъект, ДанныеСогласования, ТребуетсяСогласование);
	
	Если Не ТребуетсяСогласование Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Вакансия %1 не требует согласования.'"),
			ВакансияОбъект.Ссылка);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ДанныеСогласования.СостояниеСогласования = Состояние;
	ДанныеСогласования.Рассмотрел = Пользователи.ТекущийПользователь();
	ДанныеСогласования.ДатаРассмотрения = ТекущаяДатаСеанса();
	
	СогласованиеВакансий.ПриУстановкеСостоянияСогласованияВакансии(ВакансияОбъект, ДанныеСогласования);
	
	УстановитьПривилегированныйРежим(Истина);
	НаборЗаписей.Записать();
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ЗарегистрироватьОшибкуУстановкиСостояния(ИнформацияОбОшибке, ОбъектСсылка, Состояние, ПоказыватьСообщения = Истина)
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Не удалось обработать %1 по причине:
              |%2'"),
		ОбъектСсылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
		
	ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Согласование вакансий.'", ОбщегоНазначения.КодОсновногоЯзыка()) + Строка(Состояние), 
		УровеньЖурналаРегистрации.Ошибка, 
		ОбъектСсылка.Метаданные(),
		ОбъектСсылка,
		ТекстСообщения);
		
	Если ПоказыватьСообщения Тогда
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьСведенияСогласования(ПараметрыОбновления) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	Заявки.Ссылка КАК Вакансия,
		|	Заявки.Дата КАК Дата,
		|	Заявки.УдалитьСостояние КАК СостояниеСогласования,
		|	Заявки.УдалитьРассмотрел КАК Рассмотрел,
		|	Заявки.УдалитьДатаРассмотрения КАК ДатаРассмотрения
		|ИЗ
		|	Документ.ЗаявкаНаПодборПерсонала КАК Заявки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СогласованиеВакансий КАК СогласованиеВакансий
		|		ПО (СогласованиеВакансий.Вакансия = Заявки.Ссылка)
		|ГДЕ
		|	СогласованиеВакансий.Вакансия ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 100
		|	Вакансии.Ссылка,
		|	Вакансии.ДатаОткрытия,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	Справочник.Вакансии КАК Вакансии
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СогласованиеВакансий КАК СогласованиеВакансий
		|		ПО (СогласованиеВакансий.Вакансия = Вакансии.Ссылка)
		|ГДЕ
		|	Вакансии.Основание = ЗНАЧЕНИЕ(Документ.ЗаявкаНаПодборПерсонала.ПустаяСсылка)
		|	И СогласованиеВакансий.Вакансия ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ПараметрыОбновления.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	ПараметрыОбновления.ОбработкаЗавершена = Ложь;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(
				ПараметрыОбновления, 
				"РегистрСведений.СогласованиеВакансий", 
				"Вакансия", 
				Выборка.Вакансия) Тогда
			Продолжить;
		КонецЕсли;
		ТребуетсяСогласование = Истина;
		ОбъектСогласования = Выборка.Вакансия.ПолучитьОбъект();
		НаборЗаписей = РегистрыСведений.СогласованиеВакансий.СоздатьНаборЗаписей();
		ДанныеСогласования = НаборЗаписей.Добавить();
		СогласованиеВакансий.ЗаполнитьДанныеСогласованияВакансии(ОбъектСогласования, ДанныеСогласования, ТребуетсяСогласование);
		Если ЗначениеЗаполнено(Выборка.СостояниеСогласования) Тогда
			ЗаполнитьЗначенияСвойств(ДанныеСогласования, Выборка);
		КонецЕсли;
		НаборЗаписей.Отбор.Вакансия.Установить(Выборка.Вакансия);
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли

