#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.ВключитьПодписку Тогда
		Элементы.Список.Заголовок = НСтр("ru = 'Сотрудники, для которых требуется включить подписку на уведомления об изменении состояний ЭЛН'");
		Элементы.ФормаИзменитьПодписку.Заголовок = НСтр("ru = 'Включить подписку'");
		Элементы.Подтверждаю.Видимость = Истина;
		Элементы.ФормаИзменитьПодписку.Доступность = Ложь;
		Элементы.ФормаИзменитьПодписку.КнопкаПоУмолчанию = Ложь;
	Иначе
		Элементы.Список.Заголовок = НСтр("ru = 'Сотрудники, для которых требуется отключить подписку на уведомления об изменении состояний ЭЛН'");
		Элементы.ФормаИзменитьПодписку.Заголовок = НСтр("ru = 'Отключить подписку'");
		Подтверждаю = Истина;
		Элементы.Подтверждаю.Видимость = Ложь;
		Элементы.ФормаИзменитьПодписку.Доступность = Истина;
		Элементы.ФормаИзменитьПодписку.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
	ЭлементУО = ОбщегоНазначенияБЗК.ДобавитьУсловноеОформление(ЭтотОбъект, "СписокСтраховойНомерПФР");
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ЭлементУО, "Текст", НСтр("ru = '<Не заполнен>'"));
	ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ЭлементУО, "Список.СтраховойНомерПФР", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	
	ЭлементУО = ОбщегоНазначенияБЗК.ДобавитьУсловноеОформление(ЭтотОбъект, "СписокИндексКартинки, СписокКратко");
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ЭлементУО, "Видимость", Ложь);
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ЭлементУО, "Отображать", Ложь);
	ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ЭлементУО, "Список.ПоказыватьРезультат", "=", Ложь);
	
	ЭлементУО = ОбщегоНазначенияБЗК.ДобавитьУсловноеОформление(ЭтотОбъект, "СписокИспользование");
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ЭлементУО, "Видимость", Ложь);
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ЭлементУО, "Отображать", Ложь);
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ЭлементУО, "Доступность", Ложь);
	ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ЭлементУО, "Список.ПоказыватьРезультат", "=", Истина);
	ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ЭлементУО, "Список.Использование", "=", Ложь);
	
	ЗаполнитьСписок("ПриСозданииНаСервере");
	
	Если Параметры.ВключитьПодписку Тогда
		Если Список.Количество() > 1 Тогда
			Заголовок = НСтр("ru = 'Включение подписок на уведомления об изменении состояний ЭЛН в ФСС'");
		Иначе
			Заголовок = НСтр("ru = 'Включение подписки на уведомления об изменении состояний ЭЛН в ФСС'");
		КонецЕсли;
	Иначе
		Если Список.Количество() > 1 Тогда
			Заголовок = НСтр("ru = 'Отключение подписок на уведомления об изменении состояний ЭЛН в ФСС'");
		Иначе
			Заголовок = НСтр("ru = 'Отключение подписки на уведомления об изменении состояний ЭЛН в ФСС'");
		КонецЕсли;
	КонецЕсли;
	
	КлючСохраненияПоложенияОкна = 
		Формат(Элементы.Подтверждаю.Видимость, "БЛ=0; БИ=1")
		+ Формат(Элементы.Организация.Видимость, "БЛ=0; БИ=1");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не Параметры.ВключитьПодписку И Параметры.ЗаполнитьПоДаннымУчета И Список.Количество() = 0 Тогда
		Отказ = Истина;
		ПоказатьОповещениеПользователя(НСтр("ru = 'Отключать подписки на ЭЛН не требуется'"), , , БиблиотекаКартинок.Информация32);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_СогласиеНаУведомлениеОбЭЛН"
		Или ИмяСобытия = "Запись_ОтзывСогласияНаУведомлениеОбЭЛН"
		Или ИмяСобытия = "Запись_Увольнение"
		Или ИмяСобытия = "Запись_УвольнениеСписком"
		Или ИмяСобытия = "Запись_ФизическиеЛица"
		Или ИмяСобытия = "Запись_Сотрудники" Тогда
		ОтключитьОбработчикОжидания("ЗаполнитьСписокНаКлиенте");
		ПодключитьОбработчикОжидания("ЗаполнитьСписокНаКлиенте", 0.1, Истина);
	ИначеЕсли ИмяСобытия = СЭДОФССКлиент.ИмяСобытияПослеПолученияСообщенийОтФСС() Тогда
		ПроверитьНаличиеОтветовОтФСС();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПодтверждаюПриИзменении(Элемент)
	Элементы.ФормаИзменитьПодписку.Доступность = Подтверждаю;
	Элементы.ФормаИзменитьПодписку.КнопкаПоУмолчанию = Подтверждаю;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(ТаблицаФормы, ИдентификаторСтроки, ПолеФормы, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлементСписка = ТаблицаФормы.ДанныеСтроки(ИдентификаторСтроки);
	Если ЭлементСписка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ПолеФормы = Элементы.СписокСтраховойНомерПФР Тогда
		ПоказатьЗначение(, ЭлементСписка.Сотрудник);
	ИначеЕсли ПолеФормы = Элементы.СписокСогласие Тогда
		Если ЗначениеЗаполнено(ЭлементСписка.Согласие) Тогда
			СЭДОФССКлиент.ОткрытьСогласие(ЭлементСписка.Согласие);
		КонецЕсли;
	ИначеЕсли ПолеФормы = Элементы.СписокДатаОтзываСогласия
		Или ПолеФормы = Элементы.СписокОснованиеОтзываСогласия Тогда
		Если ЗначениеЗаполнено(ЭлементСписка.ОснованиеОтзываСогласия) Тогда
			ПоказатьЗначение(, ЭлементСписка.ОснованиеОтзываСогласия);
		КонецЕсли;
	ИначеЕсли ПолеФормы = Элементы.СписокКратко
		Или ПолеФормы = Элементы.СписокИндексКартинки Тогда
		Если ЭлементСписка.Подробно = "{ОткрытьСогласие}" Тогда
			СЭДОФССКлиент.ОткрытьСогласие(ЭлементСписка.Согласие, ЭлементСписка.Организация, ЭлементСписка.Сотрудник);
		Иначе
			Если ЭлементСписка.ИндексКартинки = 5 Тогда
				ЗаголовокТекста = НСтр("ru = 'Подробная информация об ошибке'");
				Картинка = БиблиотекаКартинок.Предупреждение32;
			Иначе
				ЗаголовокТекста = НСтр("ru = 'Подробная информация'");
				Картинка = БиблиотекаКартинок.Успешно32;
			КонецЕсли;
			Текст = ?(ЗначениеЗаполнено(ЭлементСписка.Подробно), ЭлементСписка.Подробно, ЭлементСписка.Кратко);
			ИнформированиеПользователяКлиент.ПоказатьПодробности(Текст, ЗаголовокТекста, Картинка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВключитьВсе(Команда)
	Для Каждого ЭлементСписка Из Список Цикл
		Если ЭлементСписка.ПоказыватьРезультат Тогда
			Продолжить;
		КонецЕсли;
		ЭлементСписка.Использование = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсе(Команда)
	Для Каждого ЭлементСписка Из Список Цикл
		ЭлементСписка.Использование = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПодписку(Команда)
	Если Не Подтверждаю Тогда
		ТекстОшибки = НСтр("ru = 'Требуется подтверждение'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "Подтверждаю");
		Возврат;
	КонецЕсли;
	
	// Дата отправки для пользователя - момент нажатия на кнопку.
	ДатаОтправки = ОбщегоНазначенияКлиент.ДатаСеанса();
	
	Контекст = Новый Структура("Организации", Новый Массив);
	
	ОрганизацииИСНИЛСы = Новый Соответствие;
	ОтправляемыеСтроки = Список.НайтиСтроки(Новый Структура("Использование, ЗапросОтправлен", Истина, Ложь));
	Для Каждого ЭлементСписка Из ОтправляемыеСтроки Цикл
		СНИЛСы = ОрганизацииИСНИЛСы[ЭлементСписка.Организация];
		Если СНИЛСы = Неопределено Тогда
			СНИЛСы = Новый Массив;
			ОрганизацииИСНИЛСы.Вставить(ЭлементСписка.Организация, СНИЛСы);
			Контекст.Организации.Добавить(ЭлементСписка.Организация);
		КонецЕсли;
		СНИЛСы.Добавить(УчетПособийСоциальногоСтрахованияКлиентСервер.СНИЛСВФорматеФСС(ЭлементСписка.СтраховойНомерПФР));
		ЭлементСписка.ЗапросОтправлен = Истина;
		ЭлементСписка.ПоказыватьРезультат = Истина;
	КонецЦикла;
	
	Обработчик = Новый ОписаниеОповещения("ПослеОтправкиЗапросовВФСС", ЭтотОбъект, Контекст);
	Если Параметры.ВключитьПодписку Тогда
		ЭлектронныйДокументооборотСФССКлиент.ПодписатьСотрудниковОрганизацийНаУведомленияПоЭЛН(Обработчик, ОрганизацииИСНИЛСы);
	Иначе
		ЭлектронныйДокументооборотСФССКлиент.ОтписатьСотрудниковОрганизацийОтУведомленийПоЭЛН(Обработчик, ОрганизацииИСНИЛСы);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьСписокНаКлиенте()
	ЗаполнитьСписок("ЗаполнитьСписокНаКлиенте");
	Отказ = Ложь;
	ПриОткрытии(Отказ);
	Если Отказ И Открыта() Тогда
		Закрыть(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписок(ИмяСобытия)
	Если Параметры.ЗаполнитьПоДаннымУчета Тогда
		Если Параметры.ВключитьПодписку Тогда
			Требования = РегистрыСведений.СогласияНаУведомленияОбЭЛН.ТребованияПоВключениюПодписокНаЭЛН();
		Иначе
			Требования = РегистрыСведений.СогласияНаУведомленияОбЭЛН.ТребованияПоОтключениюПодписокНаЭЛН();
		КонецЕсли;
		МассивСотрудников = Требования.ВыгрузитьКолонку("Сотрудник");
	ИначеЕсли ИмяСобытия = "ПриСозданииНаСервере" Тогда
		МассивОснований = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "МассивОснований");
		Если ТипЗнч(МассивОснований) = Тип("СправочникСсылка.Сотрудники") Тогда
			МассивСотрудников = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(МассивОснований);
		ИначеЕсли ТипЗнч(МассивОснований[0]) = Тип("СправочникСсылка.Сотрудники") Тогда
			МассивСотрудников = МассивОснований;
		ИначеЕсли ТипЗнч(МассивОснований[0]) = Тип("ДокументСсылка.СогласиеНаУведомлениеОбЭЛН") Тогда
			МассивСотрудников = Новый Массив;
			ЗначениеРеквизитаОбъектов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивОснований, "Сотрудник");
			Для Каждого КлючИЗначение Из ЗначениеРеквизитаОбъектов Цикл
				МассивСотрудников.Добавить(КлючИЗначение.Значение);
			КонецЦикла;
		Иначе
			МассивСотрудников = Неопределено;
		КонецЕсли;
	Иначе
		МассивСотрудников = Список.Выгрузить().ВыгрузитьКолонку("Сотрудник");
	КонецЕсли;
	Если МассивСотрудников = Неопределено Или МассивСотрудников.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, МассивСотрудников, "Организация, СтраховойНомерПФР", ТекущаяДатаСеанса());
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КадровыеДанные.Организация КАК Организация,
	|	КадровыеДанные.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	КадровыеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
	|	КадровыеДанные.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТКадровыеДанные
	|ИЗ
	|	&КадровыеДанные КАК КадровыеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТКадровыеДанные.Сотрудник КАК Сотрудник,
	|	ВТКадровыеДанные.Организация КАК Организация,
	|	ВТКадровыеДанные.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	ИСТИНА КАК Использование,
	|	ЛОЖЬ КАК ПоказыватьРезультат,
	|	0 КАК ИндексКартинки,
	|	ВЫБОР
	|		КОГДА СогласияНаУведомленияОбЭЛН.ДатаОтзываСогласия ЕСТЬ NULL
	|				ИЛИ СогласияНаУведомленияОбЭЛН.ДатаОтзываСогласия = &МаксимальнаяДата
	|			ТОГДА &ПустаяДата
	|		ИНАЧЕ СогласияНаУведомленияОбЭЛН.ДатаОтзываСогласия
	|	КОНЕЦ КАК ДатаОтзываСогласия,
	|	ВЫБОР
	|		КОГДА СогласияНаУведомленияОбЭЛН.Подписано
	|			ТОГДА СогласияНаУведомленияОбЭЛН.Согласие
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.СогласиеНаУведомлениеОбЭЛН.ПустаяСсылка)
	|	КОНЕЦ КАК Согласие,
	|	СогласияНаУведомленияОбЭЛН.Состояние КАК Состояние,
	|	СогласияНаУведомленияОбЭЛН.ОснованиеОтзываСогласия КАК ОснованиеОтзываСогласия,
	|	СогласияНаУведомленияОбЭЛН.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТКадровыеДанные КАК ВТКадровыеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СогласияНаУведомленияОбЭЛН КАК СогласияНаУведомленияОбЭЛН
	|		ПО (СогласияНаУведомленияОбЭЛН.Сотрудник = ВТКадровыеДанные.Сотрудник)
	|			И (СогласияНаУведомленияОбЭЛН.Организация = ВТКадровыеДанные.Организация)";
	
	Запрос.УстановитьПараметр("КадровыеДанные", КадровыеДанные);
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	Запрос.УстановитьПараметр("МаксимальнаяДата", НачалоДня(ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата()));
	
	ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
	Список.Загрузить(ТаблицаЗначений);
	Для Каждого ЭлементСписка Из Список Цикл
		Если Не РегламентированныеДанныеКлиентСервер.СтраховойНомерПФРСоответствуетТребованиям(
				ЭлементСписка.СтраховойНомерПФР,
				ЭлементСписка.Кратко) Тогда
			ЭлементСписка.Использование = Ложь;
			ЭлементСписка.ПоказыватьРезультат = Истина;
			ЭлементСписка.ИндексКартинки = 5;
		ИначеЕсли Параметры.ВключитьПодписку
			И ЭлементСписка.Состояние <> Перечисления.СостоянияСогласийНаУведомленияОбЭЛН.Подписано Тогда
			Если ЗначениеЗаполнено(ЭлементСписка.Состояние) Тогда
				ЭлементСписка.Кратко = СтрШаблон(НСтр("ru = 'Согласие %1'"), НРег(Строка(ЭлементСписка.Состояние)));
			Иначе
				ЭлементСписка.Кратко = НСтр("ru = 'Не оформлено согласие сотрудника на уведомление об ЭЛН'");
			КонецЕсли;
			ЭлементСписка.Подробно = "{ОткрытьСогласие}";
			ЭлементСписка.Использование = Ложь;
			ЭлементСписка.ПоказыватьРезультат = Истина;
			ЭлементСписка.ИндексКартинки = 5;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаЗначений.Свернуть("Организация");
	Организации = ТаблицаЗначений.ВыгрузитьКолонку("Организация");
	Если Организации.Количество() = 1 Тогда
		Элементы.Организация.Видимость = Истина;
		Элементы.СписокОрганизация.Видимость = Ложь;
		Организация = Организации[0];
	Иначе
		Элементы.Организация.Видимость = Ложь;
		Элементы.СписокОрганизация.Видимость = Истина;
	КонецЕсли;
	
	Если Элементы.Подтверждаю.Видимость Тогда
		Если Список.Количество() <= 1 Тогда
			Элементы.Подтверждаю.Заголовок = 
				НСтр("ru = 'Подтверждаю получение согласия от сотрудника на получение оповещения.
					|Обязуюсь в течении одного рабочего для с момента увольнения сотрудника отключить подписку по нему.
					|Принимаю условия об отключении от сервиса в случае выявления нарушений.'");
		Иначе
			Элементы.Подтверждаю.Заголовок = 
				НСтр("ru = 'Подтверждаю получение согласия от сотрудников на получение оповещения.
					|Обязуюсь в течении одного рабочего для с момента увольнения сотрудника отключить подписку по нему.
					|Принимаю условия об отключении от сервиса в случае выявления нарушений.'");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтправкиЗапросовВФСС(РезультатыОтправкиЗапросов, Контекст) Экспорт
	ПослеОтправкиЗапросовВФССНаСервере(РезультатыОтправкиЗапросов, Контекст);
	Если РезультатыОтправкиЗапросов.БылиОшибки Тогда
		ИнформированиеПользователяКлиент.ПоказатьПодробности(
			СтрСоединить(РезультатыОтправкиЗапросов.Ошибки, Символы.ПС + Символы.ПС),
			НСтр("ru = 'Информация об ошибках'"),
			БиблиотекаКартинок.Предупреждение32);
	Иначе
		СЭДОФССКлиент.ПолучитьСообщенияИзФСС(Контекст.Организации);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеОтправкиЗапросовВФССНаСервере(Знач РезультатыОтправкиЗапросов, Контекст)
	Если Параметры.ВключитьПодписку Тогда
		ТекстЖурнала = НСтр("ru = 'Результат отправки запрос в ФСС от имени организации %1 на включение подписки на уведомления об ЭЛН:'");
	Иначе
		ТекстЖурнала = НСтр("ru = 'Результат отправки запрос в ФСС от имени организации %1 на отключение подписки на уведомления об ЭЛН:'");
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из РезультатыОтправкиЗапросов.РезультатыОперации Цикл
		Организация = КлючИЗначение.Ключ;
		РезультатСвязиСФСС = КлючИЗначение.Значение;
		
		ШаблонЗаполнения = Новый Структура("Успех, Использование, Кратко, Подробно, ИндексКартинки");
		ШаблонЗаполнения.Успех = РезультатСвязиСФСС.Выполнено;
		ШаблонЗаполнения.Использование = Не ШаблонЗаполнения.Успех;
		ШаблонЗаполнения.Подробно = СокрЛП(РезультатСвязиСФСС.ОписаниеОшибки);
		ШаблонЗаполнения.Кратко = СтрПолучитьСтроку(ШаблонЗаполнения.Подробно, СтрЧислоСтрок(ШаблонЗаполнения.Подробно));
		Если ШаблонЗаполнения.Успех Тогда
			Если Параметры.ВключитьПодписку Тогда
				ШаблонЗаполнения.ИндексКартинки = 3;
			Иначе
				ШаблонЗаполнения.ИндексКартинки = 4;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ШаблонЗаполнения.Кратко) Тогда
				ШаблонЗаполнения.Кратко = НСтр("ru = 'Запрос успешно отправлен. Ожидается ответ от ФСС.'");
			КонецЕсли;
			ТекстЖурнала = ТекстЖурнала + ШаблонЗаполнения.Кратко;
		Иначе
			ШаблонЗаполнения.ИндексКартинки = 5;
			ТекстЖурнала = ТекстЖурнала + ШаблонЗаполнения.Подробно;
		КонецЕсли;
		
		МассивСотрудников = Новый Массив;
		ОтправляемыеСтроки = Список.НайтиСтроки(Новый Структура("Использование, ЗапросОтправлен, Организация", Истина, Истина, Организация));
		Для Каждого ЭлементСписка Из ОтправляемыеСтроки Цикл
			
			ЗаполнитьЗначенияСвойств(ЭлементСписка, ШаблонЗаполнения);
			
			МассивСотрудников.Добавить(ЭлементСписка.Сотрудник);
			
			ЗаписьЖурналаРегистрации(
				СЭДОФСС.ИмяСобытияЖурнала(),
				УровеньЖурналаРегистрации.Информация,
				Метаданные.Справочники.Сотрудники,
				ЭлементСписка.Сотрудник,
				СтрШаблон(ТекстЖурнала, ЭлементСписка.Организация));
			
		КонецЦикла;
		
		Если РезультатСвязиСФСС.Выполнено Тогда
			РегистрыСведений.ПодпискиНаУведомленияОбЭЛН.ПослеОтправкиЗапросаНаИзменениеПодписки(
				Организация,
				МассивСотрудников,
				ДатаОтправки,
				Параметры.ВключитьПодписку,
				РезультатСвязиСФСС.ИдентификаторЗапроса);
		КонецЕсли;
		
		// Подготовка к отображению результата.
		Если Список.НайтиСтроки(Новый Структура("Использование, ЗапросОтправлен", Истина, Ложь)).Количество() = 0 Тогда
			Элементы.СписокСтраховойНомерПФР.Видимость = Ложь;
			Элементы.СписокСогласие.Видимость = Ложь;
			Элементы.СписокДатаОтзываСогласия.Видимость = Ложь;
			Элементы.СписокОснованиеОтзываСогласия.Видимость = Ложь;
			Элементы.ФормаОтмена.Видимость = Ложь;
			Элементы.ФормаЗакрыть.Видимость = Истина;
			Элементы.ФормаИзменитьПодписку.Видимость = Ложь;
			Элементы.ТаблицаФормыВключитьВсе.Видимость = Ложь;
			Элементы.ТаблицаФормыОтключитьВсе.Видимость = Ложь;
			Элементы.СписокИспользование.Видимость = Ложь;
			Элементы.Подтверждаю.Видимость = Ложь;
			Элементы.Список.ОтборСтрок = Новый ФиксированнаяСтруктура("ЗапросОтправлен", Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьНаличиеОтветовОтФСС()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Список.Организация КАК Организация,
	|	Список.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТСписок
	|ИЗ
	|	&Список КАК Список
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодпискиНаУведомленияОбЭЛН.Сотрудник КАК Сотрудник,
	|	ПодпискиНаУведомленияОбЭЛН.Организация КАК Организация
	|ИЗ
	|	ВТСписок КАК ВТСписок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПодпискиНаУведомленияОбЭЛН КАК ПодпискиНаУведомленияОбЭЛН
	|		ПО ВТСписок.Сотрудник = ПодпискиНаУведомленияОбЭЛН.Сотрудник
	|			И ВТСписок.Организация = ПодпискиНаУведомленияОбЭЛН.Организация
	|ГДЕ
	|	ПодпискиНаУведомленияОбЭЛН.ДатаОтправки = &ДатаОтправкиЗагруженногоСообщения
	|	И ПодпискиНаУведомленияОбЭЛН.Действует = ПодпискиНаУведомленияОбЭЛН.БудетДействовать";
	Запрос.УстановитьПараметр("Список", Список.Выгрузить(Новый Структура("Успех", Истина), "Сотрудник, Организация"));
	Запрос.УстановитьПараметр("ДатаОтправкиЗагруженногоСообщения", РегистрыСведений.ПодпискиНаУведомленияОбЭЛН.ДатаОтправкиЗагруженногоСообщения());
	
	Если Параметры.ВключитьПодписку Тогда
		Кратко = НСтр("ru = 'Подписка включена.'");
	Иначе
		Кратко = НСтр("ru = 'Подписка отключена.'");
	КонецЕсли;
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Фильтр = Новый Структура("Сотрудник, Организация");
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		ЗаполнитьЗначенияСвойств(Фильтр, СтрокаТаблицы);
		Найденные = Список.НайтиСтроки(Фильтр);
		Для Каждого ЭлементСписка Из Найденные Цикл
			ЭлементСписка.Кратко = Кратко;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
