
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

#Область РегистрацияФизическихЛиц

Функция РеквизитГоловнаяОрганизация() Экспорт
	Возврат Метаданные.РегистрыСведений.ОбновлениеПериодическихМедицинскихОсмотров.Измерения.ГоловнаяОрганизация.Имя;
КонецФункции

Функция РеквизитФизическоеЛицо() Экспорт
	Возврат Метаданные.РегистрыСведений.ОбновлениеПериодическихМедицинскихОсмотров.Измерения.ФизическоеЛицо.Имя;
КонецФункции

#КонецОбласти

#Область ОбменДанными

// Пересчитывает зависимые данные после загрузки сообщения обмена
//
// Параметры:
//		ЗависимыеДанные - ТаблицаЗначений:
//			* ВедущиеМетаданные - ОбъектМетаданных - Метаданные ведущих данных
//			* ЗависимыеМетаданные - ОбъектМетаданных - Метаданные текущего объекта
//			* ВедущиеДанные - Массив объектов, заполненный при загрузке сообщения обмена
//				по этим объектам требуется обновить зависимые данные
//
Процедура ОбновитьЗависимыеДанныеПослеЗагрузкиОбменаДанными(ЗависимыеДанные) Экспорт
	
	ТаблицаОбновления = МедицинскиеОсмотры.НоваяТаблицаОбновлениеПериодическихОсмотров();
	
	ФизическиеЛица = Новый Массив;
	Для Каждого СтрокаТаблицы Из ЗависимыеДанные Цикл
		Если СтрокаТаблицы.ВедущиеМетаданные = Метаданные.Справочники.ФизическиеЛица Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛица, 
				ОбщегоНазначения.ВыгрузитьКолонку(СтрокаТаблицы.ВедущиеДанные, "Ссылка"), Истина);
			Продолжить;
		КонецЕсли;
		ЗаполнитьТаблицуОбновленияПоКадровойИстории(ТаблицаОбновления, СтрокаТаблицы);
		ЗаполнитьТаблицуОбновленияПоРезультатамМедицинскихОсмотров(ТаблицаОбновления, СтрокаТаблицы);
		ЗаполнитьТаблицуОбновленияПоПериодичностиОсмотров(ТаблицаОбновления, СтрокаТаблицы);
	КонецЦикла;
	
	МедицинскиеОсмотры.ЗаполнитьТаблицуОбновленияПериодическихОсмотровПоФизическимЛицам(ТаблицаОбновления, ФизическиеЛица);
	
	МедицинскиеОсмотры.ЗарегистрироватьОбновлениеПериодическихОсмотров(ТаблицаОбновления);
	МедицинскиеОсмотры.ЗапуститьОбновлениеПериодическихОсмотров();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьТаблицуОбновленияПоКадровойИстории(ТаблицаОбновления, СтрокаТаблицы)
	
	Если СтрокаТаблицы.ВедущиеМетаданные <> Метаданные.РегистрыСведений.КадроваяИсторияСотрудников Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого НаборЗаписей Из СтрокаТаблицы.ВедущиеДанные Цикл
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НаборЗаписей.ДополнительныеСвойства.ТаблицаОбновлениеПериодическихОсмотров, ТаблицаОбновления);
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьТаблицуОбновленияПоРезультатамМедицинскихОсмотров(ТаблицаОбновления, СтрокаТаблицы)
	
	Если СтрокаТаблицы.ВедущиеМетаданные <> Метаданные.РегистрыСведений.МедицинскиеОсмотры Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого НаборЗаписей Из СтрокаТаблицы.ВедущиеДанные Цикл
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НаборЗаписей.ДополнительныеСвойства.ТаблицаОбновлениеПериодическихОсмотров, ТаблицаОбновления);
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьТаблицуОбновленияПоПериодичностиОсмотров(ТаблицаОбновления, СтрокаТаблицы)
	
	Если СтрокаТаблицы.ВедущиеМетаданные <> Метаданные.РегистрыСведений.ПериодичностьМедицинскихОсмотровПозицииШтатногоРасписания Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого НаборЗаписей Из СтрокаТаблицы.ВедущиеДанные Цикл
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НаборЗаписей.ДополнительныеСвойства.ТаблицаОбновлениеПериодическихОсмотров, ТаблицаОбновления);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
