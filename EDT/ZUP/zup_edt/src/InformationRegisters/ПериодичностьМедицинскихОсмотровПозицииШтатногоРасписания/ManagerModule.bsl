
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК Т
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодчиненностьПодразделенийОрганизаций КАК Т2 
	|	ПО Т2.Подразделение = Т.Позиция.Подразделение
	|;
	|РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Т2.ВышестоящееПодразделение)
	|	И ЗначениеРазрешено(Т.Позиция.Владелец)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьОбновлениеЗависимыхДанныхПриОбменеПередЗаписью(Объект) Экспорт
	СохранитьПрежнийНаборЗаписей(Объект);
КонецПроцедуры

Процедура ПодготовитьОбновлениеЗависимыхДанныхПриОбменеПриЗаписи(Объект) Экспорт
	ЗаполнитьТаблицуОбновления(Объект);
КонецПроцедуры

Процедура СохранитьПрежнийНаборЗаписей(Объект) Экспорт
	
	Если Объект.Отбор["Позиция"].Использование = Ложь Или Не ЗначениеЗаполнено(Объект.Отбор.Позиция.Значение) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Позиция", Объект.Отбор.Позиция.Значение);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеНабора.Позиция КАК Позиция,
		|	ДанныеНабора.КратностьОсмотра КАК КратностьОсмотра,
		|	ДанныеНабора.ПериодичностьОсмотра КАК ПериодичностьОсмотра,
		|	ДанныеНабора.ЕдиницаПериодичностиОсмотра КАК ЕдиницаПериодичностиОсмотра,
		|	ДанныеНабора.ПредставлениеПериодичностиОсмотра КАК ПредставлениеПериодичностиОсмотра
		|ИЗ
		|	РегистрСведений.ПериодичностьМедицинскихОсмотровПозицииШтатногоРасписания КАК ДанныеНабора
		|ГДЕ
		|	ДанныеНабора.Позиция = &Позиция";
	
	Объект.ДополнительныеСвойства.Вставить("ПрежнийНабор", Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуОбновления(Объект) Экспорт
	
	ТаблицаОбновления = МедицинскиеОсмотры.НоваяТаблицаОбновлениеПериодическихОсмотров();
	Объект.ДополнительныеСвойства.Вставить("ТаблицаОбновлениеПериодическихОсмотров", ТаблицаОбновления);
	
	Если Не Объект.ДополнительныеСвойства.Свойство("ПрежнийНабор") Тогда
		Возврат;
	КонецЕсли;
	
	ПрежнийНабор = Объект.ДополнительныеСвойства["ПрежнийНабор"];
	
	Если ОбщегоНазначения.КоллекцииИдентичны(ПрежнийНабор, Объект) Тогда
		Возврат;
	КонецЕсли;
	
	ПозицииМассив = Объект.ВыгрузитьКолонку("Позиция");
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПозицииМассив, ПрежнийНабор.ВыгрузитьКолонку("Позиция"), Истина);
	
	ТаблицаОбновления = ФизическиеЛицаРаботающиеНаПозициях(ПозицииМассив);
	
	Объект.ДополнительныеСвойства.Вставить("ТаблицаОбновлениеПериодическихОсмотров", ТаблицаОбновления);
	
КонецПроцедуры

Функция ФизическиеЛицаРаботающиеНаПозициях(Позиции)
	
	ПараметрыЗапроса = КадровыйУчет.ПараметрыДляЗапросВТРабочиеМестаСотрудниковПоСпискуСотрудников();
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыЗапроса.Отборы, "ДолжностьПоШтатномуРасписанию", "В", Позиции);
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	УстановитьПривилегированныйРежим(Истина);
	КадровыйУчет.СоздатьВТРабочиеМестаСотрудников(МенеджерВТ, Ложь, ПараметрыЗапроса);
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РабочиеМеста.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РабочиеМеста.ГоловнаяОрганизация КАК ГоловнаяОрганизация
		|ИЗ
		|	ВТРабочиеМестаСотрудников КАК РабочиеМеста";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТаблицаОбновления = МедицинскиеОсмотры.НоваяТаблицаОбновлениеПериодическихОсмотров();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаОбновления.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат ТаблицаОбновления;
	
КонецФункции

#КонецОбласти

#КонецЕсли
