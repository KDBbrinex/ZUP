#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция НовыеДанныеАвторизации() Экспорт
	ДанныеАвторизации = Новый Структура;
	ДанныеАвторизации.Вставить("Сервер", 			"");
	ДанныеАвторизации.Вставить("ИмяПользователя", 	"");
	ДанныеАвторизации.Вставить("Пароль", 			"");
	ДанныеАвторизации.Вставить("КаталогКалендарей", "");
	Возврат ДанныеАвторизации;

КонецФункции

Функция ДанныеАвторизации(Узел) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	Результат = Новый Структура;
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиСинхронизацииDAV.Узел.Пользователь КАК Пользователь,
	|	НастройкиСинхронизацииDAV.Сервер КАК Сервер,
	|	НастройкиСинхронизацииDAV.ИмяПользователя КАК ИмяПользователя,
	|	НастройкиСинхронизацииDAV.КаталогКалендарей КАК КаталогКалендарей
	|ИЗ
	|	РегистрСведений.НастройкиСинхронизацииDAV КАК НастройкиСинхронизацииDAV
	|ГДЕ
	|	НастройкиСинхронизацииDAV.Узел = &Узел");
	Запрос.УстановитьПараметр("Узел", Узел);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Для Каждого Поле Из РезультатЗапроса.Колонки Цикл
			Результат.Вставить(Поле.Имя, Выборка[Поле.Имя]);
		КонецЦикла;
		Пароль = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(Узел, "Пароль");
		Результат.Вставить("Пароль", Пароль);
	КонецЕсли;
	Возврат Результат;

КонецФункции

Процедура ЗаписатьДанныеАвторизации(Узел, Данные) Экспорт

	Если НЕ ЗначениеЗаполнено(Данные.ИмяПользователя) Тогда
		Возврат;
	КонецЕсли;
	УстановитьПривилегированныйРежим(Истина);
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Данные);
	МенеджерЗаписи.Узел = Узел;
	МенеджерЗаписи.Записать();
	ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(Узел, Данные.Пароль, "Пароль");

КонецПроцедуры

Процедура УдалитьДанныеАвторизации(Узел) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Узел = Узел;
	МенеджерЗаписи.Прочитать();
	Если МенеджерЗаписи.Выбран() Тогда
		МенеджерЗаписи.Удалить();
	КонецЕсли;
	ОбщегоНазначения.УдалитьДанныеИзБезопасногоХранилища(Узел, "Пароль");

КонецПроцедуры

#КонецОбласти

#КонецЕсли